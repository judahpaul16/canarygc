name: CI/CD Pipeline

on:
  release:
    types:
      - published

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Get latest release
        id: get_release
        run: |
          echo "LATEST_RELEASE=$(curl -sS -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r .tag_name)" >> $GITHUB_OUTPUT

      - name: Build and push services
        env:
          LATEST_RELEASE: ${{ steps.get_release.outputs.LATEST_RELEASE }}
        run: |
          echo "Latest release: $LATEST_RELEASE"

          # Build frontend service using the production compose file
          docker compose -f docker-compose.prod.yml build frontend

          # Tag and push the service to Docker Hub
          docker tag mmgcs-frontend ${{ secrets.DOCKERHUB_USERNAME }}/mmgcs:$LATEST_RELEASE
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mmgcs:$LATEST_RELEASE
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mmgcs:latest

          # Tag and push the service to GitHub Container Registry
          docker tag mmgcs-frontend ghcr.io/${{ github.repository_owner }}/mmgcs:$LATEST_RELEASE
          docker push ghcr.io/${{ github.repository_owner }}/mmgcs:$LATEST_RELEASE
          docker push ghcr.io/${{ github.repository_owner }}/mmgcs:latest