name: CI/CD Pipeline

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history, including tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Get the version
        id: get_version
        run: |
          VERSION=$(git tag | sort --version-sort | tail -n1)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}"

      - name: Build and push services
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          echo "Building version: $VERSION"

          # Build for AMD64
          DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.prod.yml build app
          docker tag canarygc-app ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-amd64
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-amd64
          docker tag canarygc-app ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-amd64
          docker push ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-amd64

          # Build for ARM64
          DOCKER_DEFAULT_PLATFORM=linux/arm64 docker compose -f docker-compose.prod.yml build app
          docker tag canarygc-app ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-arm64
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-arm64
          docker tag canarygc-app ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-arm64
          docker push ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-arm64

          # Create and push multi-arch manifests
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION \
            ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION

          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:$VERSION-arm64
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/canarygc:latest

          # Create and push GitHub Container Registry multi-arch manifests
          docker manifest create ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION \
            ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-amd64 \
            ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION

          docker manifest create ghcr.io/${{ github.repository_owner }}/canarygc:latest \
            ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-amd64 \
            ghcr.io/${{ github.repository_owner }}/canarygc:$VERSION-arm64
          docker manifest push ghcr.io/${{ github.repository_owner }}/canarygc:latest
