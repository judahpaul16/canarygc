*GitHub Repository "sveltejs/kit"*

'''--- .changeset/few-lamps-work.md ---
---
'@sveltejs/adapter-vercel': patch
---

chore: upgrade @vercel/nft to 0.27.7

'''
'''--- .changeset/fifty-cars-lie.md ---
---
'@sveltejs/kit': patch
---

fix: correctly match route groups preceding optional parameters

'''
'''--- .github/PULL_REQUEST_TEMPLATE.md ---
<!-- Your PR description here -->

---

### Please don't delete this checklist! Before submitting the PR, please make sure you do the following:
- [ ] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs
- [ ] This message body should clearly illustrate what problems it solves.
- [ ] Ideally, include a test that fails without this PR but passes with it.

### Tests
- [ ] Run the tests with `pnpm test` and lint the project with `pnpm lint` and `pnpm check`

### Changesets
- [ ] If your PR makes a change that should be noted in one or more packages' changelogs, generate a changeset by running `pnpm changeset` and following the prompts. Changesets that add features should be `minor` and those that fix bugs should be `patch`. Please prefix changeset messages with `feat:`, `fix:`, or `chore:`.

### Edits

- [ ] Please ensure that 'Allow edits from maintainers' is checked. PRs without this option may be closed.

'''
'''--- CONTRIBUTING.md ---
# SvelteKit Contributing Guide

## Preparing

This is a monorepo, meaning the repo holds multiple packages. It requires the use of [pnpm](https://pnpm.io/). You can [install pnpm](https://pnpm.io/installation) with:

```bash
npm i -g pnpm
```

`pnpm` commands run in the project's root directory will run on all sub-projects. You can checkout the code and install the dependencies with:

```bash
git clone git@github.com:sveltejs/kit.git
cd kit
pnpm install
```

## Testing Changes

### Playground

You can use the playground at [`playgrounds/basic`](./playgrounds/basic/) to experiment with your changes to SvelteKit locally.

### Linking local changes

If you want to test against an existing project, you can use [pnpm `overrides`](https://pnpm.io/package_json#pnpmoverrides) in that project:

```jsonc
{
	// ...
	"pnpm": {
		"overrides": {
			"@sveltejs/kit": "link:../path/to/svelte-kit/packages/kit",
			// additionally/optional the adapter you're using
			"@sveltejs/adapter-auto": "link:../path/to/svelte-kit/packages/adapter-auto"
		}
	}
}
```

### Testing PR changes

Each pull request will be built and published via [pkg.pr.new/](https://pkg.pr.new/). You can test the change by installing the package with your PR number:

```
npm add https://pkg.pr.new/sveltejs/kit/@sveltejs/kit@YOUR_PR_NUMBER_GOES_HERE
```

## Code structure

Entry points to be aware of are:

- [`packages/create-svelte`](https://github.com/sveltejs/kit/tree/main/packages/create-svelte) - code that's run when you create a new project with `npx sv create`
- [`packages/package`](https://github.com/sveltejs/kit/tree/main/packages/package) - for the `svelte-package` command
- [`packages/kit/src/core`](https://github.com/sveltejs/kit/tree/main/packages/kit/src/core) - code that's called at dev/build-time
- [`packages/kit/src/core/sync`](https://github.com/sveltejs/kit/tree/main/packages/kit/src/core/sync) - for `svelte-kit sync`, which regenerates routing info and type definitions
- [`packages/kit/src/runtime`](https://github.com/sveltejs/kit/tree/main/packages/kit/src/runtime) - code that's called at runtime
- [`packages/kit/src/exports/vite`](https://github.com/sveltejs/kit/tree/main/packages/kit/src/exports/vite) - for all the Vite plugin related stuff
- [`packages/adapter-[platform]`](https://github.com/sveltejs/kit/tree/main/packages) - for the various SvelteKit-provided adapters

## Good first issues

If you're looking for an issue to tackle to get familiar with the codebase and test suite, the [**low hanging fruit**](https://github.com/sveltejs/kit/issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22) label contains issues that ought to be relatively straightforward to fix. Check to see if a PR already exists for an issue before working on it!

Issues that have a clear solution but which _may_ be slightly more involved have the [**ready to implement**](https://github.com/sveltejs/kit/issues?q=is%3Aissue+is%3Aopen+label%3A%22ready+to+implement%22) label.

Issues with the [**soon**](https://github.com/sveltejs/kit/issues?q=is%3Aissue+is%3Aopen+milestone%3Asoon) milestone are higher priority than issues with the [**later**](https://github.com/sveltejs/kit/issues?q=is%3Aissue+is%3Aopen+milestone%3Alater+) label (though PRs for 'later' issues are still welcome, especially if you're affected by them).

## Testing

Run `pnpm test` to run the tests from all subpackages. Browser tests live in subdirectories of `packages/kit/test` such as `packages/kit/test/apps/basics`.

You can run the tests for only a single package by first moving to that directory. E.g. `cd packages/kit`.

For some packages you must rebuild each time before running the tests if you've made code changes. These packages have a `build` command. Packages like `packages/kit` don't require a build step.

To run a single integration test or otherwise control the running of the tests locally see [the Playwright CLI docs](https://playwright.dev/docs/test-cli). Note that you will need to run these commands from the test project directory such as `packages/kit/test/apps/basics`.

You can run the test server with `cd packages/kit/test/apps/basics; pnpm run dev` to hit it with your browser. The Playwright Inspector offers similar functionality.

You may need to install some dependencies first, e.g. with `npx playwright install-deps` (which only works on Ubuntu).

If there are tests that fail on the CI, you can retrieve the failed screenshots by going to the summary page of the CI run. You can usually find this by clicking on "Details" of the check results, clicking "Summary" at the top-left corner, and then scrolling to the bottom "Artifacts" section to download the archive.

It is very easy to introduce flakiness in a browser test. If you try to fix the flakiness in a test, you can run it until failure to gain some confidence you've fixed the test with a command like:

```
npx playwright test --workers=1 --repeat-each 1000 --max-failures 1 -g "accepts a Request object"
```

## Working on Vite and other dependencies

If you would like to test local changes to Vite or another dependency, you can build it and then use [`pnpm.overrides`](https://pnpm.io/package_json#pnpmoverrides). Please note that `pnpm.overrides` must be specified in the root `package.json` and you must first list the package as a dependency in the root `package.json`:

```jsonc
{
	// ...
	"dependencies": {
		"vite": "^4.0.0"
	},
	"pnpm": {
		"overrides": {
			"vite": "link:../path/to/vite/packages/vite"
		}
	}
}
```

## Documentation changes

All documentation for SvelteKit is in the [`documentation` directory](https://github.com/sveltejs/kit/tree/main/documentation), and any improvements should be made as a Pull Request to this repository. The site itself is located in the [`sveltejs/svelte.dev` repo](https://github.com/sveltejs/svelte.dev) and can be run locally to preview changes.

## Sending PRs

### Coding style

There are a few guidelines we follow:

- Internal variables are written with `snake_case` while external APIs are written with `camelCase`
- Provide a single object as the argument to public APIs. This object can have multiple properties
- Avoid creating new test projects under `packages/kit/test/apps` but reuse an existing one when possible
- Ensure `pnpm lint` and `pnpm check` pass. You can run `pnpm format` to format the code

To use the git hooks in the repo, which will save you from waiting for CI to tell you that you forgot to lint, run this:

```bash
git config core.hookspath .githooks
```

### Generating changelogs

For changes to be reflected in package changelogs, run `pnpm changeset` and follow the prompts.

### Type changes

If your PR changes the generated types of SvelteKit, run `pnpm generate:types` inside `packages/kit` and commit the new output (don't format it with Prettier!). Review the changes carefully to ensure there are no unwanted changes. If you don't commit type changes, CI will fail.

## Releases

The [Changesets GitHub action](https://github.com/changesets/action#with-publishing) will create and update a PR that applies changesets and publishes new versions of changed packages to npm.

New packages will need to be published manually the first time if they are scoped to the `@sveltejs` organisation, by running this from the package directory:

```bash
npm publish --access=public
```

'''
'''--- README.md ---
[![Chat](https://img.shields.io/discord/457912077277855764?label=chat&logo=discord)](https://svelte.dev/chat)

# SvelteKit

Web development, streamlined. Read the [documentation](https://svelte.dev/docs/kit) to get started.

### Packages

| Package                                                                     | Changelog                                                     |
| --------------------------------------------------------------------------- | ------------------------------------------------------------- |
| [@sveltejs/kit](packages/kit)                                               | [Changelog](packages/kit/CHANGELOG.md)                        |
| [@sveltejs/adapter-auto](packages/adapter-auto)                             | [Changelog](packages/adapter-auto/CHANGELOG.md)               |
| [@sveltejs/adapter-cloudflare](packages/adapter-cloudflare)                 | [Changelog](packages/adapter-cloudflare/CHANGELOG.md)         |
| [@sveltejs/adapter-cloudflare-workers](packages/adapter-cloudflare-workers) | [Changelog](packages/adapter-cloudflare-workers/CHANGELOG.md) |
| [@sveltejs/adapter-netlify](packages/adapter-netlify)                       | [Changelog](packages/adapter-netlify/CHANGELOG.md)            |
| [@sveltejs/adapter-node](packages/adapter-node)                             | [Changelog](packages/adapter-node/CHANGELOG.md)               |
| [@sveltejs/adapter-static](packages/adapter-static)                         | [Changelog](packages/adapter-static/CHANGELOG.md)             |
| [@sveltejs/adapter-vercel](packages/adapter-vercel)                         | [Changelog](packages/adapter-vercel/CHANGELOG.md)             |
| [@sveltejs/amp](packages/amp)                                               | [Changelog](packages/amp/CHANGELOG.md)                        |
| [@sveltejs/enhanced-img](packages/enhanced-img)                             | [Changelog](packages/enhanced-img/CHANGELOG.md)               |
| [@sveltejs/package](packages/package)                                       | [Changelog](packages/package/CHANGELOG.md)                    |
| [create-svelte](packages/create-svelte)                                     | [Changelog](packages/create-svelte/CHANGELOG.md)              |

[Additional adapters](https://sveltesociety.dev/packages?category=sveltekit-adapters) are maintained by the community.

## Bug reporting

Please make sure the issue you're reporting involves SvelteKit. Many issues related to how a project builds originate from [Vite](https://vitejs.dev/), which is used to build a SvelteKit project. You can create a new Vite project with `npm create vite@latest` for client-side only repros and `npm create vite-extra@latest` for SSR or library repros.

If an issue originates from Vite, please report it in the [Vite issue tracker](https://github.com/vitejs/vite/issues).

## Contributing

See [CONTRIBUTING.md](./CONTRIBUTING.md) for information on how to develop SvelteKit locally.

## Supporting Svelte

Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you'd like to support their efforts, please consider:

- [Becoming a backer on Open Collective](https://opencollective.com/svelte).

Funds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.

## License

[MIT](https://github.com/sveltejs/kit/blob/main/LICENSE)

'''
'''--- documentation/docs/10-getting-started/10-introduction.md ---
---
title: Introduction
---

## Before we begin

> [!NOTE] If you're new to Svelte or SvelteKit we recommend checking out the [interactive tutorial](/tutorial/kit).
>
> If you get stuck, reach out for help in the [Discord chatroom](https://svelte.dev/chat).

## What is SvelteKit?

SvelteKit is a framework for rapidly developing robust, performant web applications using [Svelte](../svelte). If you're coming from React, SvelteKit is similar to Next. If you're coming from Vue, SvelteKit is similar to Nuxt.

To learn more about the kinds of applications you can build with SvelteKit, see the [FAQ](faq#What-can-I-make-with-SvelteKit).

## What is Svelte?

In short, Svelte is a way of writing user interface components — like a navigation bar, comment section, or contact form — that users see and interact with in their browsers. The Svelte compiler converts your components to JavaScript that can be run to render the HTML for the page and to CSS that styles the page. You don't need to know Svelte to understand the rest of this guide, but it will help. If you'd like to learn more, check out [the Svelte tutorial](/tutorial).

## SvelteKit vs Svelte

Svelte renders UI components. You can compose these components and render an entire page with just Svelte, but you need more than just Svelte to write an entire app.

SvelteKit helps you build web apps while following modern best practices and providing solutions to common development challenges. It offers everything from basic functionalities — like a [router](glossary#Routing) that updates your UI when a link is clicked — to more advanced capabilities. Its extensive list of features includes [build optimizations](https://vitejs.dev/guide/features.html#build-optimizations) to load only the minimal required code; [offline support](service-workers); [preloading](link-options#data-sveltekit-preload-data) pages before user navigation; [configurable rendering](page-options) to handle different parts of your app on the server via [SSR](glossary#SSR), in the browser through [client-side rendering](glossary#CSR), or at build-time with [prerendering](glossary#Prerendering); [image optimization](images); and much more. Building an app with all the modern best practices is fiendishly complicated, but SvelteKit does all the boring stuff for you so that you can get on with the creative part.

It reflects changes to your code in the browser instantly to provide a lightning-fast and feature-rich development experience by leveraging [Vite](https://vitejs.dev/) with a [Svelte plugin](https://github.com/sveltejs/vite-plugin-svelte) to do [Hot Module Replacement (HMR)](https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/config.md#hot).

'''
'''--- documentation/docs/10-getting-started/20-creating-a-project.md ---
---
title: Creating a project
---

The easiest way to start building a SvelteKit app is to run `npx sv create`:

```bash
npx sv create my-app
cd my-app
npm install
npm run dev
```

The first command will scaffold a new project in the `my-app` directory asking you if you'd like to set up some basic tooling such as TypeScript. See [integrations](./integrations) for pointers on setting up additional tooling. The subsequent commands will then install its dependencies and start a server on [localhost:5173](http://localhost:5173).

There are two basic concepts:

- Each page of your app is a [Svelte](../svelte) component
- You create pages by adding files to the `src/routes` directory of your project. These will be server-rendered so that a user's first visit to your app is as fast as possible, then a client-side app takes over

Try editing the files to get a feel for how everything works.

## Editor setup

We recommend using [Visual Studio Code (aka VS Code)](https://code.visualstudio.com/download) with [the Svelte extension](https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode), but [support also exists for numerous other editors](https://sveltesociety.dev/resources#editor-support).

'''
'''--- documentation/docs/10-getting-started/30-project-structure.md ---
---
title: Project structure
---

A typical SvelteKit project looks like this:

```bash
my-project/
├ src/
│ ├ lib/
│ │ ├ server/
│ │ │ └ [your server-only lib files]
│ │ └ [your lib files]
│ ├ params/
│ │ └ [your param matchers]
│ ├ routes/
│ │ └ [your routes]
│ ├ app.html
│ ├ error.html
│ ├ hooks.client.js
│ ├ hooks.server.js
│ └ service-worker.js
├ static/
│ └ [your static assets]
├ tests/
│ └ [your tests]
├ package.json
├ svelte.config.js
├ tsconfig.json
└ vite.config.js
```

You'll also find common files like `.gitignore` and `.npmrc` (and `.prettierrc` and `eslint.config.js` and so on, if you chose those options when running `npx sv create`).

## Project files

### src

The `src` directory contains the meat of your project. Everything except `src/routes` and `src/app.html` is optional.

- `lib` contains your library code (utilities and components), which can be imported via the [`$lib`]($lib) alias, or packaged up for distribution using [`svelte-package`](packaging)
  - `server` contains your server-only library code. It can be imported by using the [`$lib/server`](server-only-modules) alias. SvelteKit will prevent you from importing these in client code.
- `params` contains any [param matchers](advanced-routing#Matching) your app needs
- `routes` contains the [routes](routing) of your application. You can also colocate other components that are only used within a single route here
- `app.html` is your page template — an HTML document containing the following placeholders:
  - `%sveltekit.head%` — `<link>` and `<script>` elements needed by the app, plus any `<svelte:head>` content
  - `%sveltekit.body%` — the markup for a rendered page. This should live inside a `<div>` or other element, rather than directly inside `<body>`, to prevent bugs caused by browser extensions injecting elements that are then destroyed by the hydration process. SvelteKit will warn you in development if this is not the case
  - `%sveltekit.assets%` — either [`paths.assets`](configuration#paths), if specified, or a relative path to [`paths.base`](configuration#paths)
  - `%sveltekit.nonce%` — a [CSP](configuration#csp) nonce for manually included links and scripts, if used
  - `%sveltekit.env.[NAME]%` - this will be replaced at render time with the `[NAME]` environment variable, which must begin with the [`publicPrefix`](configuration#env) (usually `PUBLIC_`). It will fallback to `''` if not matched.
- `error.html` is the page that is rendered when everything else fails. It can contain the following placeholders:
  - `%sveltekit.status%` — the HTTP status
  - `%sveltekit.error.message%` — the error message
- `hooks.client.js` contains your client [hooks](hooks)
- `hooks.server.js` contains your server [hooks](hooks)
- `service-worker.js` contains your [service worker](service-workers)

(Whether the project contains `.js` or `.ts` files depends on whether you opt to use TypeScript when you create your project. You can switch between JavaScript and TypeScript in the documentation using the toggle at the bottom of this page.)

If you added [Vitest](https://vitest.dev) when you set up your project, your unit tests will live in the `src` directory with a `.test.js` extension.

### static

Any static assets that should be served as-is, like `robots.txt` or `favicon.png`, go in here.

### tests

If you added [Playwright](https://playwright.dev/) for browser testing when you set up your project, the tests will live in this directory.

### package.json

Your `package.json` file must include `@sveltejs/kit`, `svelte` and `vite` as `devDependencies`.

When you create a project with `npx sv create`, you'll also notice that `package.json` includes `"type": "module"`. This means that `.js` files are interpreted as native JavaScript modules with `import` and `export` keywords. Legacy CommonJS files need a `.cjs` file extension.

### svelte.config.js

This file contains your Svelte and SvelteKit [configuration](configuration).

### tsconfig.json

This file (or `jsconfig.json`, if you prefer type-checked `.js` files over `.ts` files) configures TypeScript, if you added typechecking during `npx sv create`. Since SvelteKit relies on certain configuration being set a specific way, it generates its own `.svelte-kit/tsconfig.json` file which your own config `extends`.

### vite.config.js

A SvelteKit project is really just a [Vite](https://vitejs.dev) project that uses the [`@sveltejs/kit/vite`](@sveltejs-kit-vite) plugin, along with any other [Vite configuration](https://vitejs.dev/config/).

## Other files

### .svelte-kit

As you develop and build your project, SvelteKit will generate files in a `.svelte-kit` directory (configurable as [`outDir`](configuration#outDir)). You can ignore its contents, and delete them at any time (they will be regenerated when you next `dev` or `build`).

'''
'''--- documentation/docs/10-getting-started/40-web-standards.md ---
---
title: Web standards
---

Throughout this documentation, you'll see references to the standard [Web APIs](https://developer.mozilla.org/en-US/docs/Web/API) that SvelteKit builds on top of. Rather than reinventing the wheel, we _use the platform_, which means your existing web development skills are applicable to SvelteKit. Conversely, time spent learning SvelteKit will help you be a better web developer elsewhere.

These APIs are available in all modern browsers and in many non-browser environments like Cloudflare Workers, Deno, and Vercel Functions. During development, and in [adapters](adapters) for Node-based environments (including AWS Lambda), they're made available via polyfills where necessary (for now, that is — Node is rapidly adding support for more web standards).

In particular, you'll get comfortable with the following:

## Fetch APIs

SvelteKit uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/fetch) for getting data from the network. It's available in [hooks](hooks) and [server routes](routing#server) as well as in the browser.

> [!NOTE] A special version of `fetch` is available in [`load`](load) functions, [server hooks](hooks#Server-hooks) and [API routes](routing#server) for invoking endpoints directly during server-side rendering, without making an HTTP call, while preserving credentials. (To make credentialled fetches in server-side code outside `load`, you must explicitly pass `cookie` and/or `authorization` headers.) It also allows you to make relative requests, whereas server-side `fetch` normally requires a fully qualified URL.

Besides `fetch` itself, the [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) includes the following interfaces:

### Request

An instance of [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request) is accessible in [hooks](hooks) and [server routes](routing#server) as `event.request`. It contains useful methods like `request.json()` and `request.formData()` for getting data that was posted to an endpoint.

### Response

An instance of [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response) is returned from `await fetch(...)` and handlers in `+server.js` files. Fundamentally, a SvelteKit app is a machine for turning a `Request` into a `Response`.

### Headers

The [`Headers`](https://developer.mozilla.org/en-US/docs/Web/API/Headers) interface allows you to read incoming `request.headers` and set outgoing `response.headers`. For example, you can get the `request.headers` as shown below, and use the [`json` convenience function](@sveltejs-kit#json) to send modified `response.headers`:

```js
// @errors: 2461
/// file: src/routes/what-is-my-user-agent/+server.js
import { json } from '@sveltejs/kit';

/** @type {import('./$types').RequestHandler} */
export function GET({ request }) {
	// log all headers
	console.log(...request.headers);

	// create a JSON Response using a header we received
	return json({
		// retrieve a specific header
		userAgent: request.headers.get('user-agent')
	}, {
		// set a header on the response
		headers: { 'x-custom-header': 'potato' }
	});
}
```

## FormData

When dealing with HTML native form submissions you'll be working with [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) objects.

```js
// @errors: 2461
/// file: src/routes/hello/+server.js
import { json } from '@sveltejs/kit';

/** @type {import('./$types').RequestHandler} */
export async function POST(event) {
	const body = await event.request.formData();

	// log all fields
	console.log([...body]);

	return json({
		// get a specific field's value
		name: body.get('name') ?? 'world'
	});
}
```

## Stream APIs

Most of the time, your endpoints will return complete data, as in the `userAgent` example above. Sometimes, you may need to return a response that's too large to fit in memory in one go, or is delivered in chunks, and for this the platform provides [streams](https://developer.mozilla.org/en-US/docs/Web/API/Streams_API) — [ReadableStream](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream), [WritableStream](https://developer.mozilla.org/en-US/docs/Web/API/WritableStream) and [TransformStream](https://developer.mozilla.org/en-US/docs/Web/API/TransformStream).

## URL APIs

URLs are represented by the [`URL`](https://developer.mozilla.org/en-US/docs/Web/API/URL) interface, which includes useful properties like `origin` and `pathname` (and, in the browser, `hash`). This interface shows up in various places — `event.url` in [hooks](hooks) and [server routes](routing#server), [`$page.url`]($app-stores) in [pages](routing#page), `from` and `to` in [`beforeNavigate` and `afterNavigate`]($app-navigation) and so on.

### URLSearchParams

Wherever you encounter a URL, you can access query parameters via `url.searchParams`, which is an instance of [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams):

```js
// @filename: ambient.d.ts
declare global {
	const url: URL;
}

export {};

// @filename: index.js
// ---cut---
const foo = url.searchParams.get('foo');
```

## Web Crypto

The [Web Crypto API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API) is made available via the `crypto` global. It's used internally for [Content Security Policy](configuration#csp) headers, but you can also use it for things like generating UUIDs:

```js
const uuid = crypto.randomUUID();
```

'''
'''--- documentation/docs/10-getting-started/index.md ---
---
title: Getting started
---

'''
'''--- documentation/docs/20-core-concepts/10-routing.md ---
---
title: Routing
---

At the heart of SvelteKit is a _filesystem-based router_. The routes of your app — i.e. the URL paths that users can access — are defined by the directories in your codebase:

- `src/routes` is the root route
- `src/routes/about` creates an `/about` route
- `src/routes/blog/[slug]` creates a route with a _parameter_, `slug`, that can be used to load data dynamically when a user requests a page like `/blog/hello-world`

> [!NOTE] You can change `src/routes` to a different directory by editing the [project config](configuration).

Each route directory contains one or more _route files_, which can be identified by their `+` prefix.

We'll introduce these files in a moment in more detail, but here are a few simple rules to help you remember how SvelteKit's routing works:

* All files can run on the server
* All files run on the client except `+server` files
* `+layout` and `+error` files apply to subdirectories as well as the directory they live in

## +page

### +page.svelte

A `+page.svelte` component defines a page of your app. By default, pages are rendered both on the server ([SSR](glossary#SSR)) for the initial request and in the browser ([CSR](glossary#CSR)) for subsequent navigation.

```svelte
<!--- file: src/routes/+page.svelte --->
<h1>Hello and welcome to my site!</h1>
<a href="/about">About my site</a>
```

```svelte
<!--- file: src/routes/about/+page.svelte --->
<h1>About this site</h1>
<p>TODO...</p>
<a href="/">Home</a>
```

Pages can receive data from `load` functions via the `data` prop.

```svelte
<!--- file: src/routes/blog/[slug]/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();
</script>

<h1>{data.title}</h1>
<div>{@html data.content}</div>
```

> [!LEGACY]
> In Svelte 4, you'd use `export let data` instead

> [!NOTE] Note that SvelteKit uses `<a>` elements to navigate between routes, rather than a framework-specific `<Link>` component.

### +page.js

Often, a page will need to load some data before it can be rendered. For this, we add a `+page.js` module that exports a `load` function:

```js
/// file: src/routes/blog/[slug]/+page.js
import { error } from '@sveltejs/kit';

/** @type {import('./$types').PageLoad} */
export function load({ params }) {
	if (params.slug === 'hello-world') {
		return {
			title: 'Hello world!',
			content: 'Welcome to our blog. Lorem ipsum dolor sit amet...'
		};
	}

	error(404, 'Not found');
}
```

This function runs alongside `+page.svelte`, which means it runs on the server during server-side rendering and in the browser during client-side navigation. See [`load`](load) for full details of the API.

As well as `load`, `+page.js` can export values that configure the page's behaviour:

- `export const prerender = true` or `false` or `'auto'`
- `export const ssr = true` or `false`
- `export const csr = true` or `false`

You can find more information about these in [page options](page-options).

### +page.server.js

If your `load` function can only run on the server — for example, if it needs to fetch data from a database or you need to access private [environment variables]($env-static-private) like API keys — then you can rename `+page.js` to `+page.server.js` and change the `PageLoad` type to `PageServerLoad`.

```js
/// file: src/routes/blog/[slug]/+page.server.js

// @filename: ambient.d.ts
declare global {
	const getPostFromDatabase: (slug: string) => {
		title: string;
		content: string;
	}
}

export {};

// @filename: index.js
// ---cut---
import { error } from '@sveltejs/kit';

/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	const post = await getPostFromDatabase(params.slug);

	if (post) {
		return post;
	}

	error(404, 'Not found');
}
```

During client-side navigation, SvelteKit will load this data from the server, which means that the returned value must be serializable using [devalue](https://github.com/rich-harris/devalue). See [`load`](load) for full details of the API.

Like `+page.js`, `+page.server.js` can export [page options](page-options) — `prerender`, `ssr` and `csr`.

A `+page.server.js` file can also export _actions_. If `load` lets you read data from the server, `actions` let you write data _to_ the server using the `<form>` element. To learn how to use them, see the [form actions](form-actions) section.

## +error

If an error occurs during `load`, SvelteKit will render a default error page. You can customise this error page on a per-route basis by adding an `+error.svelte` file:

```svelte
<!--- file: src/routes/blog/[slug]/+error.svelte --->
<script>
	import { page } from '$app/stores';
</script>

<h1>{$page.status}: {$page.error.message}</h1>
```

SvelteKit will 'walk up the tree' looking for the closest error boundary — if the file above didn't exist it would try `src/routes/blog/+error.svelte` and then `src/routes/+error.svelte` before rendering the default error page. If _that_ fails (or if the error was thrown from the `load` function of the root `+layout`, which sits 'above' the root `+error`), SvelteKit will bail out and render a static fallback error page, which you can customise by creating a `src/error.html` file.

If the error occurs inside a `load` function in `+layout(.server).js`, the closest error boundary in the tree is an `+error.svelte` file _above_ that layout (not next to it).

If no route can be found (404), `src/routes/+error.svelte` (or the default error page, if that file does not exist) will be used.

> [!NOTE] `+error.svelte` is _not_ used when an error occurs inside [`handle`](hooks#Server-hooks-handle) or a [+server.js](#server) request handler.

You can read more about error handling [here](errors).

## +layout

So far, we've treated pages as entirely standalone components — upon navigation, the existing `+page.svelte` component will be destroyed, and a new one will take its place.

But in many apps, there are elements that should be visible on _every_ page, such as top-level navigation or a footer. Instead of repeating them in every `+page.svelte`, we can put them in _layouts_.

### +layout.svelte

To create a layout that applies to every page, make a file called `src/routes/+layout.svelte`. The default layout (the one that SvelteKit uses if you don't bring your own) looks like this...

```svelte
<script>
	let { children } = $props();
</script>

{@render children()}
```

...but we can add whatever markup, styles and behaviour we want. The only requirement is that the component includes a `@render` tag for the page content. For example, let's add a nav bar:

```svelte
<!---- file: src/routes/+layout.svelte --->
<script>
	let { children } = $props();
</script>

<nav>
	<a href="/">Home</a>
	<a href="/about">About</a>
	<a href="/settings">Settings</a>
</nav>

{@render children()}
```

If we create pages for `/`, `/about` and `/settings`...

```html
/// file: src/routes/+page.svelte
<h1>Home</h1>
```

```html
/// file: src/routes/about/+page.svelte
<h1>About</h1>
```

```html
/// file: src/routes/settings/+page.svelte
<h1>Settings</h1>
```

...the nav will always be visible, and clicking between the three pages will only result in the `<h1>` being replaced.

Layouts can be _nested_. Suppose we don't just have a single `/settings` page, but instead have nested pages like `/settings/profile` and `/settings/notifications` with a shared submenu (for a real-life example, see [github.com/settings](https://github.com/settings)).

We can create a layout that only applies to pages below `/settings` (while inheriting the root layout with the top-level nav):

```svelte
<!--- file: src/routes/settings/+layout.svelte --->
<script>
	/** @type {{ data: import('./$types').LayoutData, children: import('svelte').Snippet }} */
	let { data, children } = $props();
</script>

<h1>Settings</h1>

<div class="submenu">
	{#each data.sections as section}
		<a href="/settings/{section.slug}">{section.title}</a>
	{/each}
</div>

{@render children()}
```

You can see how `data` is populated by looking at the `+layout.js` example in the next section just below.

By default, each layout inherits the layout above it. Sometimes that isn't what you want - in this case, [advanced layouts](advanced-routing#Advanced-layouts) can help you.

### +layout.js

Just like `+page.svelte` loading data from `+page.js`, your `+layout.svelte` component can get data from a [`load`](load) function in `+layout.js`.

```js
/// file: src/routes/settings/+layout.js
/** @type {import('./$types').LayoutLoad} */
export function load() {
	return {
		sections: [
			{ slug: 'profile', title: 'Profile' },
			{ slug: 'notifications', title: 'Notifications' }
		]
	};
}
```

If a `+layout.js` exports [page options](page-options) — `prerender`, `ssr` and `csr` — they will be used as defaults for child pages.

Data returned from a layout's `load` function is also available to all its child pages:

```svelte
<!--- file: src/routes/settings/profile/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();

	console.log(data.sections); // [{ slug: 'profile', title: 'Profile' }, ...]
</script>
```

> [!NOTE] Often, layout data is unchanged when navigating between pages. SvelteKit will intelligently rerun [`load`](load) functions when necessary.

### +layout.server.js

To run your layout's `load` function on the server, move it to `+layout.server.js`, and change the `LayoutLoad` type to `LayoutServerLoad`.

Like `+layout.js`, `+layout.server.js` can export [page options](page-options) — `prerender`, `ssr` and `csr`.

## +server

As well as pages, you can define routes with a `+server.js` file (sometimes referred to as an 'API route' or an 'endpoint'), which gives you full control over the response. Your `+server.js` file exports functions corresponding to HTTP verbs like `GET`, `POST`, `PATCH`, `PUT`, `DELETE`, `OPTIONS`, and `HEAD` that take a `RequestEvent` argument and return a [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.

For example we could create an `/api/random-number` route with a `GET` handler:

```js
/// file: src/routes/api/random-number/+server.js
import { error } from '@sveltejs/kit';

/** @type {import('./$types').RequestHandler} */
export function GET({ url }) {
	const min = Number(url.searchParams.get('min') ?? '0');
	const max = Number(url.searchParams.get('max') ?? '1');

	const d = max - min;

	if (isNaN(d) || d < 0) {
		error(400, 'min and max must be numbers, and min must be less than max');
	}

	const random = min + Math.random() * d;

	return new Response(String(random));
}
```

The first argument to `Response` can be a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream), making it possible to stream large amounts of data or create server-sent events (unless deploying to platforms that buffer responses, like AWS Lambda).

You can use the [`error`](@sveltejs-kit#error), [`redirect`](@sveltejs-kit#redirect) and [`json`](@sveltejs-kit#json) methods from `@sveltejs/kit` for convenience (but you don't have to).

If an error is thrown (either `error(...)` or an unexpected error), the response will be a JSON representation of the error or a fallback error page — which can be customised via `src/error.html` — depending on the `Accept` header. The [`+error.svelte`](#error) component will _not_ be rendered in this case. You can read more about error handling [here](errors).

> [!NOTE] When creating an `OPTIONS` handler, note that Vite will inject `Access-Control-Allow-Origin` and `Access-Control-Allow-Methods` headers — these will not be present in production unless you add them.

### Receiving data

By exporting `POST`/`PUT`/`PATCH`/`DELETE`/`OPTIONS`/`HEAD` handlers, `+server.js` files can be used to create a complete API:

```svelte
<!--- file: src/routes/add/+page.svelte --->
<script>
	let a = 0;
	let b = 0;
	let total = 0;

	async function add() {
		const response = await fetch('/api/add', {
			method: 'POST',
			body: JSON.stringify({ a, b }),
			headers: {
				'content-type': 'application/json'
			}
		});

		total = await response.json();
	}
</script>

<input type="number" bind:value={a}> +
<input type="number" bind:value={b}> =
{total}

<button onclick={add}>Calculate</button>
```

```js
/// file: src/routes/api/add/+server.js
import { json } from '@sveltejs/kit';

/** @type {import('./$types').RequestHandler} */
export async function POST({ request }) {
	const { a, b } = await request.json();
	return json(a + b);
}
```

> [!NOTE] In general, [form actions](form-actions) are a better way to submit data from the browser to the server.

> [!NOTE] If a `GET` handler is exported, a `HEAD` request will return the `content-length` of the `GET` handler's response body.

### Fallback method handler

Exporting the `fallback` handler will match any unhandled request methods, including methods like `MOVE` which have no dedicated export from `+server.js`.

```js
// @errors: 7031
/// file: src/routes/api/add/+server.js
import { json, text } from '@sveltejs/kit';

export async function POST({ request }) {
	const { a, b } = await request.json();
	return json(a + b);
}

// This handler will respond to PUT, PATCH, DELETE, etc.
/** @type {import('./$types').RequestHandler} */
export async function fallback({ request }) {
	return text(`I caught your ${request.method} request!`);
}
```

> [!NOTE] For `HEAD` requests, the `GET` handler takes precedence over the `fallback` handler.

### Content negotiation

`+server.js` files can be placed in the same directory as `+page` files, allowing the same route to be either a page or an API endpoint. To determine which, SvelteKit applies the following rules:

- `PUT`/`PATCH`/`DELETE`/`OPTIONS` requests are always handled by `+server.js` since they do not apply to pages
- `GET`/`POST`/`HEAD` requests are treated as page requests if the `accept` header prioritises `text/html` (in other words, it's a browser page request), else they are handled by `+server.js`.
- Responses to `GET` requests will include a `Vary: Accept` header, so that proxies and browsers cache HTML and JSON responses separately.

## $types

Throughout the examples above, we've been importing types from a `$types.d.ts` file. This is a file SvelteKit creates for you in a hidden directory if you're using TypeScript (or JavaScript with JSDoc type annotations) to give you type safety when working with your root files.

For example, annotating `let { data } = $props()` with `PageData` (or `LayoutData`, for a `+layout.svelte` file) tells TypeScript that the type of `data` is whatever was returned from `load`:

```svelte
<!--- file: src/routes/blog/[slug]/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();
</script>
```

In turn, annotating the `load` function with `PageLoad`, `PageServerLoad`, `LayoutLoad` or `LayoutServerLoad` (for `+page.js`, `+page.server.js`, `+layout.js` and `+layout.server.js` respectively) ensures that `params` and the return value are correctly typed.

If you're using VS Code or any IDE that supports the language server protocol and TypeScript plugins then you can omit these types _entirely_! Svelte's IDE tooling will insert the correct types for you, so you'll get type checking without writing them yourself. It also works with our command line tool `svelte-check`.

You can read more about omitting `$types` in our [blog post](/blog/zero-config-type-safety) about it.

## Other files

Any other files inside a route directory are ignored by SvelteKit. This means you can colocate components and utility modules with the routes that need them.

If components and modules are needed by multiple routes, it's a good idea to put them in [`$lib`]($lib).

## Further reading

- [Tutorial: Routing](/tutorial/kit/pages)
- [Tutorial: API routes](/tutorial/kit/get-handlers)
- [Docs: Advanced routing](advanced-routing)

'''
'''--- documentation/docs/20-core-concepts/20-load.md ---
---
title: Loading data
---

Before a [`+page.svelte`](routing#page-page.svelte) component (and its containing [`+layout.svelte`](routing#layout-layout.svelte) components) can be rendered, we often need to get some data. This is done by defining `load` functions.

## Page data

A `+page.svelte` file can have a sibling `+page.js` that exports a `load` function, the return value of which is available to the page via the `data` prop:

```js
/// file: src/routes/blog/[slug]/+page.js
/** @type {import('./$types').PageLoad} */
export function load({ params }) {
	return {
		post: {
			title: `Title for ${params.slug} goes here`,
			content: `Content for ${params.slug} goes here`
		}
	};
}
```

```svelte
<!--- file: src/routes/blog/[slug]/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();
</script>

<h1>{data.post.title}</h1>
<div>{@html data.post.content}</div>
```

> [!LEGACY]
> In Svelte 4, you'd use `export let data` instead

Thanks to the generated `$types` module, we get full type safety.

A `load` function in a `+page.js` file runs both on the server and in the browser (unless combined with `export const ssr = false`, in which case it will [only run in the browser](page-options#ssr)). If your `load` function should _always_ run on the server (because it uses private environment variables, for example, or accesses a database) then it would go in a `+page.server.js` instead.

A more realistic version of your blog post's `load` function, that only runs on the server and pulls data from a database, might look like this:

```js
/// file: src/routes/blog/[slug]/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getPost(slug: string): Promise<{ title: string, content: string }>
}

// @filename: index.js
// ---cut---
import * as db from '$lib/server/database';

/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	return {
		post: await db.getPost(params.slug)
	};
}
```

Notice that the type changed from `PageLoad` to `PageServerLoad`, because server `load` functions can access additional arguments. To understand when to use `+page.js` and when to use `+page.server.js`, see [Universal vs server](load#Universal-vs-server).

## Layout data

Your `+layout.svelte` files can also load data, via `+layout.js` or `+layout.server.js`.

```js
/// file: src/routes/blog/[slug]/+layout.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getPostSummaries(): Promise<Array<{ title: string, slug: string }>>
}

// @filename: index.js
// ---cut---
import * as db from '$lib/server/database';

/** @type {import('./$types').LayoutServerLoad} */
export async function load() {
	return {
		posts: await db.getPostSummaries()
	};
}
```

```svelte
<!--- file: src/routes/blog/[slug]/+layout.svelte --->
<script>
	/** @type {{ data: import('./$types').LayoutData, children: Snippet }} */
	let { data, children } = $props();
</script>

<main>
	<!-- +page.svelte is `@render`ed here -->
	{@render children()}
</main>

<aside>
	<h2>More posts</h2>
	<ul>
		{#each data.posts as post}
			<li>
				<a href="/blog/{post.slug}">
					{post.title}
				</a>
			</li>
		{/each}
	</ul>
</aside>
```

Data returned from layout `load` functions is available to child `+layout.svelte` components and the `+page.svelte` component as well as the layout that it 'belongs' to.

```svelte
/// file: src/routes/blog/[slug]/+page.svelte
<script>
	+++import { page } from '$app/stores';+++

	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();

+++	// we can access `data.posts` because it's returned from
	// the parent layout `load` function
	let index = $derived(data.posts.findIndex(post => post.slug === $page.params.slug));
	let next = $derived(data.posts[index + 1]);+++
</script>

<h1>{data.post.title}</h1>
<div>{@html data.post.content}</div>

+++{#if next}
	<p>Next post: <a href="/blog/{next.slug}">{next.title}</a></p>
{/if}+++
```

> [!NOTE] If multiple `load` functions return data with the same key, the last one 'wins' — the result of a layout `load` returning `{ a: 1, b: 2 }` and a page `load` returning `{ b: 3, c: 4 }` would be `{ a: 1, b: 3, c: 4 }`.

## $page.data

The `+page.svelte` component, and each `+layout.svelte` component above it, has access to its own data plus all the data from its parents.

In some cases, we might need the opposite — a parent layout might need to access page data or data from a child layout. For example, the root layout might want to access a `title` property returned from a `load` function in `+page.js` or `+page.server.js`. This can be done with `$page.data`:

```svelte
<!--- file: src/routes/+layout.svelte --->
<script>
	import { page } from '$app/stores';
</script>

<svelte:head>
	<title>{$page.data.title}</title>
</svelte:head>
```

Type information for `$page.data` is provided by `App.PageData`.

## Universal vs server

As we've seen, there are two types of `load` function:

* `+page.js` and `+layout.js` files export _universal_ `load` functions that run both on the server and in the browser
* `+page.server.js` and `+layout.server.js` files export _server_ `load` functions that only run server-side

Conceptually, they're the same thing, but there are some important differences to be aware of.

### When does which load function run?

Server `load` functions _always_ run on the server.

By default, universal `load` functions run on the server during SSR when the user first visits your page. They will then run again during hydration, reusing any responses from [fetch requests](#Making-fetch-requests). All subsequent invocations of universal `load` functions happen in the browser. You can customize the behavior through [page options](page-options). If you disable [server side rendering](page-options#ssr), you'll get an SPA and universal `load` functions _always_ run on the client.

If a route contains both universal and server `load` functions, the server `load` runs first.

A `load` function is invoked at runtime, unless you [prerender](page-options#prerender) the page — in that case, it's invoked at build time.

### Input

Both universal and server `load` functions have access to properties describing the request (`params`, `route` and `url`) and various functions (`fetch`, `setHeaders`, `parent`, `depends` and `untrack`). These are described in the following sections.

Server `load` functions are called with a `ServerLoadEvent`, which inherits `clientAddress`, `cookies`, `locals`, `platform` and `request` from `RequestEvent`.

Universal `load` functions are called with a `LoadEvent`, which has a `data` property. If you have `load` functions in both `+page.js` and `+page.server.js` (or `+layout.js` and `+layout.server.js`), the return value of the server `load` function is the `data` property of the universal `load` function's argument.

### Output

A universal `load` function can return an object containing any values, including things like custom classes and component constructors.

A server `load` function must return data that can be serialized with [devalue](https://github.com/rich-harris/devalue) — anything that can be represented as JSON plus things like `BigInt`, `Date`, `Map`, `Set` and `RegExp`, or repeated/cyclical references — so that it can be transported over the network. Your data can include [promises](#Streaming-with-promises), in which case it will be streamed to browsers.

### When to use which

Server `load` functions are convenient when you need to access data directly from a database or filesystem, or need to use private environment variables.

Universal `load` functions are useful when you need to `fetch` data from an external API and don't need private credentials, since SvelteKit can get the data directly from the API rather than going via your server. They are also useful when you need to return something that can't be serialized, such as a Svelte component constructor.

In rare cases, you might need to use both together — for example, you might need to return an instance of a custom class that was initialised with data from your server. When using both, the server `load` return value is _not_ passed directly to the page, but to the universal `load` function (as the `data` property):

```js
/// file: src/routes/+page.server.js
/** @type {import('./$types').PageServerLoad} */
export async function load() {
	return {
		serverMessage: 'hello from server load function'
	};
}
```

```js
/// file: src/routes/+page.js
// @errors: 18047
/** @type {import('./$types').PageLoad} */
export async function load({ data }) {
	return {
		serverMessage: data.serverMessage,
		universalMessage: 'hello from universal load function'
	};
}
```

## Using URL data

Often the `load` function depends on the URL in one way or another. For this, the `load` function provides you with `url`, `route` and `params`.

### url

An instance of [`URL`](https://developer.mozilla.org/en-US/docs/Web/API/URL), containing properties like the `origin`, `hostname`, `pathname` and `searchParams` (which contains the parsed query string as a [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) object). `url.hash` cannot be accessed during `load`, since it is unavailable on the server.

> [!NOTE] In some environments this is derived from request headers during server-side rendering. If you're using [adapter-node](adapter-node), for example, you may need to configure the adapter in order for the URL to be correct.

### route

Contains the name of the current route directory, relative to `src/routes`:

```js
/// file: src/routes/a/[b]/[...c]/+page.js
/** @type {import('./$types').PageLoad} */
export function load({ route }) {
	console.log(route.id); // '/a/[b]/[...c]'
}
```

### params

`params` is derived from `url.pathname` and `route.id`.

Given a `route.id` of `/a/[b]/[...c]` and a `url.pathname` of `/a/x/y/z`, the `params` object would look like this:

```json
{
	"b": "x",
	"c": "y/z"
}
```

## Making fetch requests

To get data from an external API or a `+server.js` handler, you can use the provided `fetch` function, which behaves identically to the [native `fetch` web API](https://developer.mozilla.org/en-US/docs/Web/API/fetch) with a few additional features:

- It can be used to make credentialed requests on the server, as it inherits the `cookie` and `authorization` headers for the page request.
- It can make relative requests on the server (ordinarily, `fetch` requires a URL with an origin when used in a server context).
- Internal requests (e.g. for `+server.js` routes) go directly to the handler function when running on the server, without the overhead of an HTTP call.
- During server-side rendering, the response will be captured and inlined into the rendered HTML by hooking into the `text`, `json` and `arrayBuffer` methods of the `Response` object. Note that headers will _not_ be serialized, unless explicitly included via [`filterSerializedResponseHeaders`](hooks#Server-hooks-handle).
- During hydration, the response will be read from the HTML, guaranteeing consistency and preventing an additional network request - if you received a warning in your browser console when using the browser `fetch` instead of the `load` `fetch`, this is why.

```js
/// file: src/routes/items/[id]/+page.js
/** @type {import('./$types').PageLoad} */
export async function load({ fetch, params }) {
	const res = await fetch(`/api/items/${params.id}`);
	const item = await res.json();

	return { item };
}
```

## Cookies

A server `load` function can get and set [`cookies`](@sveltejs-kit#Cookies).

```js
/// file: src/routes/+layout.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getUser(sessionid: string | undefined): Promise<{ name: string, avatar: string }>
}

// @filename: index.js
// ---cut---
import * as db from '$lib/server/database';

/** @type {import('./$types').LayoutServerLoad} */
export async function load({ cookies }) {
	const sessionid = cookies.get('sessionid');

	return {
		user: await db.getUser(sessionid)
	};
}
```

Cookies will only be passed through the provided `fetch` function if the target host is the same as the SvelteKit application or a more specific subdomain of it.

For example, if SvelteKit is serving my.domain.com:
- domain.com WILL NOT receive cookies
- my.domain.com WILL receive cookies
- api.domain.com WILL NOT receive cookies
- sub.my.domain.com WILL receive cookies

Other cookies will not be passed when `credentials: 'include'` is set, because SvelteKit does not know which domain which cookie belongs to (the browser does not pass this information along), so it's not safe to forward any of them. Use the [handleFetch hook](hooks#Server-hooks-handleFetch) to work around it.

## Headers

Both server and universal `load` functions have access to a `setHeaders` function that, when running on the server, can set headers for the response. (When running in the browser, `setHeaders` has no effect.) This is useful if you want the page to be cached, for example:

```js
// @errors: 2322 1360
/// file: src/routes/products/+page.js
/** @type {import('./$types').PageLoad} */
export async function load({ fetch, setHeaders }) {
	const url = `https://cms.example.com/products.json`;
	const response = await fetch(url);

	// Headers are only set during SSR, caching the page's HTML
	// for the same length of time as the underlying data.
	setHeaders({
		age: response.headers.get('age'),
		'cache-control': response.headers.get('cache-control')
	});

	return response.json();
}
```

Setting the same header multiple times (even in separate `load` functions) is an error. You can only set a given header once using the `setHeaders` function. You cannot add a `set-cookie` header with `setHeaders` — use `cookies.set(name, value, options)` instead.

## Using parent data

Occasionally it's useful for a `load` function to access data from a parent `load` function, which can be done with `await parent()`:

```js
/// file: src/routes/+layout.js
/** @type {import('./$types').LayoutLoad} */
export function load() {
	return { a: 1 };
}
```

```js
/// file: src/routes/abc/+layout.js
/** @type {import('./$types').LayoutLoad} */
export async function load({ parent }) {
	const { a } = await parent();
	return { b: a + 1 };
}
```

```js
/// file: src/routes/abc/+page.js
/** @type {import('./$types').PageLoad} */
export async function load({ parent }) {
	const { a, b } = await parent();
	return { c: a + b };
}
```

```svelte
<!--- file: src/routes/abc/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();
</script>

<!-- renders `1 + 2 = 3` -->
<p>{data.a} + {data.b} = {data.c}</p>
```

> [!NOTE] Notice that the `load` function in `+page.js` receives the merged data from both layout `load` functions, not just the immediate parent.

Inside `+page.server.js` and `+layout.server.js`, `parent` returns data from parent `+layout.server.js` files.

In `+page.js` or `+layout.js` it will return data from parent `+layout.js` files. However, a missing `+layout.js` is treated as a `({ data }) => data` function, meaning that it will also return data from parent `+layout.server.js` files that are not 'shadowed' by a `+layout.js` file

Take care not to introduce waterfalls when using `await parent()`. Here, for example, `getData(params)` does not depend on the result of calling `parent()`, so we should call it first to avoid a delayed render.

```js
/// file: +page.js
// @filename: ambient.d.ts
declare function getData(params: Record<string, string>): Promise<{ meta: any }>

// @filename: index.js
// ---cut---
/** @type {import('./$types').PageLoad} */
export async function load({ params, parent }) {
	---const parentData = await parent();---
	const data = await getData(params);
	+++const parentData = await parent();+++

	return {
		...data,
		meta: { ...parentData.meta, ...data.meta }
	};
}
```

## Errors

If an error is thrown during `load`, the nearest [`+error.svelte`](routing#error) will be rendered. For [_expected_](errors#Expected-errors) errors, use the `error` helper from `@sveltejs/kit` to specify the HTTP status code and an optional message:

```js
/// file: src/routes/admin/+layout.server.js
// @filename: ambient.d.ts
declare namespace App {
	interface Locals {
		user?: {
			name: string;
			isAdmin: boolean;
		}
	}
}

// @filename: index.js
// ---cut---
import { error } from '@sveltejs/kit';

/** @type {import('./$types').LayoutServerLoad} */
export function load({ locals }) {
	if (!locals.user) {
		error(401, 'not logged in');
	}

	if (!locals.user.isAdmin) {
		error(403, 'not an admin');
	}
}
```

Calling `error(...)` will throw an exception, making it easy to stop execution from inside helper functions.

If an [_unexpected_](errors#Unexpected-errors) error is thrown, SvelteKit will invoke [`handleError`](hooks#Shared-hooks-handleError) and treat it as a 500 Internal Error.

> [!NOTE] [In SvelteKit 1.x](migrating-to-sveltekit-2#redirect-and-error-are-no-longer-thrown-by-you) you had to `throw` the error yourself

## Redirects

To redirect users, use the `redirect` helper from `@sveltejs/kit` to specify the location to which they should be redirected alongside a `3xx` status code. Like `error(...)`, calling `redirect(...)` will throw an exception, making it easy to stop execution from inside helper functions.

```js
/// file: src/routes/user/+layout.server.js
// @filename: ambient.d.ts
declare namespace App {
	interface Locals {
		user?: {
			name: string;
		}
	}
}

// @filename: index.js
// ---cut---
import { redirect } from '@sveltejs/kit';

/** @type {import('./$types').LayoutServerLoad} */
export function load({ locals }) {
	if (!locals.user) {
		redirect(307, '/login');
	}
}
```

> [!NOTE] Don't use `redirect()` inside a `try {...}` block, as the redirect will immediately trigger the catch statement.

In the browser, you can also navigate programmatically outside of a `load` function using [`goto`]($app-navigation#goto) from [`$app.navigation`]($app-navigation).

> [!NOTE] [In SvelteKit 1.x](migrating-to-sveltekit-2#redirect-and-error-are-no-longer-thrown-by-you) you had to `throw` the `redirect` yourself

## Streaming with promises

When using a server `load`, promises will be streamed to the browser as they resolve. This is useful if you have slow, non-essential data, since you can start rendering the page before all the data is available:

```js
/// file: src/routes/blog/[slug]/+page.server.js
// @filename: ambient.d.ts
declare global {
	const loadPost: (slug: string) => Promise<{ title: string, content: string }>;
	const loadComments: (slug: string) => Promise<{ content: string }>;
}

export {};

// @filename: index.js
// ---cut---
/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	return {
		// make sure the `await` happens at the end, otherwise we
		// can't start loading comments until we've loaded the post
		comments: loadComments(params.slug),
		post: await loadPost(params.slug)
	};
}
```

This is useful for creating skeleton loading states, for example:

```svelte
<!--- file: src/routes/blog/[slug]/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();
</script>

<h1>{data.post.title}</h1>
<div>{@html data.post.content}</div>

{#await data.comments}
	Loading comments...
{:then comments}
	{#each comments as comment}
		<p>{comment.content}</p>
	{/each}
{:catch error}
	<p>error loading comments: {error.message}</p>
{/await}
```

When streaming data, be careful to handle promise rejections correctly. More specifically, the server could crash with an "unhandled promise rejection" error if a lazy-loaded promise fails before rendering starts (at which point it's caught) and isn't handling the error in some way. When using SvelteKit's `fetch` directly in the `load` function, SvelteKit will handle this case for you. For other promises, it is enough to attach a noop-`catch` to the promise to mark it as handled.

```js
/// file: src/routes/+page.server.js
/** @type {import('./$types').PageServerLoad} */
export function load({ fetch }) {
	const ok_manual = Promise.reject();
	ok_manual.catch(() => {});

	return {
		ok_manual,
		ok_fetch: fetch('/fetch/that/could/fail'),
		dangerous_unhandled: Promise.reject()
	};
}
```

> [!NOTE] On platforms that do not support streaming, such as AWS Lambda or Firebase, responses will be buffered. This means the page will only render once all promises resolve. If you are using a proxy (e.g. NGINX), make sure it does not buffer responses from the proxied server.

> [!NOTE] Streaming data will only work when JavaScript is enabled. You should avoid returning promises from a universal `load` function if the page is server rendered, as these are _not_ streamed — instead, the promise is recreated when the function reruns in the browser.

> [!NOTE] The headers and status code of a response cannot be changed once the response has started streaming, therefore you cannot `setHeaders` or throw redirects inside a streamed promise.

> [!NOTE] [In SvelteKit 1.x](migrating-to-sveltekit-2#Top-level-promises-are-no-longer-awaited) top-level promises were automatically awaited, only nested promises were streamed.

## Parallel loading

When rendering (or navigating to) a page, SvelteKit runs all `load` functions concurrently, avoiding a waterfall of requests. During client-side navigation, the result of calling multiple server `load` functions are grouped into a single response. Once all `load` functions have returned, the page is rendered.

## Rerunning load functions

SvelteKit tracks the dependencies of each `load` function to avoid rerunning it unnecessarily during navigation.

For example, given a pair of `load` functions like these...

```js
/// file: src/routes/blog/[slug]/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getPost(slug: string): Promise<{ title: string, content: string }>
}

// @filename: index.js
// ---cut---
import * as db from '$lib/server/database';

/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	return {
		post: await db.getPost(params.slug)
	};
}
```

```js
/// file: src/routes/blog/[slug]/+layout.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getPostSummaries(): Promise<Array<{ title: string, slug: string }>>
}

// @filename: index.js
// ---cut---
import * as db from '$lib/server/database';

/** @type {import('./$types').LayoutServerLoad} */
export async function load() {
	return {
		posts: await db.getPostSummaries()
	};
}
```

...the one in `+page.server.js` will rerun if we navigate from `/blog/trying-the-raw-meat-diet` to `/blog/i-regret-my-choices` because `params.slug` has changed. The one in `+layout.server.js` will not, because the data is still valid. In other words, we won't call `db.getPostSummaries()` a second time.

A `load` function that calls `await parent()` will also rerun if a parent `load` function is rerun.

Dependency tracking does not apply _after_ the `load` function has returned — for example, accessing `params.x` inside a nested [promise](#Streaming-with-promises) will not cause the function to rerun when `params.x` changes. (Don't worry, you'll get a warning in development if you accidentally do this.) Instead, access the parameter in the main body of your `load` function.

Search parameters are tracked independently from the rest of the url. For example, accessing `event.url.searchParams.get("x")` inside a `load` function will make that `load` function re-run when navigating from `?x=1` to `?x=2`, but not when navigating from `?x=1&y=1` to `?x=1&y=2`.

### Untracking dependencies

In rare cases, you may wish to exclude something from the dependency tracking mechanism. You can do this with the provided `untrack` function:

```js
/// file: src/routes/+page.js
/** @type {import('./$types').PageLoad} */
export async function load({ untrack, url }) {
	// Untrack url.pathname so that path changes don't trigger a rerun
	if (untrack(() => url.pathname === '/')) {
		return { message: 'Welcome!' };
	}
}
```

### Manual invalidation

You can also rerun `load` functions that apply to the current page using [`invalidate(url)`]($app-navigation#invalidate), which reruns all `load` functions that depend on `url`, and [`invalidateAll()`]($app-navigation#invalidateAll), which reruns every `load` function. Server load functions will never automatically depend on a fetched `url` to avoid leaking secrets to the client.

A `load` function depends on `url` if it calls `fetch(url)` or `depends(url)`. Note that `url` can be a custom identifier that starts with `[a-z]:`:

```js
/// file: src/routes/random-number/+page.js
/** @type {import('./$types').PageLoad} */
export async function load({ fetch, depends }) {
	// load reruns when `invalidate('https://api.example.com/random-number')` is called...
	const response = await fetch('https://api.example.com/random-number');

	// ...or when `invalidate('app:random')` is called
	depends('app:random');

	return {
		number: await response.json()
	};
}
```

```svelte
<!--- file: src/routes/random-number/+page.svelte --->
<script>
	import { invalidate, invalidateAll } from '$app/navigation';

	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();

	function rerunLoadFunction() {
		// any of these will cause the `load` function to rerun
		invalidate('app:random');
		invalidate('https://api.example.com/random-number');
		invalidate(url => url.href.includes('random-number'));
		invalidateAll();
	}
</script>

<p>random number: {data.number}</p>
<button onclick={rerunLoadFunction}>Update random number</button>
```

### When do load functions rerun?

To summarize, a `load` function will rerun in the following situations:

- It references a property of `params` whose value has changed
- It references a property of `url` (such as `url.pathname` or `url.search`) whose value has changed. Properties in `request.url` are _not_ tracked
- It calls `url.searchParams.get(...)`, `url.searchParams.getAll(...)` or `url.searchParams.has(...)` and the parameter in question changes. Accessing other properties of `url.searchParams` will have the same effect as accessing `url.search`.
- It calls `await parent()` and a parent `load` function reran
- A child `load` function calls `await parent()` and is rerunning, and the parent is a server load function
- It declared a dependency on a specific URL via [`fetch`](#Making-fetch-requests) (universal load only) or [`depends`](@sveltejs-kit#LoadEvent), and that URL was marked invalid with [`invalidate(url)`]($app-navigation#invalidate)
- All active `load` functions were forcibly rerun with [`invalidateAll()`]($app-navigation#invalidateAll)

`params` and `url` can change in response to a `<a href="..">` link click, a [`<form>` interaction](form-actions#GET-vs-POST), a [`goto`]($app-navigation#goto) invocation, or a [`redirect`](@sveltejs-kit#redirect).

Note that rerunning a `load` function will update the `data` prop inside the corresponding `+layout.svelte` or `+page.svelte`; it does _not_ cause the component to be recreated. As a result, internal state is preserved. If this isn't what you want, you can reset whatever you need to reset inside an [`afterNavigate`]($app-navigation#afterNavigate) callback, and/or wrap your component in a [`{#key ...}`](../svelte/key) block.

## Implications for authentication

A couple features of loading data have important implications for auth checks:
- Layout `load` functions do not run on every request, such as during client side navigation between child routes. [(When do load functions rerun?)](load#Rerunning-load-functions-When-do-load-functions-rerun)
- Layout and page `load` functions run concurrently unless `await parent()` is called. If a layout `load` throws, the page `load` function runs, but the client will not receive the returned data.

There are a few possible strategies to ensure an auth check occurs before protected code.

To prevent data waterfalls and preserve layout `load` caches:
- Use [hooks](hooks) to protect multiple routes before any `load` functions run
- Use auth guards directly in `+page.server.js` `load` functions for route specific protection

Putting an auth guard in `+layout.server.js` requires all child pages to call `await parent()` before protected code. Unless every child page depends on returned data from `await parent()`, the other options will be more performant.

## Further reading

- [Tutorial: Loading data](/tutorial/kit/page-data)
- [Tutorial: Errors and redirects](/tutorial/kit/error-basics)
- [Tutorial: Advanced loading](/tutorial/kit/await-parent)

'''
'''--- documentation/docs/20-core-concepts/30-form-actions.md ---
---
title: Form actions
---

A `+page.server.js` file can export _actions_, which allow you to `POST` data to the server using the `<form>` element.

When using `<form>`, client-side JavaScript is optional, but you can easily _progressively enhance_ your form interactions with JavaScript to provide the best user experience.

## Default actions

In the simplest case, a page declares a `default` action:

```js
/// file: src/routes/login/+page.server.js
/** @satisfies {import('./$types').Actions} */
export const actions = {
	default: async (event) => {
		// TODO log the user in
	}
};
```

To invoke this action from the `/login` page, just add a `<form>` — no JavaScript needed:

```svelte
<!--- file: src/routes/login/+page.svelte --->
<form method="POST">
	<label>
		Email
		<input name="email" type="email">
	</label>
	<label>
		Password
		<input name="password" type="password">
	</label>
	<button>Log in</button>
</form>
```

If someone were to click the button, the browser would send the form data via `POST` request to the server, running the default action.

> [!NOTE] Actions always use `POST` requests, since `GET` requests should never have side-effects.

We can also invoke the action from other pages (for example if there's a login widget in the nav in the root layout) by adding the `action` attribute, pointing to the page:

```html
/// file: src/routes/+layout.svelte
<form method="POST" action="/login">
	<!-- content -->
</form>
```

## Named actions

Instead of one `default` action, a page can have as many named actions as it needs:

```js
/// file: src/routes/login/+page.server.js
/** @satisfies {import('./$types').Actions} */
export const actions = {
---	default: async (event) => {---
+++	login: async (event) => {+++
		// TODO log the user in
	},
+++	register: async (event) => {
		// TODO register the user
	}+++
};
```

To invoke a named action, add a query parameter with the name prefixed by a `/` character:

```svelte
<!--- file: src/routes/login/+page.svelte --->
<form method="POST" action="?/register">
```

```svelte
<!--- file: src/routes/+layout.svelte --->
<form method="POST" action="/login?/register">
```

As well as the `action` attribute, we can use the `formaction` attribute on a button to `POST` the same form data to a different action than the parent `<form>`:

```svelte
/// file: src/routes/login/+page.svelte
<form method="POST" +++action="?/login"+++>
	<label>
		Email
		<input name="email" type="email">
	</label>
	<label>
		Password
		<input name="password" type="password">
	</label>
	<button>Log in</button>
	+++<button formaction="?/register">Register</button>+++
</form>
```

> [!NOTE] We can't have default actions next to named actions, because if you POST to a named action without a redirect, the query parameter is persisted in the URL, which means the next default POST would go through the named action from before.

## Anatomy of an action

Each action receives a `RequestEvent` object, allowing you to read the data with `request.formData()`. After processing the request (for example, logging the user in by setting a cookie), the action can respond with data that will be available through the `form` property on the corresponding page and through `$page.form` app-wide until the next update.

```js
/// file: src/routes/login/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/db';

// @filename: index.js
// ---cut---
import * as db from '$lib/server/db';

/** @type {import('./$types').PageServerLoad} */
export async function load({ cookies }) {
	const user = await db.getUserFromSession(cookies.get('sessionid'));
	return { user };
}

/** @satisfies {import('./$types').Actions} */
export const actions = {
	login: async ({ cookies, request }) => {
		const data = await request.formData();
		const email = data.get('email');
		const password = data.get('password');

		const user = await db.getUser(email);
		cookies.set('sessionid', await db.createSession(user), { path: '/' });

		return { success: true };
	},
	register: async (event) => {
		// TODO register the user
	}
};
```

```svelte
<!--- file: src/routes/login/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData, form: import('./$types').ActionData }} */
	let { data, form } = $props();
</script>

{#if form?.success}
	<!-- this message is ephemeral; it exists because the page was rendered in
	       response to a form submission. it will vanish if the user reloads -->
	<p>Successfully logged in! Welcome back, {data.user.name}</p>
{/if}
```

> [!LEGACY]
> In Svelte 4, you'd use `export let data` and `export let form` instead to declare properties

### Validation errors

If the request couldn't be processed because of invalid data, you can return validation errors — along with the previously submitted form values — back to the user so that they can try again. The `fail` function lets you return an HTTP status code (typically 400 or 422, in the case of validation errors) along with the data. The status code is available through `$page.status` and the data through `form`:

```js
/// file: src/routes/login/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/db';

// @filename: index.js
// ---cut---
+++import { fail } from '@sveltejs/kit';+++
import * as db from '$lib/server/db';

/** @satisfies {import('./$types').Actions} */
export const actions = {
	login: async ({ cookies, request }) => {
		const data = await request.formData();
		const email = data.get('email');
		const password = data.get('password');

+++		if (!email) {
			return fail(400, { email, missing: true });
		}+++

		const user = await db.getUser(email);

+++		if (!user || user.password !== db.hash(password)) {
			return fail(400, { email, incorrect: true });
		}+++

		cookies.set('sessionid', await db.createSession(user), { path: '/' });

		return { success: true };
	},
	register: async (event) => {
		// TODO register the user
	}
};
```

> [!NOTE] Note that as a precaution, we only return the email back to the page — not the password.

```svelte
/// file: src/routes/login/+page.svelte
<form method="POST" action="?/login">
+++	{#if form?.missing}<p class="error">The email field is required</p>{/if}
	{#if form?.incorrect}<p class="error">Invalid credentials!</p>{/if}+++
	<label>
		Email
		<input name="email" type="email" +++value={form?.email ?? ''}+++>
	</label>
	<label>
		Password
		<input name="password" type="password">
	</label>
	<button>Log in</button>
	<button formaction="?/register">Register</button>
</form>
```

The returned data must be serializable as JSON. Beyond that, the structure is entirely up to you. For example, if you had multiple forms on the page, you could distinguish which `<form>` the returned `form` data referred to with an `id` property or similar.

### Redirects

Redirects (and errors) work exactly the same as in [`load`](load#Redirects):

```js
// @errors: 2345
/// file: src/routes/login/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/db';

// @filename: index.js
// ---cut---
import { fail, +++redirect+++ } from '@sveltejs/kit';
import * as db from '$lib/server/db';

/** @satisfies {import('./$types').Actions} */
export const actions = {
	login: async ({ cookies, request, +++url+++ }) => {
		const data = await request.formData();
		const email = data.get('email');
		const password = data.get('password');

		const user = await db.getUser(email);
		if (!user) {
			return fail(400, { email, missing: true });
		}

		if (user.password !== db.hash(password)) {
			return fail(400, { email, incorrect: true });
		}

		cookies.set('sessionid', await db.createSession(user), { path: '/' });

+++		if (url.searchParams.has('redirectTo')) {
			redirect(303, url.searchParams.get('redirectTo'));
		}+++

		return { success: true };
	},
	register: async (event) => {
		// TODO register the user
	}
};
```

## Loading data

After an action runs, the page will be re-rendered (unless a redirect or an unexpected error occurs), with the action's return value available to the page as the `form` prop. This means that your page's `load` functions will run after the action completes.

Note that `handle` runs before the action is invoked, and does not rerun before the `load` functions. This means that if, for example, you use `handle` to populate `event.locals` based on a cookie, you must update `event.locals` when you set or delete the cookie in an action:

```js
/// file: src/hooks.server.js
// @filename: ambient.d.ts
declare namespace App {
	interface Locals {
		user: {
			name: string;
		} | null
	}
}

// @filename: global.d.ts
declare global {
	function getUser(sessionid: string | undefined): {
		name: string;
	};
}

export {};

// @filename: index.js
// ---cut---
/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	event.locals.user = await getUser(event.cookies.get('sessionid'));
	return resolve(event);
}
```

```js
/// file: src/routes/account/+page.server.js
// @filename: ambient.d.ts
declare namespace App {
	interface Locals {
		user: {
			name: string;
		} | null
	}
}

// @filename: index.js
// ---cut---
/** @type {import('./$types').PageServerLoad} */
export function load(event) {
	return {
		user: event.locals.user
	};
}

/** @satisfies {import('./$types').Actions} */
export const actions = {
	logout: async (event) => {
		event.cookies.delete('sessionid', { path: '/' });
		event.locals.user = null;
	}
};
```

## Progressive enhancement

In the preceding sections we built a `/login` action that [works without client-side JavaScript](https://kryogenix.org/code/browser/everyonehasjs.html) — not a `fetch` in sight. That's great, but when JavaScript _is_ available we can progressively enhance our form interactions to provide a better user experience.

### use:enhance

The easiest way to progressively enhance a form is to add the `use:enhance` action:

```svelte
/// file: src/routes/login/+page.svelte
<script>
	+++import { enhance } from '$app/forms';+++

	/** @type {{ form: import('./$types').ActionData }} */
	let { form } = $props();
</script>

<form method="POST" +++use:enhance+++>
```

> [!NOTE] `use:enhance` can only be used with forms that have `method="POST"`. It will not work with `method="GET"`, which is the default for forms without a specified method. Attempting to use `use:enhance` on forms without `method="POST"` will result in an error.

> [!NOTE] Yes, it's a little confusing that the `enhance` action and `<form action>` are both called 'action'. These docs are action-packed. Sorry.

Without an argument, `use:enhance` will emulate the browser-native behaviour, just without the full-page reloads. It will:

- update the `form` property, `$page.form` and `$page.status` on a successful or invalid response, but only if the action is on the same page you're submitting from. For example, if your form looks like `<form action="/somewhere/else" ..>`, `form` and `$page` will _not_ be updated. This is because in the native form submission case you would be redirected to the page the action is on. If you want to have them updated either way, use [`applyAction`](#Progressive-enhancement-Customising-use:enhance)
- reset the `<form>` element
- invalidate all data using `invalidateAll` on a successful response
- call `goto` on a redirect response
- render the nearest `+error` boundary if an error occurs
- [reset focus](accessibility#Focus-management) to the appropriate element

### Customising use:enhance

To customise the behaviour, you can provide a `SubmitFunction` that runs immediately before the form is submitted, and (optionally) returns a callback that runs with the `ActionResult`. Note that if you return a callback, the default behavior mentioned above is not triggered. To get it back, call `update`.

```svelte
<form
	method="POST"
	use:enhance={({ formElement, formData, action, cancel, submitter }) => {
		// `formElement` is this `<form>` element
		// `formData` is its `FormData` object that's about to be submitted
		// `action` is the URL to which the form is posted
		// calling `cancel()` will prevent the submission
		// `submitter` is the `HTMLElement` that caused the form to be submitted

		return async ({ result, update }) => {
			// `result` is an `ActionResult` object
			// `update` is a function which triggers the default logic that would be triggered if this callback wasn't set
		};
	}}
>
```

You can use these functions to show and hide loading UI, and so on.

If you return a callback, you may need to reproduce part of the default `use:enhance` behaviour, but without invalidating all data on a successful response. You can do so with `applyAction`:

```svelte
/// file: src/routes/login/+page.svelte
<script>
	import { enhance, +++applyAction+++ } from '$app/forms';

	/** @type {{ form: import('./$types').ActionData }} */
	let { form } = $props();
</script>

<form
	method="POST"
	use:enhance={({ formElement, formData, action, cancel }) => {
		return async ({ result }) => {
			// `result` is an `ActionResult` object
+++			if (result.type === 'redirect') {
				goto(result.location);
			} else {
				await applyAction(result);
			}+++
		};
	}}
>
```

The behaviour of `applyAction(result)` depends on `result.type`:

- `success`, `failure` — sets `$page.status` to `result.status` and updates `form` and `$page.form` to `result.data` (regardless of where you are submitting from, in contrast to `update` from `enhance`)
- `redirect` — calls `goto(result.location, { invalidateAll: true })`
- `error` — renders the nearest `+error` boundary with `result.error`

In all cases, [focus will be reset](accessibility#Focus-management).

### Custom event listener

We can also implement progressive enhancement ourselves, without `use:enhance`, with a normal event listener on the `<form>`:

```svelte
<!--- file: src/routes/login/+page.svelte --->
<script>
	import { invalidateAll, goto } from '$app/navigation';
	import { applyAction, deserialize } from '$app/forms';

	/** @type {{ form: import('./$types').ActionData }} */
	let { form } = $props();

	/** @param {{ currentTarget: EventTarget & HTMLFormElement}} event */
	async function handleSubmit(event) {
		const data = new FormData(event.currentTarget);

		const response = await fetch(event.currentTarget.action, {
			method: 'POST',
			body: data
		});

		/** @type {import('@sveltejs/kit').ActionResult} */
		const result = deserialize(await response.text());

		if (result.type === 'success') {
			// rerun all `load` functions, following the successful update
			await invalidateAll();
		}

		applyAction(result);
	}
</script>

<form method="POST" onsubmit|preventDefault={handleSubmit}>
	<!-- content -->
</form>
```

Note that you need to `deserialize` the response before processing it further using the corresponding method from `$app/forms`. `JSON.parse()` isn't enough because form actions - like `load` functions - also support returning `Date` or `BigInt` objects.

If you have a `+server.js` alongside your `+page.server.js`, `fetch` requests will be routed there by default. To `POST` to an action in `+page.server.js` instead, use the custom `x-sveltekit-action` header:

```js
const response = await fetch(this.action, {
	method: 'POST',
	body: data,
+++	headers: {
		'x-sveltekit-action': 'true'
	}+++
});
```

## Alternatives

Form actions are the preferred way to send data to the server, since they can be progressively enhanced, but you can also use [`+server.js`](routing#server) files to expose (for example) a JSON API. Here's how such an interaction could look like:

```svelte
<!--- file: src/routes/send-message/+page.svelte --->
<script>
	function rerun() {
		fetch('/api/ci', {
			method: 'POST'
		});
	}
</script>

<button onclick={rerun}>Rerun CI</button>
```

```js
// @errors: 2355 1360 2322
/// file: src/routes/api/ci/+server.js
/** @type {import('./$types').RequestHandler} */
export function POST() {
	// do something
}
```

## GET vs POST

As we've seen, to invoke a form action you must use `method="POST"`.

Some forms don't need to `POST` data to the server — search inputs, for example. For these you can use `method="GET"` (or, equivalently, no `method` at all), and SvelteKit will treat them like `<a>` elements, using the client-side router instead of a full page navigation:

```html
<form action="/search">
	<label>
		Search
		<input name="q">
	</label>
</form>
```

Submitting this form will navigate to `/search?q=...` and invoke your load function but will not invoke an action. As with `<a>` elements, you can set the [`data-sveltekit-reload`](link-options#data-sveltekit-reload), [`data-sveltekit-replacestate`](link-options#data-sveltekit-replacestate), [`data-sveltekit-keepfocus`](link-options#data-sveltekit-keepfocus) and [`data-sveltekit-noscroll`](link-options#data-sveltekit-noscroll) attributes on the `<form>` to control the router's behaviour.

## Further reading

- [Tutorial: Forms](/tutorial/kit/the-form-element)

'''
'''--- documentation/docs/20-core-concepts/40-page-options.md ---
---
title: Page options
---

By default, SvelteKit will render (or [prerender](glossary#Prerendering)) any component first on the server and send it to the client as HTML. It will then render the component again in the browser to make it interactive in a process called [**hydration**](glossary#Hydration). For this reason, you need to ensure that components can run in both places. SvelteKit will then initialize a [**router**](routing) that takes over subsequent navigations.

You can control each of these on a page-by-page basis by exporting options from [`+page.js`](routing#page-page.js) or [`+page.server.js`](routing#page-page.server.js), or for groups of pages using a shared [`+layout.js`](routing#layout-layout.js) or [`+layout.server.js`](routing#layout-layout.server.js). To define an option for the whole app, export it from the root layout. Child layouts and pages override values set in parent layouts, so — for example — you can enable prerendering for your entire app then disable it for pages that need to be dynamically rendered.

You can mix and match these options in different areas of your app. For example you could prerender your marketing page for maximum speed, server-render your dynamic pages for SEO and accessibility and turn your admin section into an SPA by rendering it on the client only. This makes SvelteKit very versatile.

## prerender

It's likely that at least some routes of your app can be represented as a simple HTML file generated at build time. These routes can be [_prerendered_](glossary#Prerendering).

```js
/// file: +page.js/+page.server.js/+server.js
export const prerender = true;
```

Alternatively, you can set `export const prerender = true` in your root `+layout.js` or `+layout.server.js` and prerender everything except pages that are explicitly marked as _not_ prerenderable:

```js
/// file: +page.js/+page.server.js/+server.js
export const prerender = false;
```

Routes with `prerender = true` will be excluded from manifests used for dynamic SSR, making your server (or serverless/edge functions) smaller. In some cases you might want to prerender a route but also include it in the manifest (for example, with a route like `/blog/[slug]` where you want to prerender your most recent/popular content but server-render the long tail) — for these cases, there's a third option, 'auto':

```js
/// file: +page.js/+page.server.js/+server.js
export const prerender = 'auto';
```

> [!NOTE] If your entire app is suitable for prerendering, you can use [`adapter-static`](https://github.com/sveltejs/kit/tree/main/packages/adapter-static), which will output files suitable for use with any static webserver.

The prerenderer will start at the root of your app and generate files for any prerenderable pages or `+server.js` routes it finds. Each page is scanned for `<a>` elements that point to other pages that are candidates for prerendering — because of this, you generally don't need to specify which pages should be accessed. If you _do_ need to specify which pages should be accessed by the prerenderer, you can do so with [`config.kit.prerender.entries`](configuration#prerender), or by exporting an [`entries`](#entries) function from your dynamic route.

While prerendering, the value of `building` imported from [`$app/environment`]($app-environment) will be `true`.

### Prerendering server routes

Unlike the other page options, `prerender` also applies to `+server.js` files. These files are _not_ affected by layouts, but will inherit default values from the pages that fetch data from them, if any. For example if a `+page.js` contains this `load` function...

```js
/// file: +page.js
export const prerender = true;

/** @type {import('./$types').PageLoad} */
export async function load({ fetch }) {
	const res = await fetch('/my-server-route.json');
	return await res.json();
}
```

...then `src/routes/my-server-route.json/+server.js` will be treated as prerenderable if it doesn't contain its own `export const prerender = false`.

### When not to prerender

The basic rule is this: for a page to be prerenderable, any two users hitting it directly must get the same content from the server.

> [!NOTE] Not all pages are suitable for prerendering. Any content that is prerendered will be seen by all users. You can of course fetch personalized data in `onMount` in a prerendered page, but this may result in a poorer user experience since it will involve blank initial content or loading indicators.

Note that you can still prerender pages that load data based on the page's parameters, such as a `src/routes/blog/[slug]/+page.svelte` route.

Accessing [`url.searchParams`](load#Using-URL-data-url) during prerendering is forbidden. If you need to use it, ensure you are only doing so in the browser (for example in `onMount`).

Pages with [actions](form-actions) cannot be prerendered, because a server must be able to handle the action `POST` requests.

### Route conflicts

Because prerendering writes to the filesystem, it isn't possible to have two endpoints that would cause a directory and a file to have the same name. For example, `src/routes/foo/+server.js` and `src/routes/foo/bar/+server.js` would try to create `foo` and `foo/bar`, which is impossible.

For that reason among others, it's recommended that you always include a file extension — `src/routes/foo.json/+server.js` and `src/routes/foo/bar.json/+server.js` would result in `foo.json` and `foo/bar.json` files living harmoniously side-by-side.

For _pages_, we skirt around this problem by writing `foo/index.html` instead of `foo`.

### Troubleshooting

If you encounter an error like 'The following routes were marked as prerenderable, but were not prerendered' it's because the route in question (or a parent layout, if it's a page) has `export const prerender = true` but the page wasn't reached by the prerendering crawler and thus wasn't prerendered.

Since these routes cannot be dynamically server-rendered, this will cause errors when people try to access the route in question. There are a few ways to fix it:

* Ensure that SvelteKit can find the route by following links from [`config.kit.prerender.entries`](configuration#prerender) or the [`entries`](#entries) page option. Add links to dynamic routes (i.e. pages with `[parameters]` ) to this option if they are not found through crawling the other entry points, else they are not prerendered because SvelteKit doesn't know what value the parameters should have. Pages not marked as prerenderable will be ignored and their links to other pages will not be crawled, even if some of them would be prerenderable.
* Ensure that SvelteKit can find the route by discovering a link to it from one of your other prerendered pages that have server-side rendering enabled.
* Change `export const prerender = true` to `export const prerender = 'auto'`. Routes with `'auto'` can be dynamically server rendered

## entries

SvelteKit will discover pages to prerender automatically, by starting at _entry points_ and crawling them. By default, all your non-dynamic routes are considered entry points — for example, if you have these routes...

```bash
/             # non-dynamic
/blog         # non-dynamic
/blog/[slug]  # dynamic, because of `[slug]`
```

...SvelteKit will prerender `/` and `/blog`, and in the process discover links like `<a href="/blog/hello-world">` which give it new pages to prerender.

Most of the time, that's enough. In some situations, links to pages like `/blog/hello-world` might not exist (or might not exist on prerendered pages), in which case we need to tell SvelteKit about their existence.

This can be done with [`config.kit.prerender.entries`](configuration#prerender), or by exporting an `entries` function from a `+page.js`, a `+page.server.js` or a `+server.js` belonging to a dynamic route:

```js
/// file: src/routes/blog/[slug]/+page.server.js
/** @type {import('./$types').EntryGenerator} */
export function entries() {
	return [
		{ slug: 'hello-world' },
		{ slug: 'another-blog-post' }
	];
}

export const prerender = true;
```

`entries` can be an `async` function, allowing you to (for example) retrieve a list of posts from a CMS or database, in the example above.

## ssr

Normally, SvelteKit renders your page on the server first and sends that HTML to the client where it's [hydrated](glossary#Hydration). If you set `ssr` to `false`, it renders an empty 'shell' page instead. This is useful if your page is unable to be rendered on the server (because you use browser-only globals like `document` for example), but in most situations it's not recommended ([see appendix](glossary#SSR)).

```js
/// file: +page.js
export const ssr = false;
// If both `ssr` and `csr` are `false`, nothing will be rendered!
```

If you add `export const ssr = false` to your root `+layout.js`, your entire app will only be rendered on the client — which essentially means you turn your app into an SPA.

## csr

Ordinarily, SvelteKit [hydrates](glossary#Hydration) your server-rendered HTML into an interactive client-side-rendered (CSR) page. Some pages don't require JavaScript at all — many blog posts and 'about' pages fall into this category. In these cases you can disable CSR:

```js
/// file: +page.js
export const csr = false;
// If both `csr` and `ssr` are `false`, nothing will be rendered!
```

Disabling CSR does not ship any JavaScript to the client. This means:

* The webpage should work with HTML and CSS only.
* `<script>` tags inside all Svelte components are removed.
* `<form>` elements cannot be [progressively enhanced](form-actions#Progressive-enhancement).
* Links are handled by the browser with a full-page navigation.
* Hot Module Replacement (HMR) will be disabled.

You can enable `csr` during development (for example to take advantage of HMR) like so:

```js
/// file: +page.js
import { dev } from '$app/environment';

export const csr = dev;
```

## trailingSlash

By default, SvelteKit will remove trailing slashes from URLs — if you visit `/about/`, it will respond with a redirect to `/about`. You can change this behaviour with the `trailingSlash` option, which can be one of `'never'` (the default), `'always'`, or `'ignore'`.

As with other page options, you can export this value from a `+layout.js` or a `+layout.server.js` and it will apply to all child pages. You can also export the configuration from `+server.js` files.

```js
/// file: src/routes/+layout.js
export const trailingSlash = 'always';
```

This option also affects [prerendering](#prerender). If `trailingSlash` is `always`, a route like `/about` will result in an `about/index.html` file, otherwise it will create `about.html`, mirroring static webserver conventions.

> [!NOTE] Ignoring trailing slashes is not recommended — the semantics of relative paths differ between the two cases (`./y` from `/x` is `/y`, but from `/x/` is `/x/y`), and `/x` and `/x/` are treated as separate URLs which is harmful to SEO.

## config

With the concept of [adapters](adapters), SvelteKit is able to run on a variety of platforms. Each of these might have specific configuration to further tweak the deployment — for example on Vercel you could choose to deploy some parts of your app on the edge and others on serverless environments.

`config` is an object with key-value pairs at the top level. Beyond that, the concrete shape is dependent on the adapter you're using. Every adapter should provide a `Config` interface to import for type safety. Consult the documentation of your adapter for more information.

```js
// @filename: ambient.d.ts
declare module 'some-adapter' {
	export interface Config { runtime: string }
}

// @filename: index.js
// ---cut---
/// file: src/routes/+page.js
/** @type {import('some-adapter').Config} */
export const config = {
	runtime: 'edge'
};
```

`config` objects are merged at the top level (but _not_ deeper levels). This means you don't need to repeat all the values in a `+page.js` if you want to only override some of the values in the upper `+layout.js`. For example this layout configuration...

```js
/// file: src/routes/+layout.js
export const config = {
	runtime: 'edge',
	regions: 'all',
	foo: {
		bar: true
	}
}
```

...is overridden by this page configuration...

```js
/// file: src/routes/+page.js
export const config = {
	regions: ['us1', 'us2'],
	foo: {
		baz: true
	}
}
```

...which results in the config value `{ runtime: 'edge', regions: ['us1', 'us2'], foo: { baz: true } }` for that page.

## Further reading

- [Tutorial: Page options](/tutorial/kit/page-options)

'''
'''--- documentation/docs/20-core-concepts/50-state-management.md ---
---
title: State management
---

If you're used to building client-only apps, state management in an app that spans server and client might seem intimidating. This section provides tips for avoiding some common gotchas.

## Avoid shared state on the server

Browsers are _stateful_ — state is stored in memory as the user interacts with the application. Servers, on the other hand, are _stateless_ — the content of the response is determined entirely by the content of the request.

Conceptually, that is. In reality, servers are often long-lived and shared by multiple users. For that reason it's important not to store data in shared variables. For example, consider this code:

```js
// @errors: 7034 7005
/// file: +page.server.js
let user;

/** @type {import('./$types').PageServerLoad} */
export function load() {
	return { user };
}

/** @satisfies {import('./$types').Actions} */
export const actions = {
	default: async ({ request }) => {
		const data = await request.formData();

		// NEVER DO THIS!
		user = {
			name: data.get('name'),
			embarrassingSecret: data.get('secret')
		};
	}
}
```

The `user` variable is shared by everyone who connects to this server. If Alice submitted an embarrassing secret, and Bob visited the page after her, Bob would know Alice's secret. In addition, when Alice returns to the site later in the day, the server may have restarted, losing her data.

Instead, you should _authenticate_ the user using [`cookies`](load#Cookies) and persist the data to a database.

## No side-effects in load

For the same reason, your `load` functions should be _pure_ — no side-effects (except maybe the occasional `console.log(...)`). For example, you might be tempted to write to a store inside a `load` function so that you can use the store value in your components:

```js
/// file: +page.js
// @filename: ambient.d.ts
declare module '$lib/user' {
	export const user: { set: (value: any) => void };
}

// @filename: index.js
// ---cut---
import { user } from '$lib/user';

/** @type {import('./$types').PageLoad} */
export async function load({ fetch }) {
	const response = await fetch('/api/user');

	// NEVER DO THIS!
	user.set(await response.json());
}
```

As with the previous example, this puts one user's information in a place that is shared by _all_ users. Instead, just return the data...

```js
/// file: +page.js
/** @type {import('./$types').PageServerLoad} */
export async function load({ fetch }) {
	const response = await fetch('/api/user');

+++	return {
		user: await response.json()
	};+++
}
```

...and pass it around to the components that need it, or use [`$page.data`](load#$page.data).

If you're not using SSR, then there's no risk of accidentally exposing one user's data to another. But you should still avoid side-effects in your `load` functions — your application will be much easier to reason about without them.

## Using stores with context

You might wonder how we're able to use `$page.data` and other [app stores]($app-stores) if we can't use our own stores. The answer is that app stores on the server use Svelte's [context API](/tutorial/svelte/context-api) — the store is attached to the component tree with `setContext`, and when you subscribe you retrieve it with `getContext`. We can do the same thing with our own stores:

```svelte
<!--- file: src/routes/+layout.svelte --->
<script>
	import { setContext } from 'svelte';
	import { writable } from 'svelte/store';

	/** @type {{ data: import('./$types').LayoutData }} */
	let { data } = $props();

	// Create a store and update it when necessary...
	const user = writable(data.user);
	$effect.pre(() => {
		user.set(data.user);
	});

	// ...and add it to the context for child components to access
	setContext('user', user);
</script>
```

```svelte
<!--- file: src/routes/user/+page.svelte --->
<script>
	import { getContext } from 'svelte';

	// Retrieve user store from context
	const user = getContext('user');
</script>

<p>Welcome {$user.name}</p>
```

Updating the value of a context-based store in deeper-level pages or components while the page is being rendered via SSR will not affect the value in the parent component because it has already been rendered by the time the store value is updated. In contrast, on the client (when CSR is enabled, which is the default) the value will be propagated and components, pages, and layouts higher in the hierarchy will react to the new value. Therefore, to avoid values 'flashing' during state updates during hydration, it is generally recommended to pass state down into components rather than up.

If you're not using SSR (and can guarantee that you won't need to use SSR in future) then you can safely keep state in a shared module, without using the context API.

## Component and page state is preserved

When you navigate around your application, SvelteKit reuses existing layout and page components. For example, if you have a route like this...

```svelte
<!--- file: src/routes/blog/[slug]/+page.svelte --->
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();

	// THIS CODE IS BUGGY!
	const wordCount = data.content.split(' ').length;
	const estimatedReadingTime = wordCount / 250;
</script>

<header>
	<h1>{data.title}</h1>
	<p>Reading time: {Math.round(estimatedReadingTime)} minutes</p>
</header>

<div>{@html data.content}</div>
```

...then navigating from `/blog/my-short-post` to `/blog/my-long-post` won't cause the layout, page and any other components within to be destroyed and recreated. Instead the `data` prop (and by extension `data.title` and `data.content`) will update (as it would with any other Svelte component) and, because the code isn't rerunning, lifecycle methods like `onMount` and `onDestroy` won't rerun and `estimatedReadingTime` won't be recalculated.

Instead, we need to make the value [_reactive_](/tutorial/svelte/state):

```svelte
/// file: src/routes/blog/[slug]/+page.svelte
<script>
	/** @type {{ data: import('./$types').PageData }} */
	let { data } = $props();

+++	let wordCount = $state(data.content.split(' ').length);
	let estimatedReadingTime = $derived(wordCount / 250);+++
</script>
```

> [!NOTE] If your code in `onMount` and `onDestroy` has to run again after navigation you can use [afterNavigate]($app-navigation#afterNavigate) and [beforeNavigate]($app-navigation#beforeNavigate) respectively.

Reusing components like this means that things like sidebar scroll state are preserved, and you can easily animate between changing values. In the case that you do need to completely destroy and remount a component on navigation, you can use this pattern:

```svelte
{#key $page.url.pathname}
	<BlogPost title={data.title} content={data.title} />
{/key}
```

## Storing state in the URL

If you have state that should survive a reload and/or affect SSR, such as filters or sorting rules on a table, URL search parameters (like `?sort=price&order=ascending`) are a good place to put them. You can put them in `<a href="...">` or `<form action="...">` attributes, or set them programmatically via `goto('?key=value')`. They can be accessed inside `load` functions via the `url` parameter, and inside components via `$page.url.searchParams`.

## Storing ephemeral state in snapshots

Some UI state, such as 'is the accordion open?', is disposable — if the user navigates away or refreshes the page, it doesn't matter if the state is lost. In some cases, you _do_ want the data to persist if the user navigates to a different page and comes back, but storing the state in the URL or in a database would be overkill. For this, SvelteKit provides [snapshots](snapshots), which let you associate component state with a history entry.

'''
'''--- documentation/docs/20-core-concepts/index.md ---
---
title: Core concepts
---

'''
'''--- documentation/docs/25-build-and-deploy/10-building-your-app.md ---
---
title: Building your app
---

Building a SvelteKit app happens in two stages, which both happen when you run `vite build` (usually via `npm run build`).

Firstly, Vite creates an optimized production build of your server code, your browser code, and your service worker (if you have one). [Prerendering](page-options#prerender) is executed at this stage, if appropriate.

Secondly, an _adapter_ takes this production build and tunes it for your target environment — more on this on the following pages.

## During the build

SvelteKit will load your `+page/layout(.server).js` files (and all files they import) for analysis during the build. Any code that should _not_ be executed at this stage must check that `building` from [`$app/environment`]($app-environment) is `false`:

```js
+++import { building } from '$app/environment';+++
import { setupMyDatabase } from '$lib/server/database';

+++if (!building) {+++
	setupMyDatabase();
+++}+++

export function load() {
	// ...
}
```

## Preview your app

After building, you can view your production build locally with `vite preview` (via `npm run preview`). Note that this will run the app in Node, and so is not a perfect reproduction of your deployed app — adapter-specific adjustments like the [`platform` object](adapters#Platform-specific-context) do not apply to previews.

'''
'''--- documentation/docs/25-build-and-deploy/20-adapters.md ---
---
title: Adapters
---

Before you can deploy your SvelteKit app, you need to _adapt_ it for your deployment target. Adapters are small plugins that take the built app as input and generate output for deployment.

Official adapters exist for a variety of platforms — these are documented on the following pages:

- [`@sveltejs/adapter-cloudflare`](adapter-cloudflare) for Cloudflare Pages
- [`@sveltejs/adapter-cloudflare-workers`](adapter-cloudflare-workers) for Cloudflare Workers
- [`@sveltejs/adapter-netlify`](adapter-netlify) for Netlify
- [`@sveltejs/adapter-node`](adapter-node) for Node servers
- [`@sveltejs/adapter-static`](adapter-static) for static site generation (SSG)
- [`@sveltejs/adapter-vercel`](adapter-vercel) for Vercel

Additional [community-provided adapters](https://sveltesociety.dev/packages?category=sveltekit-adapters) exist for other platforms.

## Using adapters

Your adapter is specified in `svelte.config.js`:

```js
/// file: svelte.config.js
// @filename: ambient.d.ts
declare module 'svelte-adapter-foo' {
	const adapter: (opts: any) => import('@sveltejs/kit').Adapter;
	export default adapter;
}

// @filename: index.js
// ---cut---
import adapter from 'svelte-adapter-foo';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	kit: {
		adapter: adapter({
			// adapter options go here
		})
	}
};

export default config;
```

## Platform-specific context

Some adapters may have access to additional information about the request. For example, Cloudflare Workers can access an `env` object containing KV namespaces etc. This can be passed to the `RequestEvent` used in [hooks](hooks) and [server routes](routing#server) as the `platform` property — consult each adapter's documentation to learn more.

'''
'''--- documentation/docs/25-build-and-deploy/30-adapter-auto.md ---
---
title: Zero-config deployments
---

When you create a new SvelteKit project with `npx sv create`, it installs [`adapter-auto`](https://github.com/sveltejs/kit/tree/main/packages/adapter-auto) by default. This adapter automatically installs and uses the correct adapter for supported environments when you deploy:

- [`@sveltejs/adapter-cloudflare`](adapter-cloudflare) for [Cloudflare Pages](https://developers.cloudflare.com/pages/)
- [`@sveltejs/adapter-netlify`](adapter-netlify) for [Netlify](https://netlify.com/)
- [`@sveltejs/adapter-vercel`](adapter-vercel) for [Vercel](https://vercel.com/)
- [`svelte-adapter-azure-swa`](https://github.com/geoffrich/svelte-adapter-azure-swa) for [Azure Static Web Apps](https://docs.microsoft.com/en-us/azure/static-web-apps/)
- [`svelte-kit-sst`](https://github.com/sst/sst/tree/master/packages/svelte-kit-sst) for [AWS via SST](https://sst.dev/docs/start/aws/svelte)
- [`@sveltejs/adapter-node`](adapter-node) for [Google Cloud Run](https://cloud.google.com/run)

It's recommended to install the appropriate adapter to your `devDependencies` once you've settled on a target environment, since this will add the adapter to your lockfile and slightly improve install times on CI.

## Environment-specific configuration

To add configuration options, such as `{ edge: true }` in [`adapter-vercel`](adapter-vercel) and [`adapter-netlify`](adapter-netlify), you must install the underlying adapter — `adapter-auto` does not take any options.

## Adding community adapters

You can add zero-config support for additional adapters by editing [adapters.js](https://github.com/sveltejs/kit/blob/main/packages/adapter-auto/adapters.js) and opening a pull request.

'''
'''--- documentation/docs/25-build-and-deploy/40-adapter-node.md ---
---
title: Node servers
---

To generate a standalone Node server, use [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node).

## Usage

Install with `npm i -D @sveltejs/adapter-node`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-node';

export default {
	kit: {
		adapter: adapter()
	}
};
```

## Deploying

First, build your app with `npm run build`. This will create the production server in the output directory specified in the adapter options, defaulting to `build`.

You will need the output directory, the project's `package.json`, and the production dependencies in `node_modules` to run the application. Production dependencies can be generated by copying the `package.json` and `package-lock.json` and then running `npm ci --omit dev` (you can skip this step if your app doesn't have any dependencies). You can then start your app with this command:

```bash
node build
```

Development dependencies will be bundled into your app using [Rollup](https://rollupjs.org). To control whether a given package is bundled or externalised, place it in `devDependencies` or `dependencies` respectively in your `package.json`.

### Compressing responses

You will typically want to compress responses coming from the server. If you are already deploying your server behind a reverse proxy for SSL or load balancing, it typically results in better performance to also handle compression at that layer since Node.js is single-threaded.

However, if you're building a [custom server](#Custom-server) and do want to add a compression middleware there, note that we would recommend using [`@polka/compression`](https://www.npmjs.com/package/@polka/compression) since SvelteKit streams responses and the more popular `compression` package does not support streaming and may cause errors when used.

## Environment variables

In `dev` and `preview`, SvelteKit will read environment variables from your `.env` file (or `.env.local`, or `.env.[mode]`, [as determined by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files).)

In production, `.env` files are _not_ automatically loaded. To do so, install `dotenv` in your project...

```bash
npm install dotenv
```

...and invoke it before running the built app:

```bash
node +++-r dotenv/config+++ build
```

If you use Node.js v20.6+, you can use the [`--env-file`](https://nodejs.org/en/learn/command-line/how-to-read-environment-variables-from-nodejs) flag instead:

```bash
node +++--env-file=.env+++ build
```

### `PORT`, `HOST` and `SOCKET_PATH`

By default, the server will accept connections on `0.0.0.0` using port 3000. These can be customised with the `PORT` and `HOST` environment variables:

```
HOST=127.0.0.1 PORT=4000 node build
```

Alternatively, the server can be configured to accept connections on a specified socket path. When this is done using the `SOCKET_PATH` environment variable, the `HOST` and `PORT` environment variables will be disregarded.

```
SOCKET_PATH=/tmp/socket node build
```

### `ORIGIN`, `PROTOCOL_HEADER`, `HOST_HEADER`, and `PORT_HEADER`

HTTP doesn't give SvelteKit a reliable way to know the URL that is currently being requested. The simplest way to tell SvelteKit where the app is being served is to set the `ORIGIN` environment variable:

```
ORIGIN=https://my.site node build

# or e.g. for local previewing and testing
ORIGIN=http://localhost:3000 node build
```

With this, a request for the `/stuff` pathname will correctly resolve to `https://my.site/stuff`. Alternatively, you can specify headers that tell SvelteKit about the request protocol and host, from which it can construct the origin URL:

```
PROTOCOL_HEADER=x-forwarded-proto HOST_HEADER=x-forwarded-host node build
```

> [!NOTE] [`x-forwarded-proto`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto) and [`x-forwarded-host`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host) are de facto standard headers that forward the original protocol and host if you're using a reverse proxy (think load balancers and CDNs). You should only set these variables if your server is behind a trusted reverse proxy; otherwise, it'd be possible for clients to spoof these headers.
>
> If you're hosting your proxy on a non-standard port and your reverse proxy supports `x-forwarded-port`, you can also set `PORT_HEADER=x-forwarded-port`.

If `adapter-node` can't correctly determine the URL of your deployment, you may experience this error when using [form actions](form-actions):

> [!NOTE] Cross-site POST form submissions are forbidden

### `ADDRESS_HEADER` and `XFF_DEPTH`

The [RequestEvent](@sveltejs-kit#RequestEvent) object passed to hooks and endpoints includes an `event.getClientAddress()` function that returns the client's IP address. By default this is the connecting `remoteAddress`. If your server is behind one or more proxies (such as a load balancer), this value will contain the innermost proxy's IP address rather than the client's, so we need to specify an `ADDRESS_HEADER` to read the address from:

```
ADDRESS_HEADER=True-Client-IP node build
```

> [!NOTE] Headers can easily be spoofed. As with `PROTOCOL_HEADER` and `HOST_HEADER`, you should [know what you're doing](https://adam-p.ca/blog/2022/03/x-forwarded-for/) before setting these.

If the `ADDRESS_HEADER` is `X-Forwarded-For`, the header value will contain a comma-separated list of IP addresses. The `XFF_DEPTH` environment variable should specify how many trusted proxies sit in front of your server. E.g. if there are three trusted proxies, proxy 3 will forward the addresses of the original connection and the first two proxies:

```
<client address>, <proxy 1 address>, <proxy 2 address>
```

Some guides will tell you to read the left-most address, but this leaves you [vulnerable to spoofing](https://adam-p.ca/blog/2022/03/x-forwarded-for/):

```
<spoofed address>, <client address>, <proxy 1 address>, <proxy 2 address>
```

We instead read from the _right_, accounting for the number of trusted proxies. In this case, we would use `XFF_DEPTH=3`.

> [!NOTE] If you need to read the left-most address instead (and don't care about spoofing) — for example, to offer a geolocation service, where it's more important for the IP address to be _real_ than _trusted_, you can do so by inspecting the `x-forwarded-for` header within your app.

### `BODY_SIZE_LIMIT`

The maximum request body size to accept in bytes including while streaming. The body size can also be specified with a unit suffix for kilobytes (`K`), megabytes (`M`), or gigabytes (`G`). For example, `512K` or `1M`. Defaults to 512kb. You can disable this option with a value of `Infinity` (0 in older versions of the adapter) and implement a custom check in [`handle`](hooks#Server-hooks-handle) if you need something more advanced.

### `SHUTDOWN_TIMEOUT`

The number of seconds to wait before forcefully closing any remaining connections after receiving a `SIGTERM` or `SIGINT` signal. Defaults to `30`. Internally the adapter calls [`closeAllConnections`](https://nodejs.org/api/http.html#servercloseallconnections). See [Graceful shutdown](#Graceful-shutdown) for more details.

### `IDLE_TIMEOUT`

When using systemd socket activation, `IDLE_TIMEOUT` specifies the number of seconds after which the app is automatically put to sleep when receiving no requests. If not set, the app runs continuously. See [Socket activation](#Socket-activation) for more details.

## Options

The adapter can be configured with various options:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-node';

export default {
	kit: {
		adapter: adapter({
			// default options are shown
			out: 'build',
			precompress: true,
			envPrefix: ''
		})
	}
};
```

### out

The directory to build the server to. It defaults to `build` — i.e. `node build` would start the server locally after it has been created.

### precompress

Enables precompressing using gzip and brotli for assets and prerendered pages. It defaults to `true`.

### envPrefix

If you need to change the name of the environment variables used to configure the deployment (for example, to deconflict with environment variables you don't control), you can specify a prefix:

```js
envPrefix: 'MY_CUSTOM_';
```

```sh
MY_CUSTOM_HOST=127.0.0.1 \
MY_CUSTOM_PORT=4000 \
MY_CUSTOM_ORIGIN=https://my.site \
node build
```

## Graceful shutdown

By default `adapter-node` gracefully shuts down the HTTP server when a `SIGTERM` or `SIGINT` signal is received. It will:

1. reject new requests ([`server.close`](https://nodejs.org/api/http.html#serverclosecallback))
2. wait for requests that have already been made but not received a response yet to finish and close connections once they become idle ([`server.closeIdleConnections`](https://nodejs.org/api/http.html#servercloseidleconnections))
3. and finally, close any remaining connections that are still active after [`SHUTDOWN_TIMEOUT`](#Environment-variables-SHUTDOWN_TIMEOUT) seconds. ([`server.closeAllConnections`](https://nodejs.org/api/http.html#servercloseallconnections))

> [!NOTE] If you want to customize this behaviour you can use a [custom server](#Custom-server).

You can listen to the `sveltekit:shutdown` event which is emitted after the HTTP server has closed all connections. Unlike Node's `exit` event, the `sveltekit:shutdown` event supports asynchronous operations and is always emitted when all connections are closed even if the server has dangling work such as open database connections.

```js
// @errors: 2304
process.on('sveltekit:shutdown', async (reason) => {
  await jobs.stop();
  await db.close();
});
```

The parameter `reason` has one of the following values:

- `SIGINT` - shutdown was triggered by a `SIGINT` signal
- `SIGTERM` - shutdown was triggered by a `SIGTERM` signal
- `IDLE` - shutdown was triggered by [`IDLE_TIMEOUT`](#Environment-variables-IDLE_TIMEOUT)

## Socket activation

Most Linux operating systems today use a modern process manager called systemd to start the server and run and manage services. You can configure your server to allocate a socket and start and scale your app on demand. This is called [socket activation](http://0pointer.de/blog/projects/socket-activated-containers.html). In this case, the OS will pass two environment variables to your app — `LISTEN_PID` and `LISTEN_FDS`. The adapter will then listen on file descriptor 3 which refers to a systemd socket unit that you will have to create.

> [!NOTE] You can still use [`envPrefix`](#Options-envPrefix) with systemd socket activation. `LISTEN_PID` and `LISTEN_FDS` are always read without a prefix.

To take advantage of socket activation follow these steps.

1. Run your app as a [systemd service](https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html). It can either run directly on the host system or inside a container (using Docker or a systemd portable service for example). If you additionally pass an [`IDLE_TIMEOUT`](#Environment-variables-IDLE_TIMEOUT) environment variable to your app it will gracefully shutdown if there are no requests for `IDLE_TIMEOUT` seconds. systemd will automatically start your app again when new requests are coming in.

```ini
/// file: /etc/systemd/system/myapp.service
[Service]
Environment=NODE_ENV=production IDLE_TIMEOUT=60
ExecStart=/usr/bin/node /usr/bin/myapp/build
```

2. Create an accompanying [socket unit](https://www.freedesktop.org/software/systemd/man/latest/systemd.socket.html). The adapter only accepts a single socket.

```ini
/// file: /etc/systemd/system/myapp.socket
[Socket]
ListenStream=3000

[Install]
WantedBy=sockets.target
```

3. Make sure systemd has recognised both units by running `sudo systemctl daemon-reload`. Then enable the socket on boot and start it immediately using `sudo systemctl enable --now myapp.socket`. The app will then automatically start once the first request is made to `localhost:3000`.

## Custom server

The adapter creates two files in your build directory — `index.js` and `handler.js`. Running `index.js` — e.g. `node build`, if you use the default build directory — will start a server on the configured port.

Alternatively, you can import the `handler.js` file, which exports a handler suitable for use with [Express](https://github.com/expressjs/express), [Connect](https://github.com/senchalabs/connect) or [Polka](https://github.com/lukeed/polka) (or even just the built-in [`http.createServer`](https://nodejs.org/dist/latest/docs/api/http.html#httpcreateserveroptions-requestlistener)) and set up your own server:

```js
// @errors: 2307 7006
/// file: my-server.js
import { handler } from './build/handler.js';
import express from 'express';

const app = express();

// add a route that lives separately from the SvelteKit app
app.get('/healthcheck', (req, res) => {
	res.end('ok');
});

// let SvelteKit handle everything else, including serving prerendered pages and static assets
app.use(handler);

app.listen(3000, () => {
	console.log('listening on port 3000');
});
```

'''
'''--- documentation/docs/25-build-and-deploy/50-adapter-static.md ---
---
title: Static site generation
---

To use SvelteKit as a static site generator (SSG), use [`adapter-static`](https://github.com/sveltejs/kit/tree/main/packages/adapter-static).

This will prerender your entire site as a collection of static files. If you'd like to prerender only some pages and dynamically server-render others, you will need to use a different adapter together with [the `prerender` option](page-options#prerender).

## Usage

Install with `npm i -D @sveltejs/adapter-static`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-static';

export default {
	kit: {
		adapter: adapter({
			// default options are shown. On some platforms
			// these options are set automatically — see below
			pages: 'build',
			assets: 'build',
			fallback: undefined,
			precompress: false,
			strict: true
		})
	}
};
```

...and add the [`prerender`](page-options#prerender) option to your root layout:

```js
/// file: src/routes/+layout.js
// This can be false if you're using a fallback (i.e. SPA mode)
export const prerender = true;
```

> [!NOTE] You must ensure SvelteKit's [`trailingSlash`](page-options#trailingSlash) option is set appropriately for your environment. If your host does not render `/a.html` upon receiving a request for `/a` then you will need to set `trailingSlash: 'always'` in your root layout to create `/a/index.html` instead.

## Zero-config support

Some platforms have zero-config support (more to come in future):

- [Vercel](https://vercel.com)

On these platforms, you should omit the adapter options so that `adapter-static` can provide the optimal configuration:

```js
// @errors: 2304
/// file: svelte.config.js
export default {
	kit: {
		adapter: adapter(---{...}---)
	}
};
```

## Options

### pages

The directory to write prerendered pages to. It defaults to `build`.

### assets

The directory to write static assets (the contents of `static`, plus client-side JS and CSS generated by SvelteKit) to. Ordinarily this should be the same as `pages`, and it will default to whatever the value of `pages` is, but in rare circumstances you might need to output pages and assets to separate locations.

### fallback

Specify a fallback page for [SPA mode](single-page-apps), e.g. `index.html` or `200.html` or `404.html`.

### precompress

If `true`, precompresses files with brotli and gzip. This will generate `.br` and `.gz` files.

### strict

By default, `adapter-static` checks that either all pages and endpoints (if any) of your app were prerendered, or you have the `fallback` option set. This check exists to prevent you from accidentally publishing an app where some parts of it are not accessible, because they are not contained in the final output. If you know this is ok (for example when a certain page only exists conditionally), you can set `strict` to `false` to turn off this check.

## GitHub Pages

When building for [GitHub Pages](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages), if your repo name is not equivalent to `your-username.github.io`, make sure to update [`config.kit.paths.base`](configuration#paths) to match your repo name. This is because the site will be served from `https://your-username.github.io/your-repo-name` rather than from the root.

You'll also want to generate a fallback `404.html` page to replace the default 404 page shown by GitHub Pages.

A config for GitHub Pages might look like the following:

```js
// @errors: 2307 2322
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-static';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	kit: {
		adapter: adapter({
			fallback: '404.html'
		}),
		paths: {
			base: process.argv.includes('dev') ? '' : process.env.BASE_PATH
		}
	}
};

export default config;
```

You can use GitHub actions to automatically deploy your site to GitHub Pages when you make a change. Here's an example workflow:

```yaml
### file: .github/workflows/deploy.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: 'main'

jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you're using pnpm, add this step then change the commands and cache key below to use `pnpm`
      # - name: Install pnpm
      #   uses: pnpm/action-setup@v3
      #   with:
      #     version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
        run: |
          npm run build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          # this should match the `pages` option in your adapter-static options
          path: 'build/'

  deploy:
    needs: build_site
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
```

If you're not using GitHub actions to deploy your site (for example, you're pushing the built site to its own repo), add an empty `.nojekyll` file in your `static` directory to prevent Jekyll from interfering.

'''
'''--- documentation/docs/25-build-and-deploy/55-single-page-apps.md ---
---
title: Single-page apps
---

You can turn any SvelteKit app, using any adapter, into a fully client-rendered single-page app (SPA) by disabling SSR at the root layout:

```js
/// file: src/routes/+layout.js
export const ssr = false;
```

> [!NOTE] In most situations this is not recommended: it harms SEO, tends to slow down perceived performance, and makes your app inaccessible to users if JavaScript fails or is disabled (which happens [more often than you probably think](https://kryogenix.org/code/browser/everyonehasjs.html)).

If you don't have any server-side logic (i.e. `+page.server.js`, `+layout.server.js` or `+server.js` files) you can use [`adapter-static`](adapter-static) to create your SPA by adding a _fallback page_.

## Usage

Install with `npm i -D @sveltejs/adapter-static`, then add the adapter to your `svelte.config.js` with the following options:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-static';

export default {
	kit: {
		adapter: adapter({
			fallback: '200.html' // may differ from host to host
		})
	}
};
```

The `fallback` page is an HTML page created by SvelteKit from your page template (e.g. `app.html`) that loads your app and navigates to the correct route. For example [Surge](https://surge.sh/help/adding-a-200-page-for-client-side-routing), a static web host, lets you add a `200.html` file that will handle any requests that don't correspond to static assets or prerendered pages.

On some hosts it may be `index.html` or something else entirely — consult your platform's documentation.

> [!NOTE] Note that the fallback page will always contain absolute asset paths (i.e. beginning with `/` rather than `.`) regardless of the value of [`paths.relative`](configuration#paths), since it is used to respond to requests for arbitrary paths.

## Apache

To run an SPA on [Apache](https://httpd.apache.org/), you should add a `static/.htaccess` file to route requests to the fallback page:

```
<IfModule mod_rewrite.c>
	RewriteEngine On
	RewriteBase /
	RewriteRule ^200\.html$ - [L]
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule . /200.html [L]
</IfModule>
```

## Prerendering individual pages

If you want certain pages to be prerendered, you can re-enable `ssr` alongside `prerender` for just those parts of your app:

```js
/// file: src/routes/my-prerendered-page/+page.js
export const prerender = true;
export const ssr = true;
```

'''
'''--- documentation/docs/25-build-and-deploy/60-adapter-cloudflare.md ---
---
title: Cloudflare Pages
---

To deploy to [Cloudflare Pages](https://developers.cloudflare.com/pages/), use [`adapter-cloudflare`](https://github.com/sveltejs/kit/tree/main/packages/adapter-cloudflare).

This adapter will be installed by default when you use [`adapter-auto`](adapter-auto). If you plan on staying with Cloudflare Pages, you can switch from [`adapter-auto`](adapter-auto) to using this adapter directly so that values specific to Cloudflare Workers are emulated during local development, type declarations are automatically applied, and the ability to set Cloudflare-specific options is provided.

## Comparisons

- `adapter-cloudflare` – supports all SvelteKit features; builds for [Cloudflare Pages](https://blog.cloudflare.com/cloudflare-pages-goes-full-stack/)
- `adapter-cloudflare-workers` – supports all SvelteKit features; builds for Cloudflare Workers
- `adapter-static` – only produces client-side static assets; compatible with Cloudflare Pages

## Usage

Install with `npm i -D @sveltejs/adapter-cloudflare`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-cloudflare';

export default {
	kit: {
		adapter: adapter({
			// See below for an explanation of these options
			routes: {
				include: ['/*'],
				exclude: ['<all>']
			},
			platformProxy: {
				configPath: 'wrangler.toml',
				environment: undefined,
				experimentalJsonConfig: false,
				persist: false
			}
		})
	}
};
```

## Options

### routes

Allows you to customise the [`_routes.json`](https://developers.cloudflare.com/pages/platform/functions/routing/#create-a-_routesjson-file) file generated by `adapter-cloudflare`.

- `include` defines routes that will invoke a function, and defaults to `['/*']`
- `exclude` defines routes that will _not_ invoke a function — this is a faster and cheaper way to serve your app's static assets. This array can include the following special values:
	- `<build>` contains your app's build artifacts (the files generated by Vite)
	- `<files>` contains the contents of your `static` directory
	- `<prerendered>` contains a list of prerendered pages
	- `<all>` (the default) contains all of the above

You can have up to 100 `include` and `exclude` rules combined. Generally you can omit the `routes` options, but if (for example) your `<prerendered>` paths exceed that limit, you may find it helpful to manually create an `exclude` list that includes `'/articles/*'` instead of the auto-generated `['/articles/foo', '/articles/bar', '/articles/baz', ...]`.

### platformProxy

Preferences for the emulated `platform.env` local bindings. See the [getPlatformProxy](https://developers.cloudflare.com/workers/wrangler/api/#syntax) Wrangler API documentation for a full list of options.

## Deployment

Please follow the [Get Started Guide](https://developers.cloudflare.com/pages/get-started) for Cloudflare Pages to begin.

When configuring your project settings, you must use the following settings:

- **Framework preset** – SvelteKit
- **Build command** – `npm run build` or `vite build`
- **Build output directory** – `.svelte-kit/cloudflare`

## Runtime APIs

The [`env`](https://developers.cloudflare.com/workers/runtime-apis/fetch-event#parameters) object contains your project's [bindings](https://developers.cloudflare.com/pages/platform/functions/bindings/), which consist of KV/DO namespaces, etc. It is passed to SvelteKit via the `platform` property, along with [`context`](https://developers.cloudflare.com/workers/runtime-apis/handlers/fetch/#contextwaituntil), [`caches`](https://developers.cloudflare.com/workers/runtime-apis/cache/), and [`cf`](https://developers.cloudflare.com/workers/runtime-apis/request/#the-cf-property-requestinitcfproperties), meaning that you can access it in hooks and endpoints:

```js
// @errors: 7031
export async function POST({ request, platform }) {
	const x = platform.env.YOUR_DURABLE_OBJECT_NAMESPACE.idFromName('x');
}
```

> [!NOTE] SvelteKit's built-in `$env` module should be preferred for environment variables.

To include type declarations for your bindings, reference them in your `src/app.d.ts`:

```ts
/// file: src/app.d.ts
import { KVNamespace, DurableObjectNamespace } from '@cloudflare/workers-types';

declare global {
	namespace App {
		interface Platform {
+++			env?: {
				YOUR_KV_NAMESPACE: KVNamespace;
				YOUR_DURABLE_OBJECT_NAMESPACE: DurableObjectNamespace;
			};+++
		}
	}
}

export {};
```

### Testing Locally

Cloudflare Workers specific values in the `platform` property are emulated during dev and preview modes. Local [bindings](https://developers.cloudflare.com/workers/wrangler/configuration/#bindings) are created based on the configuration in your `wrangler.toml` file and are used to populate `platform.env` during development and preview. Use the adapter config [`platformProxy` option](#Options-platformProxy) to change your preferences for the bindings.

For testing the build, you should use [wrangler](https://developers.cloudflare.com/workers/cli-wrangler) **version 3**. Once you have built your site, run `wrangler pages dev .svelte-kit/cloudflare`.

## Notes

Functions contained in the `/functions` directory at the project's root will _not_ be included in the deployment, which is compiled to a [single `_worker.js` file](https://developers.cloudflare.com/pages/platform/functions/#advanced-mode). Functions should be implemented as [server endpoints](routing#server) in your SvelteKit app.

The `_headers` and `_redirects` files specific to Cloudflare Pages can be used for static asset responses (like images) by putting them into the `/static` folder.

However, they will have no effect on responses dynamically rendered by SvelteKit, which should return custom headers or redirect responses from [server endpoints](routing#server) or with the [`handle`](hooks#Server-hooks-handle) hook.

## Troubleshooting

### Further reading

You may wish to refer to [Cloudflare's documentation for deploying a SvelteKit site](https://developers.cloudflare.com/pages/framework-guides/deploy-a-svelte-site).

### Accessing the file system

You can't use `fs` in Cloudflare Workers — you must [prerender](page-options#prerender) the routes in question.

'''
'''--- documentation/docs/25-build-and-deploy/70-adapter-cloudflare-workers.md ---
---
title: Cloudflare Workers
---

To deploy to [Cloudflare Workers](https://workers.cloudflare.com/), use [`adapter-cloudflare-workers`](https://github.com/sveltejs/kit/tree/main/packages/adapter-cloudflare-workers).

> [!NOTE] Unless you have a specific reason to use `adapter-cloudflare-workers`, it's recommended that you use `adapter-cloudflare` instead. Both adapters have equivalent functionality, but Cloudflare Pages offers features like GitHub integration with automatic builds and deploys, preview deployments, instant rollback and so on.

## Usage

Install with `npm i -D @sveltejs/adapter-cloudflare-workers`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-cloudflare-workers';

export default {
	kit: {
		adapter: adapter({
			config: 'wrangler.toml',
			platformProxy: {
				configPath: 'wrangler.toml',
				environment: undefined,
				experimentalJsonConfig: false,
				persist: false
			}
		})
	}
};
```

## Options

### config

Path to your custom `wrangler.toml` config file.

### platformProxy

Preferences for the emulated `platform.env` local bindings. See the [getPlatformProxy](https://developers.cloudflare.com/workers/wrangler/api/#syntax) Wrangler API documentation for a full list of options.

## Basic Configuration

This adapter expects to find a [wrangler.toml](https://developers.cloudflare.com/workers/platform/sites/configuration) file in the project root. It should look something like this:

```toml
/// file: wrangler.toml
name = "<your-service-name>"
account_id = "<your-account-id>"

main = "./.cloudflare/worker.js"
site.bucket = "./.cloudflare/public"

build.command = "npm run build"

compatibility_date = "2021-11-12"
workers_dev = true
```

`<your-service-name>` can be anything. `<your-account-id>` can be found by logging into your [Cloudflare dashboard](https://dash.cloudflare.com) and grabbing it from the end of the URL:

```
https://dash.cloudflare.com/<your-account-id>
```

> [!NOTE] You should add the `.cloudflare` directory (or whichever directories you specified for `main` and `site.bucket`) to your `.gitignore`.

You will need to install [wrangler](https://developers.cloudflare.com/workers/wrangler/get-started/) and log in, if you haven't already:

```
npm i -g wrangler
wrangler login
```

Then, you can build your app and deploy it:

```sh
wrangler deploy
```

## Custom config

If you would like to use a config file other than `wrangler.toml` you can specify so using the [`config` option](#Options-config).

If you would like to enable [Node.js compatibility](https://developers.cloudflare.com/workers/runtime-apis/nodejs/#enable-nodejs-from-the-cloudflare-dashboard), you can add "nodejs_compat" flag to `wrangler.toml`:

```toml
/// file: wrangler.toml
compatibility_flags = [ "nodejs_compat" ]
```

## Runtime APIs

The [`env`](https://developers.cloudflare.com/workers/runtime-apis/fetch-event#parameters) object contains your project's [bindings](https://developers.cloudflare.com/pages/platform/functions/bindings/), which consist of KV/DO namespaces, etc. It is passed to SvelteKit via the `platform` property, along with [`context`](https://developers.cloudflare.com/workers/runtime-apis/handlers/fetch/#contextwaituntil), [`caches`](https://developers.cloudflare.com/workers/runtime-apis/cache/), and [`cf`](https://developers.cloudflare.com/workers/runtime-apis/request/#the-cf-property-requestinitcfproperties), meaning that you can access it in hooks and endpoints:

```js
// @errors: 7031
export async function POST({ request, platform }) {
	const x = platform.env.YOUR_DURABLE_OBJECT_NAMESPACE.idFromName('x');
}
```

> [!NOTE] SvelteKit's built-in `$env` module should be preferred for environment variables.

To include type declarations for your bindings, reference them in your `src/app.d.ts`:

```ts
/// file: src/app.d.ts
import { KVNamespace, DurableObjectNamespace } from '@cloudflare/workers-types';

declare global {
	namespace App {
		interface Platform {
+++			env?: {
				YOUR_KV_NAMESPACE: KVNamespace;
				YOUR_DURABLE_OBJECT_NAMESPACE: DurableObjectNamespace;
			};+++
		}
	}
}

export {};
```

### Testing Locally

Cloudflare Workers specific values in the `platform` property are emulated during dev and preview modes. Local [bindings](https://developers.cloudflare.com/workers/wrangler/configuration/#bindings) are created based on the configuration in your `wrangler.toml` file and are used to populate `platform.env` during development and preview. Use the adapter config [`platformProxy` option](#Options-platformProxy) to change your preferences for the bindings.

For testing the build, you should use [wrangler](https://developers.cloudflare.com/workers/cli-wrangler) **version 3**. Once you have built your site, run `wrangler dev`.

## Troubleshooting

### Worker size limits

When deploying to workers, the server generated by SvelteKit is bundled into a single file. Wrangler will fail to publish your worker if it exceeds [the size limits](https://developers.cloudflare.com/workers/platform/limits/#worker-size) after minification. You're unlikely to hit this limit usually, but some large libraries can cause this to happen. In that case, you can try to reduce the size of your worker by only importing such libraries on the client side. See [the FAQ](./faq#How-do-I-use-X-with-SvelteKit-How-do-I-use-a-client-side-only-library-that-depends-on-document-or-window) for more information.

### Accessing the file system

You can't use `fs` in Cloudflare Workers — you must [prerender](page-options#prerender) the routes in question.

'''
'''--- documentation/docs/25-build-and-deploy/80-adapter-netlify.md ---
---
title: Netlify
---

To deploy to Netlify, use [`adapter-netlify`](https://github.com/sveltejs/kit/tree/main/packages/adapter-netlify).

This adapter will be installed by default when you use [`adapter-auto`](adapter-auto), but adding it to your project allows you to specify Netlify-specific options.

## Usage

Install with `npm i -D @sveltejs/adapter-netlify`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-netlify';

export default {
	kit: {
		// default options are shown
		adapter: adapter({
			// if true, will create a Netlify Edge Function rather
			// than using standard Node-based functions
			edge: false,

			// if true, will split your app into multiple functions
			// instead of creating a single one for the entire app.
			// if `edge` is true, this option cannot be used
			split: false
		})
	}
};
```

Then, make sure you have a [netlify.toml](https://docs.netlify.com/configure-builds/file-based-configuration) file in the project root. This will determine where to write static assets based on the `build.publish` settings, as per this sample configuration:

```toml
[build]
	command = "npm run build"
	publish = "build"
```

If the `netlify.toml` file or the `build.publish` value is missing, a default value of `"build"` will be used. Note that if you have set the publish directory in the Netlify UI to something else then you will need to set it in `netlify.toml` too, or use the default value of `"build"`.

### Node version

New projects will use the current Node LTS version by default. However, if you're upgrading a project you created a while ago it may be stuck on an older version. See [the Netlify docs](https://docs.netlify.com/configure-builds/manage-dependencies/#node-js-and-javascript) for details on manually specifying a current Node version.

## Netlify Edge Functions

SvelteKit supports [Netlify Edge Functions](https://docs.netlify.com/netlify-labs/experimental-features/edge-functions/). If you pass the option `edge: true` to the `adapter` function, server-side rendering will happen in a Deno-based edge function that's deployed close to the site visitor. If set to `false` (the default), the site will deploy to Node-based Netlify Functions.

```js
// @errors: 2307
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-netlify';

export default {
	kit: {
		adapter: adapter({
			// will create a Netlify Edge Function using Deno-based
			// rather than using standard Node-based functions
			edge: true
		})
	}
};
```

## Netlify alternatives to SvelteKit functionality

You may build your app using functionality provided directly by SvelteKit without relying on any Netlify functionality. Using the SvelteKit versions of these features will allow them to be used in dev mode, tested with integration tests, and to work with other adapters should you ever decide to switch away from Netlify. However, in some scenarios you may find it beneficial to use the Netlify versions of these features. One example would be if you're migrating an app that's already hosted on Netlify to SvelteKit.

### Redirect rules

During compilation, redirect rules are automatically appended to your `_redirects` file. (If it doesn't exist yet, it will be created.) That means:

- `[[redirects]]` in `netlify.toml` will never match as `_redirects` has a [higher priority](https://docs.netlify.com/routing/redirects/#rule-processing-order). So always put your rules in the [`_redirects` file](https://docs.netlify.com/routing/redirects/#syntax-for-the-redirects-file).
- `_redirects` shouldn't have any custom "catch all" rules such as `/* /foobar/:splat`. Otherwise the automatically appended rule will never be applied as Netlify is only processing [the first matching rule](https://docs.netlify.com/routing/redirects/#rule-processing-order).

### Netlify Forms

1. Create your Netlify HTML form as described [here](https://docs.netlify.com/forms/setup/#html-forms), e.g. as `/routes/contact/+page.svelte`. (Don't forget to add the hidden `form-name` input element!)
2. Netlify's build bot parses your HTML files at deploy time, which means your form must be [prerendered](page-options#prerender) as HTML. You can either add `export const prerender = true` to your `contact.svelte` to prerender just that page or set the `kit.prerender.force: true` option to prerender all pages.
3. If your Netlify form has a [custom success message](https://docs.netlify.com/forms/setup/#success-messages) like `<form netlify ... action="/success">` then ensure the corresponding `/routes/success/+page.svelte` exists and is prerendered.

### Netlify Functions

With this adapter, SvelteKit endpoints are hosted as [Netlify Functions](https://docs.netlify.com/functions/overview/). Netlify function handlers have additional context, including [Netlify Identity](https://docs.netlify.com/visitor-access/identity/) information. You can access this context via the `event.platform.context` field inside your hooks and `+page.server` or `+layout.server` endpoints. These are [serverless functions](https://docs.netlify.com/functions/overview/) when the `edge` property is `false` in the adapter config or [edge functions](https://docs.netlify.com/edge-functions/overview/#app) when it is `true`.

```js
// @errors: 2705 7006
/// file: +page.server.js
export const load = async (event) => {
	const context = event.platform.context;
	console.log(context); // shows up in your functions log in the Netlify app
};
```

Additionally, you can add your own Netlify functions by creating a directory for them and adding the configuration to your `netlify.toml` file. For example:

```toml
[build]
	command = "npm run build"
	publish = "build"

[functions]
	directory = "functions"
```

## Troubleshooting

### Accessing the file system

You can't use `fs` in edge deployments.

You _can_ use it in serverless deployments, but it won't work as expected, since files are not copied from your project into your deployment. Instead, use the `read` function from `$app/server` to access your files. `read` does not work inside edge deployments (this may change in future).

Alternatively, you can [prerender](page-options#prerender) the routes in question.

'''
'''--- documentation/docs/25-build-and-deploy/90-adapter-vercel.md ---
---
title: Vercel
---

To deploy to Vercel, use [`adapter-vercel`](https://github.com/sveltejs/kit/tree/main/packages/adapter-vercel).

This adapter will be installed by default when you use [`adapter-auto`](adapter-auto), but adding it to your project allows you to specify Vercel-specific options.

## Usage

Install with `npm i -D @sveltejs/adapter-vercel`, then add the adapter to your `svelte.config.js`:

```js
// @errors: 2307 2345
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-vercel';

export default {
	kit: {
		adapter: adapter({
			// see below for options that can be set here
		})
	}
};
```

## Deployment configuration

To control how your routes are deployed to Vercel as functions, you can specify deployment configuration, either through the option shown above or with [`export const config`](page-options#config) inside `+server.js`, `+page(.server).js` and `+layout(.server).js` files.

For example you could deploy some parts of your app as [Edge Functions](https://vercel.com/docs/concepts/functions/edge-functions)...

```js
/// file: about/+page.js
/** @type {import('@sveltejs/adapter-vercel').Config} */
export const config = {
	runtime: 'edge'
};
```

...and others as [Serverless Functions](https://vercel.com/docs/concepts/functions/serverless-functions) (note that by specifying `config` inside a layout, it applies to all child pages):

```js
/// file: admin/+layout.js
/** @type {import('@sveltejs/adapter-vercel').Config} */
export const config = {
	runtime: 'nodejs22.x'
};
```

The following options apply to all functions:

- `runtime`: `'edge'`, `'nodejs18.x'`, `'nodejs20.x'` or `'nodejs22.x'`. By default, the adapter will select the `'nodejs<version>.x'` corresponding to the Node version your project is configured to use on the Vercel dashboard
- `regions`: an array of [edge network regions](https://vercel.com/docs/concepts/edge-network/regions) (defaulting to `["iad1"]` for serverless functions) or `'all'` if `runtime` is `edge` (its default). Note that multiple regions for serverless functions are only supported on Enterprise plans
- `split`: if `true`, causes a route to be deployed as an individual function. If `split` is set to `true` at the adapter level, all routes will be deployed as individual functions

Additionally, the following option applies to edge functions:
- `external`: an array of dependencies that esbuild should treat as external when bundling functions. This should only be used to exclude optional dependencies that will not run outside Node

And the following option apply to serverless functions:
- `memory`: the amount of memory available to the function. Defaults to `1024` Mb, and can be decreased to `128` Mb or [increased](https://vercel.com/docs/concepts/limits/overview#serverless-function-memory) in 64Mb increments up to `3008` Mb on Pro or Enterprise accounts
- `maxDuration`: [maximum execution duration](https://vercel.com/docs/functions/runtimes#max-duration) of the function. Defaults to `10` seconds for Hobby accounts, `15` for Pro and `900` for Enterprise
- `isr`: configuration Incremental Static Regeneration, described below

If your functions need to access data in a specific region, it's recommended that they be deployed in the same region (or close to it) for optimal performance.

## Image Optimization

You may set the `images` config to control how Vercel builds your images. See the [image configuration reference](https://vercel.com/docs/build-output-api/v3/configuration#images) for full details. As an example, you may set:

```js
// @errors: 2300 2842 7031 1181 1005 1136 1128
/// file: svelte.config.js
import adapter from '@sveltejs/adapter-vercel';

export default {
	kit: {
		adapter({
			images: {
				sizes: [640, 828, 1200, 1920, 3840],
				formats: ['image/avif', 'image/webp'],
				minimumCacheTTL: 300,
				domains: ['example-app.vercel.app'],
			}
		})
	}
};
```

## Incremental Static Regeneration

Vercel supports [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) (ISR), which provides the performance and cost advantages of prerendered content with the flexibility of dynamically rendered content.

To add ISR to a route, include the `isr` property in your `config` object:

```js
// @errors: 2664
import { BYPASS_TOKEN } from '$env/static/private';

export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: 60,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: BYPASS_TOKEN,

		// List of valid query parameters. Other parameters (such as utm tracking codes) will be ignored,
		// ensuring that they do not result in content being regenerated unnecessarily
		allowQuery: ['search']
	}
};
```

The `expiration` property is required; all others are optional.

> Pages that are  [prerendered](page-options#prerender) will ignore ISR configuration.

## Environment variables

Vercel makes a set of [deployment-specific environment variables](https://vercel.com/docs/concepts/projects/environment-variables#system-environment-variables) available. Like other environment variables, these are accessible from `$env/static/private` and `$env/dynamic/private` (sometimes — more on that later), and inaccessible from their public counterparts. To access one of these variables from the client:

```js
// @errors: 2305
/// file: +layout.server.js
import { VERCEL_COMMIT_REF } from '$env/static/private';

/** @type {import('./$types').LayoutServerLoad} */
export function load() {
	return {
		deploymentGitBranch: VERCEL_COMMIT_REF
	};
}
```

```svelte
<!--- file: +layout.svelte --->
<script>
	/** @type {{ data: import('./$types').LayoutServerData }} */
	let { data } = $props();
</script>

<p>This staging environment was deployed from {data.deploymentGitBranch}.</p>
```

Since all of these variables are unchanged between build time and run time when building on Vercel, we recommend using `$env/static/private` — which will statically replace the variables, enabling optimisations like dead code elimination — rather than `$env/dynamic/private`.

## Skew protection

When a new version of your app is deployed, assets belonging to the previous version may no longer be accessible. If a user is actively using your app when this happens, it can cause errors when they navigate — this is known as _version skew_. SvelteKit mitigates this by detecting errors resulting from version skew and causing a hard reload to get the latest version of the app, but this will cause any client-side state to be lost. (You can also proactively mitigate it by observing the [`updated`]($app-stores#updated) store value, which tells clients when a new version has been deployed.)

[Skew protection](https://vercel.com/docs/deployments/skew-protection) is a Vercel feature that routes client requests to their original deployment. When a user visits your app, a cookie is set with the deployment ID, and any subsequent requests will be routed to that deployment for as long as skew protection is active. When they reload the page, they will get the newest deployment. (The `updated` store is exempted from this behaviour, and so will continue to report new deployments.) To enable it, visit the Advanced section of your project settings on Vercel.

Cookie-based skew protection comes with one caveat: if a user has multiple versions of your app open in multiple tabs, requests from older versions will be routed to the newer one, meaning they will fall back to SvelteKit's built-in skew protection.

## Notes

### Vercel functions

If you have Vercel functions contained in the `api` directory at the project's root, any requests for `/api/*` will _not_ be handled by SvelteKit. You should implement these as [API routes](routing#server) in your SvelteKit app instead, unless you need to use a non-JavaScript language in which case you will need to ensure that you don't have any `/api/*` routes in your SvelteKit app.

### Node version

Projects created before a certain date may default to using an older Node version than what SvelteKit currently requires. You can [change the Node version in your project settings](https://vercel.com/docs/concepts/functions/serverless-functions/runtimes/node-js#node.js-version).

## Troubleshooting

### Accessing the file system

You can't use `fs` in edge functions.

You _can_ use it in serverless functions, but it won't work as expected, since files are not copied from your project into your deployment. Instead, use the `read` function from `$app/server` to access your files. `read` does not work inside routes deployed as edge functions (this may change in future).

Alternatively, you can [prerender](page-options#prerender) the routes in question.

'''
'''--- documentation/docs/25-build-and-deploy/99-writing-adapters.md ---
---
title: Writing adapters
---

If an adapter for your preferred environment doesn't yet exist, you can build your own. We recommend [looking at the source for an adapter](https://github.com/sveltejs/kit/tree/main/packages) to a platform similar to yours and copying it as a starting point.

Adapter packages implement the following API, which creates an `Adapter`:

```js
// @errors: 2322
// @filename: ambient.d.ts
type AdapterSpecificOptions = any;

// @filename: index.js
// ---cut---
/** @param {AdapterSpecificOptions} options */
export default function (options) {
	/** @type {import('@sveltejs/kit').Adapter} */
	const adapter = {
		name: 'adapter-package-name',
		async adapt(builder) {
			// adapter implementation
		},
		async emulate() {
			return {
				async platform({ config, prerender }) {
					// the returned object becomes `event.platform` during dev, build and
					// preview. Its shape is that of `App.Platform`
				}
			}
		},
		supports: {
			read: ({ config, route }) => {
				// Return `true` if the route with the given `config` can use `read`
				// from `$app/server` in production, return `false` if it can't.
				// Or throw a descriptive error describing how to configure the deployment
			}
		}
	};

	return adapter;
}
```

Of these, `name` and `adapt` are required. `emulate` and `supports` are optional.

Within the `adapt` method, there are a number of things that an adapter should do:

- Clear out the build directory
- Write SvelteKit output with `builder.writeClient`, `builder.writeServer`, and `builder.writePrerendered`
- Output code that:
	- Imports `Server` from `${builder.getServerDirectory()}/index.js`
	- Instantiates the app with a manifest generated with `builder.generateManifest({ relativePath })`
	- Listens for requests from the platform, converts them to a standard [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) if necessary, calls the `server.respond(request, { getClientAddress })` function to generate a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) and responds with it
	- expose any platform-specific information to SvelteKit via the `platform` option passed to `server.respond`
	- Globally shims `fetch` to work on the target platform, if necessary. SvelteKit provides a `@sveltejs/kit/node/polyfills` helper for platforms that can use `undici`
- Bundle the output to avoid needing to install dependencies on the target platform, if necessary
- Put the user's static files and the generated JS/CSS in the correct location for the target platform

Where possible, we recommend putting the adapter output under the `build/` directory with any intermediate output placed under `.svelte-kit/[adapter-name]`.

'''
'''--- documentation/docs/25-build-and-deploy/index.md ---
---
title: Build and deploy
---

'''
'''--- documentation/docs/30-advanced/10-advanced-routing.md ---
---
title: Advanced routing
---

## Rest parameters

If the number of route segments is unknown, you can use rest syntax — for example you might implement GitHub's file viewer like so...

```bash
/[org]/[repo]/tree/[branch]/[...file]
```

...in which case a request for `/sveltejs/kit/tree/main/documentation/docs/04-advanced-routing.md` would result in the following parameters being available to the page:

```js
// @noErrors
{
	org: 'sveltejs',
	repo: 'kit',
	branch: 'main',
	file: 'documentation/docs/04-advanced-routing.md'
}
```

> [!NOTE] `src/routes/a/[...rest]/z/+page.svelte` will match `/a/z` (i.e. there's no parameter at all) as well as `/a/b/z` and `/a/b/c/z` and so on. Make sure you check that the value of the rest parameter is valid, for example using a [matcher](#Matching).

### 404 pages

Rest parameters also allow you to render custom 404s. Given these routes...

```tree
src/routes/
├ marx-brothers/
│ ├ chico/
│ ├ harpo/
│ ├ groucho/
│ └ +error.svelte
└ +error.svelte
```

...the `marx-brothers/+error.svelte` file will _not_ be rendered if you visit `/marx-brothers/karl`, because no route was matched. If you want to render the nested error page, you should create a route that matches any `/marx-brothers/*` request, and return a 404 from it:

```tree
src/routes/
├ marx-brothers/
+++| ├ [...path]/+++
│ ├ chico/
│ ├ harpo/
│ ├ groucho/
│ └ +error.svelte
└ +error.svelte
```

```js
/// file: src/routes/marx-brothers/[...path]/+page.js
import { error } from '@sveltejs/kit';

/** @type {import('./$types').PageLoad} */
export function load(event) {
	error(404, 'Not Found');
}
```

> [!NOTE] If you don't handle 404 cases, they will appear in [`handleError`](hooks#Shared-hooks-handleError)

## Optional parameters

A route like `[lang]/home` contains a parameter named `lang` which is required. Sometimes it's beneficial to make these parameters optional, so that in this example both `home` and `en/home` point to the same page. You can do that by wrapping the parameter in another bracket pair: `[[lang]]/home`

Note that an optional route parameter cannot follow a rest parameter (`[...rest]/[[optional]]`), since parameters are matched 'greedily' and the optional parameter would always be unused.

## Matching

A route like `src/routes/fruits/[page]` would match `/fruits/apple`, but it would also match `/fruits/rocketship`. We don't want that. You can ensure that route parameters are well-formed by adding a _matcher_ — which takes the parameter string (`"apple"` or `"rocketship"`) and returns `true` if it is valid — to your [`params`](configuration#files) directory...

```js
/// file: src/params/fruit.js
/**
 * @param {string} param
 * @return {param is ('apple' | 'orange')}
 * @satisfies {import('@sveltejs/kit').ParamMatcher}
 */
export function match(param) {
	return param === 'apple' || param === 'orange';
}
```

...and augmenting your routes:

```
src/routes/fruits/[page+++=fruit+++]
```

If the pathname doesn't match, SvelteKit will try to match other routes (using the sort order specified below), before eventually returning a 404.

Each module in the `params` directory corresponds to a matcher, with the exception of `*.test.js` and `*.spec.js` files which may be used to unit test your matchers.

> [!NOTE] Matchers run both on the server and in the browser.

## Sorting

It's possible for multiple routes to match a given path. For example each of these routes would match `/foo-abc`:

```bash
src/routes/[...catchall]/+page.svelte
src/routes/[[a=x]]/+page.svelte
src/routes/[b]/+page.svelte
src/routes/foo-[c]/+page.svelte
src/routes/foo-abc/+page.svelte
```

SvelteKit needs to know which route is being requested. To do so, it sorts them according to the following rules...

- More specific routes are higher priority (e.g. a route with no parameters is more specific than a route with one dynamic parameter, and so on)
- Parameters with [matchers](#Matching) (`[name=type]`) are higher priority than those without (`[name]`)
- `[[optional]]` and `[...rest]` parameters are ignored unless they are the final part of the route, in which case they are treated with lowest priority. In other words `x/[[y]]/z` is treated equivalently to `x/z` for the purposes of sorting
- Ties are resolved alphabetically

...resulting in this ordering, meaning that `/foo-abc` will invoke `src/routes/foo-abc/+page.svelte`, and `/foo-def` will invoke `src/routes/foo-[c]/+page.svelte` rather than less specific routes:

```bash
src/routes/foo-abc/+page.svelte
src/routes/foo-[c]/+page.svelte
src/routes/[[a=x]]/+page.svelte
src/routes/[b]/+page.svelte
src/routes/[...catchall]/+page.svelte
```

## Encoding

Some characters can't be used on the filesystem — `/` on Linux and Mac, `\ / : * ? " < > |` on Windows. The `#` and `%` characters have special meaning in URLs, and the `[ ] ( )` characters have special meaning to SvelteKit, so these also can't be used directly as part of your route.

To use these characters in your routes, you can use hexadecimal escape sequences, which have the format `[x+nn]` where `nn` is a hexadecimal character code:

- `\` — `[x+5c]`
- `/` — `[x+2f]`
- `:` — `[x+3a]`
- `*` — `[x+2a]`
- `?` — `[x+3f]`
- `"` — `[x+22]`
- `<` — `[x+3c]`
- `>` — `[x+3e]`
- `|` — `[x+7c]`
- `#` — `[x+23]`
- `%` — `[x+25]`
- `[` — `[x+5b]`
- `]` — `[x+5d]`
- `(` — `[x+28]`
- `)` — `[x+29]`

For example, to create a `/smileys/:-)` route, you would create a `src/routes/smileys/[x+3a]-[x+29]/+page.svelte` file.

You can determine the hexadecimal code for a character with JavaScript:

```js
':'.charCodeAt(0).toString(16); // '3a', hence '[x+3a]'
```

You can also use Unicode escape sequences. Generally you won't need to as you can use the unencoded character directly, but if — for some reason — you can't have a filename with an emoji in it, for example, then you can use the escaped characters. In other words, these are equivalent:

```
src/routes/[u+d83e][u+dd2a]/+page.svelte
src/routes/🤪/+page.svelte
```

The format for a Unicode escape sequence is `[u+nnnn]` where `nnnn` is a valid value between `0000` and `10ffff`. (Unlike JavaScript string escaping, there's no need to use surrogate pairs to represent code points above `ffff`.) To learn more about Unicode encodings, consult [Programming with Unicode](https://unicodebook.readthedocs.io/unicode_encodings.html).

> [!NOTE] Since TypeScript [struggles](https://github.com/microsoft/TypeScript/issues/13399) with directories with a leading `.` character, you may find it useful to encode these characters when creating e.g. [`.well-known`](https://en.wikipedia.org/wiki/Well-known_URI) routes: `src/routes/[x+2e]well-known/...`

## Advanced layouts

By default, the _layout hierarchy_ mirrors the _route hierarchy_. In some cases, that might not be what you want.

### (group)

Perhaps you have some routes that are 'app' routes that should have one layout (e.g. `/dashboard` or `/item`), and others that are 'marketing' routes that should have a different layout (`/about` or `/testimonials`). We can group these routes with a directory whose name is wrapped in parentheses — unlike normal directories, `(app)` and `(marketing)` do not affect the URL pathname of the routes inside them:

```tree
src/routes/
+++│ (app)/+++
│ ├ dashboard/
│ ├ item/
│ └ +layout.svelte
+++│ (marketing)/+++
│ ├ about/
│ ├ testimonials/
│ └ +layout.svelte
├ admin/
└ +layout.svelte
```

You can also put a `+page` directly inside a `(group)`, for example if `/` should be an `(app)` or a `(marketing)` page.

### Breaking out of layouts

The root layout applies to every page of your app — if omitted, it defaults to `{@render children()}`. If you want some pages to have a different layout hierarchy than the rest, then you can put your entire app inside one or more groups _except_ the routes that should not inherit the common layouts.

In the example above, the `/admin` route does not inherit either the `(app)` or `(marketing)` layouts.

### +page@

Pages can break out of the current layout hierarchy on a route-by-route basis. Suppose we have an `/item/[id]/embed` route inside the `(app)` group from the previous example:

```tree
src/routes/
├ (app)/
│ ├ item/
│ │ ├ [id]/
│ │ │ ├ embed/
+++│ │ │ │ └ +page.svelte+++
│ │ │ └ +layout.svelte
│ │ └ +layout.svelte
│ └ +layout.svelte
└ +layout.svelte
```

Ordinarily, this would inherit the root layout, the `(app)` layout, the `item` layout and the `[id]` layout. We can reset to one of those layouts by appending `@` followed by the segment name — or, for the root layout, the empty string. In this example, we can choose from the following options:

- `+page@[id].svelte` - inherits from `src/routes/(app)/item/[id]/+layout.svelte`
- `+page@item.svelte` - inherits from `src/routes/(app)/item/+layout.svelte`
- `+page@(app).svelte` - inherits from `src/routes/(app)/+layout.svelte`
- `+page@.svelte` - inherits from `src/routes/+layout.svelte`

```tree
src/routes/
├ (app)/
│ ├ item/
│ │ ├ [id]/
│ │ │ ├ embed/
+++│ │ │ │ └ +page@(app).svelte+++
│ │ │ └ +layout.svelte
│ │ └ +layout.svelte
│ └ +layout.svelte
└ +layout.svelte
```

### +layout@

Like pages, layouts can _themselves_ break out of their parent layout hierarchy, using the same technique. For example, a `+layout@.svelte` component would reset the hierarchy for all its child routes.

```
src/routes/
├ (app)/
│ ├ item/
│ │ ├ [id]/
│ │ │ ├ embed/
│ │ │ │ └ +page.svelte  // uses (app)/item/[id]/+layout.svelte
│ │ │ ├ +layout.svelte  // inherits from (app)/item/+layout@.svelte
│ │ │ └ +page.svelte    // uses (app)/item/+layout@.svelte
│ │ └ +layout@.svelte   // inherits from root layout, skipping (app)/+layout.svelte
│ └ +layout.svelte
└ +layout.svelte
```

### When to use layout groups

Not all use cases are suited for layout grouping, nor should you feel compelled to use them. It might be that your use case would result in complex `(group)` nesting, or that you don't want to introduce a `(group)` for a single outlier. It's perfectly fine to use other means such as composition (reusable `load` functions or Svelte components) or if-statements to achieve what you want. The following example shows a layout that rewinds to the root layout and reuses components and functions that other layouts can also use:

```svelte
<!--- file: src/routes/nested/route/+layout@.svelte --->
<script>
	import ReusableLayout from '$lib/ReusableLayout.svelte';
	let { data, children } = $props();
</script>

<ReusableLayout {data}>
	{@render children()}
</ReusableLayout>
```

```js
/// file: src/routes/nested/route/+layout.js
// @filename: ambient.d.ts
declare module "$lib/reusable-load-function" {
	export function reusableLoad(event: import('@sveltejs/kit').LoadEvent): Promise<Record<string, any>>;
}
// @filename: index.js
// ---cut---
import { reusableLoad } from '$lib/reusable-load-function';

/** @type {import('./$types').PageLoad} */
export function load(event) {
	// Add additional logic here, if needed
	return reusableLoad(event);
}
```

## Further reading

- [Tutorial: Advanced Routing](/tutorial/kit/optional-params)

'''
'''--- documentation/docs/30-advanced/20-hooks.md ---
---
title: Hooks
---

'Hooks' are app-wide functions you declare that SvelteKit will call in response to specific events, giving you fine-grained control over the framework's behaviour.

There are three hooks files, all optional:

- `src/hooks.server.js` — your app's server hooks
- `src/hooks.client.js` — your app's client hooks
- `src/hooks.js` — your app's hooks that run on both the client and server

Code in these modules will run when the application starts up, making them useful for initializing database clients and so on.

> [!NOTE] You can configure the location of these files with [`config.kit.files.hooks`](configuration#files).

## Server hooks

The following hooks can be added to `src/hooks.server.js`:

### handle

This function runs every time the SvelteKit server receives a [request](web-standards#Fetch-APIs-Request) — whether that happens while the app is running, or during [prerendering](page-options#prerender) — and determines the [response](web-standards#Fetch-APIs-Response). It receives an `event` object representing the request and a function called `resolve`, which renders the route and generates a `Response`. This allows you to modify response headers or bodies, or bypass SvelteKit entirely (for implementing routes programmatically, for example).

```js
/// file: src/hooks.server.js
/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	if (event.url.pathname.startsWith('/custom')) {
		return new Response('custom response');
	}

	const response = await resolve(event);
	return response;
}
```

> [!NOTE] Requests for static assets — which includes pages that were already prerendered — are _not_ handled by SvelteKit.

If unimplemented, defaults to `({ event, resolve }) => resolve(event)`.

### locals

To add custom data to the request, which is passed to handlers in `+server.js` and server `load` functions, populate the `event.locals` object, as shown below.

```js
/// file: src/hooks.server.js
// @filename: ambient.d.ts
type User = {
	name: string;
}

declare namespace App {
	interface Locals {
		user: User;
	}
}

const getUserInformation: (cookie: string | void) => Promise<User>;

// @filename: index.js
// ---cut---
/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	event.locals.user = await getUserInformation(event.cookies.get('sessionid'));

	const response = await resolve(event);
	response.headers.set('x-custom-header', 'potato');

	return response;
}
```

You can define multiple `handle` functions and execute them with [the `sequence` helper function](@sveltejs-kit-hooks).

`resolve` also supports a second, optional parameter that gives you more control over how the response will be rendered. That parameter is an object that can have the following fields:

- `transformPageChunk(opts: { html: string, done: boolean }): MaybePromise<string | undefined>` — applies custom transforms to HTML. If `done` is true, it's the final chunk. Chunks are not guaranteed to be well-formed HTML (they could include an element's opening tag but not its closing tag, for example) but they will always be split at sensible boundaries such as `%sveltekit.head%` or layout/page components.
- `filterSerializedResponseHeaders(name: string, value: string): boolean` — determines which headers should be included in serialized responses when a `load` function loads a resource with `fetch`. By default, none will be included.
- `preload(input: { type: 'js' | 'css' | 'font' | 'asset', path: string }): boolean` — determines what files should be added to the `<head>` tag to preload it. The method is called with each file that was found at build time while constructing the code chunks — so if you for example have `import './styles.css` in your `+page.svelte`, `preload` will be called with the resolved path to that CSS file when visiting that page. Note that in dev mode `preload` is _not_ called, since it depends on analysis that happens at build time. Preloading can improve performance by downloading assets sooner, but it can also hurt if too much is downloaded unnecessarily. By default, `js` and `css` files will be preloaded. `asset` files are not preloaded at all currently, but we may add this later after evaluating feedback.

```js
/// file: src/hooks.server.js
/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	const response = await resolve(event, {
		transformPageChunk: ({ html }) => html.replace('old', 'new'),
		filterSerializedResponseHeaders: (name) => name.startsWith('x-'),
		preload: ({ type, path }) => type === 'js' || path.includes('/important/')
	});

	return response;
}
```

Note that `resolve(...)` will never throw an error, it will always return a `Promise<Response>` with the appropriate status code. If an error is thrown elsewhere during `handle`, it is treated as fatal, and SvelteKit will respond with a JSON representation of the error or a fallback error page — which can be customised via `src/error.html` — depending on the `Accept` header. You can read more about error handling [here](errors).

### handleFetch

This function allows you to modify (or replace) a `fetch` request that happens inside a `load` or `action` function that runs on the server (or during pre-rendering).

For example, your `load` function might make a request to a public URL like `https://api.yourapp.com` when the user performs a client-side navigation to the respective page, but during SSR it might make sense to hit the API directly (bypassing whatever proxies and load balancers sit between it and the public internet).

```js
/// file: src/hooks.server.js
/** @type {import('@sveltejs/kit').HandleFetch} */
export async function handleFetch({ request, fetch }) {
	if (request.url.startsWith('https://api.yourapp.com/')) {
		// clone the original request, but change the URL
		request = new Request(
			request.url.replace('https://api.yourapp.com/', 'http://localhost:9999/'),
			request
		);
	}

	return fetch(request);
}
```

**Credentials**

For same-origin requests, SvelteKit's `fetch` implementation will forward `cookie` and `authorization` headers unless the `credentials` option is set to `"omit"`.

For cross-origin requests, `cookie` will be included if the request URL belongs to a subdomain of the app — for example if your app is on `my-domain.com`, and your API is on `api.my-domain.com`, cookies will be included in the request.

If your app and your API are on sibling subdomains — `www.my-domain.com` and `api.my-domain.com` for example — then a cookie belonging to a common parent domain like `my-domain.com` will _not_ be included, because SvelteKit has no way to know which domain the cookie belongs to. In these cases you will need to manually include the cookie using `handleFetch`:

```js
/// file: src/hooks.server.js
// @errors: 2345
/** @type {import('@sveltejs/kit').HandleFetch} */
export async function handleFetch({ event, request, fetch }) {
	if (request.url.startsWith('https://api.my-domain.com/')) {
		request.headers.set('cookie', event.request.headers.get('cookie'));
	}

	return fetch(request);
}
```

## Shared hooks

The following can be added to `src/hooks.server.js` _and_ `src/hooks.client.js`:

### handleError

If an [unexpected error](errors#Unexpected-errors) is thrown during loading or rendering, this function will be called with the `error`, `event`, `status` code and `message`. This allows for two things:

- you can log the error
- you can generate a custom representation of the error that is safe to show to users, omitting sensitive details like messages and stack traces. The returned value, which defaults to `{ message }`, becomes the value of `$page.error`.

For errors thrown from your code (or library code called by your code) the status will be 500 and the message will be "Internal Error". While `error.message` may contain sensitive information that should not be exposed to users, `message` is safe (albeit meaningless to the average user).

To add more information to the `$page.error` object in a type-safe way, you can customize the expected shape by declaring an `App.Error` interface (which must include `message: string`, to guarantee sensible fallback behavior). This allows you to — for example — append a tracking ID for users to quote in correspondence with your technical support staff:

```ts
/// file: src/app.d.ts
declare global {
	namespace App {
		interface Error {
			message: string;
			errorId: string;
		}
	}
}

export {};
```

```js
/// file: src/hooks.server.js
// @errors: 2322 2353
// @filename: ambient.d.ts
declare module '@sentry/sveltekit' {
	export const init: (opts: any) => void;
	export const captureException: (error: any, opts: any) => void;
}

// @filename: index.js
// ---cut---
import * as Sentry from '@sentry/sveltekit';

Sentry.init({/*...*/})

/** @type {import('@sveltejs/kit').HandleServerError} */
export async function handleError({ error, event, status, message }) {
	const errorId = crypto.randomUUID();

	// example integration with https://sentry.io/
	Sentry.captureException(error, {
		extra: { event, errorId, status }
	});

	return {
		message: 'Whoops!',
		errorId
	};
}
```

```js
/// file: src/hooks.client.js
// @errors: 2322 2353
// @filename: ambient.d.ts
declare module '@sentry/sveltekit' {
	export const init: (opts: any) => void;
	export const captureException: (error: any, opts: any) => void;
}

// @filename: index.js
// ---cut---
import * as Sentry from '@sentry/sveltekit';

Sentry.init({/*...*/})

/** @type {import('@sveltejs/kit').HandleClientError} */
export async function handleError({ error, event, status, message }) {
	const errorId = crypto.randomUUID();

	// example integration with https://sentry.io/
	Sentry.captureException(error, {
		extra: { event, errorId, status }
	});

	return {
		message: 'Whoops!',
		errorId
	};
}
```

> [!NOTE] In `src/hooks.client.js`, the type of `handleError` is `HandleClientError` instead of `HandleServerError`, and `event` is a `NavigationEvent` rather than a `RequestEvent`.

This function is not called for _expected_ errors (those thrown with the [`error`](@sveltejs-kit#error) function imported from `@sveltejs/kit`).

During development, if an error occurs because of a syntax error in your Svelte code, the passed in error has a `frame` property appended highlighting the location of the error.

> [!NOTE] Make sure that `handleError` _never_ throws an error

## Universal hooks

The following can be added to `src/hooks.js`. Universal hooks run on both server and client (not to be confused with shared hooks, which are environment-specific).

### reroute

This function runs before `handle` and allows you to change how URLs are translated into routes. The returned pathname (which defaults to `url.pathname`) is used to select the route and its parameters.

For example, you might have a `src/routes/[[lang]]/about/+page.svelte` page, which should be accessible as `/en/about` or `/de/ueber-uns` or `/fr/a-propos`. You could implement this with `reroute`:

```js
/// file: src/hooks.js
// @errors: 2345
// @errors: 2304

/** @type {Record<string, string>} */
const translated = {
	'/en/about': '/en/about',
	'/de/ueber-uns': '/de/about',
	'/fr/a-propos': '/fr/about',
};

/** @type {import('@sveltejs/kit').Reroute} */
export function reroute({ url }) {
	if (url.pathname in translated) {
		return translated[url.pathname];
	}
}
```

The `lang` parameter will be correctly derived from the returned pathname.

Using `reroute` will _not_ change the contents of the browser's address bar, or the value of `event.url`.

## Further reading

- [Tutorial: Hooks](/tutorial/kit/handle)

'''
'''--- documentation/docs/30-advanced/25-errors.md ---
---
title: Errors
---

Errors are an inevitable fact of software development. SvelteKit handles errors differently depending on where they occur, what kind of errors they are, and the nature of the incoming request.

## Error objects

SvelteKit distinguishes between expected and unexpected errors, both of which are represented as simple `{ message: string }` objects by default.

You can add additional properties, like a `code` or a tracking `id`, as shown in the examples below. (When using TypeScript this requires you to redefine the `Error` type as described in  [type safety](errors#Type-safety)).

## Expected errors

An _expected_ error is one created with the [`error`](@sveltejs-kit#error) helper imported from `@sveltejs/kit`:

```js
/// file: src/routes/blog/[slug]/+page.server.js
// @filename: ambient.d.ts
declare module '$lib/server/database' {
	export function getPost(slug: string): Promise<{ title: string, content: string } | undefined>
}

// @filename: index.js
// ---cut---
import { error } from '@sveltejs/kit';
import * as db from '$lib/server/database';

/** @type {import('./$types').PageServerLoad} */
export async function load({ params }) {
	const post = await db.getPost(params.slug);

	if (!post) {
		error(404, {
			message: 'Not found'
		});
	}

	return { post };
}
```

This throws an exception that SvelteKit catches, causing it to set the response status code to 404 and render an [`+error.svelte`](routing#error) component, where `$page.error` is the object provided as the second argument to `error(...)`.

```svelte
<!--- file: src/routes/+error.svelte --->
<script>
	import { page } from '$app/stores';
</script>

<h1>{$page.error.message}</h1>
```

You can add extra properties to the error object if needed...

```js
import { error } from '@sveltejs/kit';

declare global {
	namespace App {
		interface Error {
			message: string;
			code: string;
		}
	}
}

// ---cut---
error(404, {
	message: 'Not found',
	+++code: 'NOT_FOUND'+++
});
```

...otherwise, for convenience, you can pass a string as the second argument:

```js
import { error } from '@sveltejs/kit';
// ---cut---
---error(404, { message: 'Not found' });---
+++error(404, 'Not found');+++
```

> [!NOTE] [In SvelteKit 1.x](migrating-to-sveltekit-2#redirect-and-error-are-no-longer-thrown-by-you) you had to `throw` the `error` yourself

## Unexpected errors

An _unexpected_ error is any other exception that occurs while handling a request. Since these can contain sensitive information, unexpected error messages and stack traces are not exposed to users.

By default, unexpected errors are printed to the console (or, in production, your server logs), while the error that is exposed to the user has a generic shape:

```json
{ "message": "Internal Error" }
```

Unexpected errors will go through the [`handleError`](hooks#Shared-hooks-handleError) hook, where you can add your own error handling — for example, sending errors to a reporting service, or returning a custom error object which becomes `$page.error`.

## Responses

If an error occurs inside `handle` or inside a [`+server.js`](routing#server) request handler, SvelteKit will respond with either a fallback error page or a JSON representation of the error object, depending on the request's `Accept` headers.

You can customise the fallback error page by adding a `src/error.html` file:

```html
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<title>%sveltekit.error.message%</title>
	</head>
	<body>
		<h1>My custom error page</h1>
		<p>Status: %sveltekit.status%</p>
		<p>Message: %sveltekit.error.message%</p>
	</body>
</html>
```

SvelteKit will replace `%sveltekit.status%` and `%sveltekit.error.message%` with their corresponding values.

If the error instead occurs inside a `load` function while rendering a page, SvelteKit will render the [`+error.svelte`](routing#error) component nearest to where the error occurred. If the error occurs inside a `load` function in `+layout(.server).js`, the closest error boundary in the tree is an `+error.svelte` file _above_ that layout (not next to it).

The exception is when the error occurs inside the root `+layout.js` or `+layout.server.js`, since the root layout would ordinarily _contain_ the `+error.svelte` component. In this case, SvelteKit uses the fallback error page.

## Type safety

If you're using TypeScript and need to customize the shape of errors, you can do so by declaring an `App.Error` interface in your app (by convention, in `src/app.d.ts`, though it can live anywhere that TypeScript can 'see'):

```ts
/// file: src/app.d.ts
declare global {
	namespace App {
		interface Error {
+++			code: string;
			id: string;+++
		}
	}
}

export {};
```

This interface always includes a `message: string` property.

## Further reading

- [Tutorial: Errors and redirects](/tutorial/kit/error-basics)
- [Tutorial: Hooks](/tutorial/kit/handle)

'''
'''--- documentation/docs/30-advanced/30-link-options.md ---
---
title: Link options
---

In SvelteKit, `<a>` elements (rather than framework-specific `<Link>` components) are used to navigate between the routes of your app. If the user clicks on a link whose `href` is 'owned' by the app (as opposed to, say, a link to an external site) then SvelteKit will navigate to the new page by importing its code and then calling any `load` functions it needs to fetch data.

You can customise the behaviour of links with `data-sveltekit-*` attributes. These can be applied to the `<a>` itself, or to a parent element.

These options also apply to `<form>` elements with [`method="GET"`](form-actions#GET-vs-POST).

## data-sveltekit-preload-data

Before the browser registers that the user has clicked on a link, we can detect that they've hovered the mouse over it (on desktop) or that a `touchstart` or `mousedown` event was triggered. In both cases, we can make an educated guess that a `click` event is coming.

SvelteKit can use this information to get a head start on importing the code and fetching the page's data, which can give us an extra couple of hundred milliseconds — the difference between a user interface that feels laggy and one that feels snappy.

We can control this behaviour with the `data-sveltekit-preload-data` attribute, which can have one of two values:

- `"hover"` means that preloading will start if the mouse comes to a rest over a link. On mobile, preloading begins on `touchstart`
- `"tap"` means that preloading will start as soon as a `touchstart` or `mousedown` event is registered

The default project template has a `data-sveltekit-preload-data="hover"` attribute applied to the `<body>` element in `src/app.html`, meaning that every link is preloaded on hover by default:

```html
<body data-sveltekit-preload-data="hover">
	<div style="display: contents">%sveltekit.body%</div>
</body>
```

Sometimes, calling `load` when the user hovers over a link might be undesirable, either because it's likely to result in false positives (a click needn't follow a hover) or because data is updating very quickly and a delay could mean staleness.

In these cases, you can specify the `"tap"` value, which causes SvelteKit to call `load` only when the user taps or clicks on a link:

```html
<a data-sveltekit-preload-data="tap" href="/stonks">
	Get current stonk values
</a>
```

> [!NOTE] You can also programmatically invoke `preloadData` from `$app/navigation`.

Data will never be preloaded if the user has chosen reduced data usage, meaning [`navigator.connection.saveData`](https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/saveData) is `true`.

## data-sveltekit-preload-code

Even in cases where you don't want to preload _data_ for a link, it can be beneficial to preload the _code_. The `data-sveltekit-preload-code` attribute works similarly to `data-sveltekit-preload-data`, except that it can take one of four values, in decreasing 'eagerness':

- `"eager"` means that links will be preloaded straight away
- `"viewport"` means that links will be preloaded once they enter the viewport
- `"hover"` - as above, except that only code is preloaded
- `"tap"` - as above, except that only code is preloaded

Note that `viewport` and `eager` only apply to links that are present in the DOM immediately following navigation — if a link is added later (in an `{#if ...}` block, for example) it will not be preloaded until triggered by `hover` or `tap`. This is to avoid performance pitfalls resulting from aggressively observing the DOM for changes.

> [!NOTE] Since preloading code is a prerequisite for preloading data, this attribute will only have an effect if it specifies a more eager value than any `data-sveltekit-preload-data` attribute that is present.

As with `data-sveltekit-preload-data`, this attribute will be ignored if the user has chosen reduced data usage.

## data-sveltekit-reload

Occasionally, we need to tell SvelteKit not to handle a link, but allow the browser to handle it. Adding a `data-sveltekit-reload` attribute to a link...

```html
<a data-sveltekit-reload href="/path">Path</a>
```

...will cause a full-page navigation when the link is clicked.

Links with a `rel="external"` attribute will receive the same treatment. In addition, they will be ignored during [prerendering](page-options#prerender).

## data-sveltekit-replacestate

Sometimes you don't want navigation to create a new entry in the browser's session history. Adding a `data-sveltekit-replacestate` attribute to a link...

```html
<a data-sveltekit-replacestate href="/path">Path</a>
```

...will replace the current `history` entry rather than creating a new one with `pushState` when the link is clicked.

## data-sveltekit-keepfocus

Sometimes you don't want [focus to be reset](accessibility#Focus-management) after navigation. For example, maybe you have a search form that submits as the user is typing, and you want to keep focus on the text input.  Adding a `data-sveltekit-keepfocus` attribute to it...

```html
<form data-sveltekit-keepfocus>
	<input type="text" name="query">
</form>
```

...will cause the currently focused element to retain focus after navigation. In general, avoid using this attribute on links, since the focused element would be the `<a>` tag (and not a previously focused element) and screen reader and other assistive technology users often expect focus to be moved after a navigation. You should also only use this attribute on elements that still exist after navigation. If the element no longer exists, the user's focus will be lost, making for a confusing experience for assistive technology users.

## data-sveltekit-noscroll

When navigating to internal links, SvelteKit mirrors the browser's default navigation behaviour: it will change the scroll position to 0,0 so that the user is at the very top left of the page (unless the link includes a `#hash`, in which case it will scroll to the element with a matching ID).

In certain cases, you may wish to disable this behaviour. Adding a `data-sveltekit-noscroll` attribute to a link...

```html
<a href="path" data-sveltekit-noscroll>Path</a>
```

...will prevent scrolling after the link is clicked.

## Disabling options

To disable any of these options inside an element where they have been enabled, use the `"false"` value:

```html
<div data-sveltekit-preload-data>
	<!-- these links will be preloaded -->
	<a href="/a">a</a>
	<a href="/b">b</a>
	<a href="/c">c</a>

	<div data-sveltekit-preload-data="false">
		<!-- these links will NOT be preloaded -->
		<a href="/d">d</a>
		<a href="/e">e</a>
		<a href="/f">f</a>
	</div>
</div>
```

To apply an attribute to an element conditionally, do this:

```svelte
<div data-sveltekit-preload-data={condition ? 'hover' : false}>
```

'''
'''--- documentation/docs/30-advanced/40-service-workers.md ---
---
title: Service workers
---

Service workers act as proxy servers that handle network requests inside your app. This makes it possible to make your app work offline, but even if you don't need offline support (or can't realistically implement it because of the type of app you're building), it's often worth using service workers to speed up navigation by precaching your built JS and CSS.

In SvelteKit, if you have a `src/service-worker.js` file (or `src/service-worker/index.js`) it will be bundled and automatically registered. You can change the [location of your service worker](configuration#files) if you need to.

You can [disable automatic registration](configuration#serviceWorker) if you need to register the service worker with your own logic or use another solution. The default registration looks something like this:

```js
if ('serviceWorker' in navigator) {
	addEventListener('load', function () {
		navigator.serviceWorker.register('./path/to/service-worker.js');
	});
}
```

## Inside the service worker

Inside the service worker you have access to the [`$service-worker` module]($service-worker), which provides you with the paths to all static assets, build files and prerendered pages. You're also provided with an app version string, which you can use for creating a unique cache name, and the deployment's `base` path. If your Vite config specifies `define` (used for global variable replacements), this will be applied to service workers as well as your server/client builds.

The following example caches the built app and any files in `static` eagerly, and caches all other requests as they happen. This would make each page work offline once visited.

```js
// @errors: 2339
/// <reference types="@sveltejs/kit" />
import { build, files, version } from '$service-worker';

// Create a unique cache name for this deployment
const CACHE = `cache-${version}`;

const ASSETS = [
	...build, // the app itself
	...files  // everything in `static`
];

self.addEventListener('install', (event) => {
	// Create a new cache and add all files to it
	async function addFilesToCache() {
		const cache = await caches.open(CACHE);
		await cache.addAll(ASSETS);
	}

	event.waitUntil(addFilesToCache());
});

self.addEventListener('activate', (event) => {
	// Remove previous cached data from disk
	async function deleteOldCaches() {
		for (const key of await caches.keys()) {
			if (key !== CACHE) await caches.delete(key);
		}
	}

	event.waitUntil(deleteOldCaches());
});

self.addEventListener('fetch', (event) => {
	// ignore POST requests etc
	if (event.request.method !== 'GET') return;

	async function respond() {
		const url = new URL(event.request.url);
		const cache = await caches.open(CACHE);

		// `build`/`files` can always be served from the cache
		if (ASSETS.includes(url.pathname)) {
			const response = await cache.match(url.pathname);

			if (response) {
				return response;
			}
		}

		// for everything else, try the network first, but
		// fall back to the cache if we're offline
		try {
			const response = await fetch(event.request);

			// if we're offline, fetch can return a value that is not a Response
			// instead of throwing - and we can't pass this non-Response to respondWith
			if (!(response instanceof Response)) {
				throw new Error('invalid response from fetch');
			}

			if (response.status === 200) {
				cache.put(event.request, response.clone());
			}

			return response;
		} catch (err) {
			const response = await cache.match(event.request);

			if (response) {
				return response;
			}

			// if there's no cache, then just error out
			// as there is nothing we can do to respond to this request
			throw err;
		}
	}

	event.respondWith(respond());
});
```

> [!NOTE] Be careful when caching! In some cases, stale data might be worse than data that's unavailable while offline. Since browsers will empty caches if they get too full, you should also be careful about caching large assets like video files.

## During development

The service worker is bundled for production, but not during development. For that reason, only browsers that support [modules in service workers](https://web.dev/es-modules-in-sw) will be able to use them at dev time. If you are manually registering your service worker, you will need to pass the `{ type: 'module' }` option in development:

```js
import { dev } from '$app/environment';

navigator.serviceWorker.register('/service-worker.js', {
	type: dev ? 'module' : 'classic'
});
```

> [!NOTE] `build` and `prerendered` are empty arrays during development

## Type safety

Setting up proper types for service workers requires some manual setup. Inside your `service-worker.js`, add the following to the top of your file:

```original-js
/// <reference types="@sveltejs/kit" />
/// <reference no-default-lib="true"/>
/// <reference lib="esnext" />
/// <reference lib="webworker" />

const sw = /** @type {ServiceWorkerGlobalScope} */ (/** @type {unknown} */ (self));
```
```generated-ts
/// <reference types="@sveltejs/kit" />
/// <reference no-default-lib="true"/>
/// <reference lib="esnext" />
/// <reference lib="webworker" />

const sw = self as unknown as ServiceWorkerGlobalScope;
```

This disables access to DOM typings like `HTMLElement` which are not available inside a service worker and instantiates the correct globals. The reassignment of `self` to `sw` allows you to type cast it in the process (there are a couple of ways to do this, but this is the easiest that requires no additional files). Use `sw` instead of `self` in the rest of the file. The reference to the SvelteKit types ensures that the `$service-worker` import has proper type definitions. If you import `$env/static/public` you either have to `// @ts-ignore` the import or add `/// <reference types="../.svelte-kit/ambient.d.ts" />` to the reference types.

## Other solutions

SvelteKit's service worker implementation is deliberately low-level. If you need a more full-fledged but also more opinionated solution, we recommend looking at solutions like [Vite PWA plugin](https://vite-pwa-org.netlify.app/frameworks/sveltekit.html), which uses [Workbox](https://web.dev/learn/pwa/workbox). For more general information on service workers, we recommend [the MDN web docs](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers).

'''
'''--- documentation/docs/30-advanced/50-server-only-modules.md ---
---
title: Server-only modules
---

Like a good friend, SvelteKit keeps your secrets. When writing your backend and frontend in the same repository, it can be easy to accidentally import sensitive data into your front-end code (environment variables containing API keys, for example). SvelteKit provides a way to prevent this entirely: server-only modules.

## Private environment variables

The [`$env/static/private`]($env-static-private) and [`$env/dynamic/private`]($env-dynamic-private) modules can only be imported into modules that only run on the server, such as [`hooks.server.js`](hooks#Server-hooks) or [`+page.server.js`](routing#page-page.server.js).

## Server-only utilities

The [`$app/server`]($app-server) module, which contains a `read` function for reading assets from the filesystem, can likewise only be imported by code that runs on the server.

## Your modules

You can make your own modules server-only in two ways:

- adding `.server` to the filename, e.g. `secrets.server.js`
- placing them in `$lib/server`, e.g. `$lib/server/secrets.js`

## How it works

Any time you have public-facing code that imports server-only code (whether directly or indirectly)...

```js
// @errors: 7005
/// file: $lib/server/secrets.js
export const atlantisCoordinates = [/* redacted */];
```

```js
// @errors: 2307 7006 7005
/// file: src/routes/utils.js
export { atlantisCoordinates } from '$lib/server/secrets.js';

export const add = (a, b) => a + b;
```

```html
/// file: src/routes/+page.svelte
<script>
	import { add } from './utils.js';
</script>
```

...SvelteKit will error:

```
Cannot import $lib/server/secrets.js into public-facing code:
- src/routes/+page.svelte
	- src/routes/utils.js
		- $lib/server/secrets.js
```

Even though the public-facing code — `src/routes/+page.svelte` — only uses the `add` export and not the secret `atlantisCoordinates` export, the secret code could end up in JavaScript that the browser downloads, and so the import chain is considered unsafe.

This feature also works with dynamic imports, even interpolated ones like ``await import(`./${foo}.js`)``, with one small caveat: during development, if there are two or more dynamic imports between the public-facing code and the server-only module, the illegal import will not be detected the first time the code is loaded.

> [!NOTE] Unit testing frameworks like Vitest do not distinguish between server-only and public-facing code. For this reason, illegal import detection is disabled when running tests, as determined by `process.env.TEST === 'true'`.

## Further reading

- [Tutorial: Environment variables](/tutorial/kit/env-static-private)

'''
'''--- documentation/docs/30-advanced/65-snapshots.md ---
---
title: Snapshots
---

Ephemeral DOM state — like scroll positions on sidebars, the content of `<input>` elements and so on — is discarded when you navigate from one page to another.

For example, if the user fills out a form but navigates away and then back before submitting, or if the user refreshes the page, the values they filled in will be lost. In cases where it's valuable to preserve that input, you can take a _snapshot_ of DOM state, which can then be restored if the user navigates back.

To do this, export a `snapshot` object with `capture` and `restore` methods from a `+page.svelte` or `+layout.svelte`:

```svelte
<!--- file: +page.svelte --->
<script>
	let comment = $state('');

	/** @type {import('./$types').Snapshot<string>} */
	export const snapshot = {
		capture: () => comment,
		restore: (value) => comment = value
	};
</script>

<form method="POST">
	<label for="comment">Comment</label>
	<textarea id="comment" bind:value={comment} />
	<button>Post comment</button>
</form>
```

When you navigate away from this page, the `capture` function is called immediately before the page updates, and the returned value is associated with the current entry in the browser's history stack. If you navigate back, the `restore` function is called with the stored value as soon as the page is updated.

The data must be serializable as JSON so that it can be persisted to `sessionStorage`. This allows the state to be restored when the page is reloaded, or when the user navigates back from a different site.

> [!NOTE] Avoid returning very large objects from `capture` — once captured, objects will be retained in memory for the duration of the session, and in extreme cases may be too large to persist to `sessionStorage`.

'''
'''--- documentation/docs/30-advanced/67-shallow-routing.md ---
---
title: Shallow routing
---

As you navigate around a SvelteKit app, you create _history entries_. Clicking the back and forward buttons traverses through this list of entries, re-running any `load` functions and replacing page components as necessary.

Sometimes, it's useful to create history entries _without_ navigating. For example, you might want to show a modal dialog that the user can dismiss by navigating back. This is particularly valuable on mobile devices, where swipe gestures are often more natural than interacting directly with the UI. In these cases, a modal that is _not_ associated with a history entry can be a source of frustration, as a user may swipe backwards in an attempt to dismiss it and find themselves on the wrong page.

SvelteKit makes this possible with the [`pushState`]($app-navigation#pushState) and [`replaceState`]($app-navigation#replaceState) functions, which allow you to associate state with a history entry without navigating. For example, to implement a history-driven modal:

```svelte
<!--- file: +page.svelte --->
<script>
	import { pushState } from '$app/navigation';
	import { page } from '$app/stores';
	import Modal from './Modal.svelte';

	function showModal() {
		pushState('', {
			showModal: true
		});
	}
</script>

{#if $page.state.showModal}
	<Modal close={() => history.back()} />
{/if}
```

The modal can be dismissed by navigating back (unsetting `$page.state.showModal`) or by interacting with it in a way that causes the `close` callback to run, which will navigate back programmatically.

## API

The first argument to `pushState` is the URL, relative to the current URL. To stay on the current URL, use `''`.

The second argument is the new page state, which can be accessed via the [page store]($app-stores#page) as `$page.state`. You can make page state type-safe by declaring an [`App.PageState`](types#PageState) interface (usually in `src/app.d.ts`).

To set page state without creating a new history entry, use `replaceState` instead of `pushState`.

## Loading data for a route

When shallow routing, you may want to render another `+page.svelte` inside the current page. For example, clicking on a photo thumbnail could pop up the detail view without navigating to the photo page.

For this to work, you need to load the data that the `+page.svelte` expects. A convenient way to do this is to use [`preloadData`]($app-navigation#preloadData) inside the `click` handler of an `<a>` element. If the element (or a parent) uses [`data-sveltekit-preload-data`](link-options#data-sveltekit-preload-data), the data will have already been requested, and `preloadData` will reuse that request.

```svelte
<!--- file: src/routes/photos/+page.svelte --->
<script>
	import { preloadData, pushState, goto } from '$app/navigation';
	import { page } from '$app/stores';
	import Modal from './Modal.svelte';
	import PhotoPage from './[id]/+page.svelte';

	let { data } = $props();
</script>

{#each data.thumbnails as thumbnail}
	<a
		href="/photos/{thumbnail.id}"
		onclick={async (e) => {
			if (innerWidth < 640        // bail if the screen is too small
				|| e.shiftKey             // or the link is opened in a new window
				|| e.metaKey || e.ctrlKey // or a new tab (mac: metaKey, win/linux: ctrlKey)
				// should also consider clicking with a mouse scroll wheel
			) return;

			// prevent navigation
			e.preventDefault();

			const { href } = e.currentTarget;

			// run `load` functions (or rather, get the result of the `load` functions
			// that are already running because of `data-sveltekit-preload-data`)
			const result = await preloadData(href);

			if (result.type === 'loaded' && result.status === 200) {
				pushState(href, { selected: result.data });
			} else {
				// something bad happened! try navigating
				goto(href);
			}
		}}
	>
		<img alt={thumbnail.alt} src={thumbnail.src} />
	</a>
{/each}

{#if $page.state.selected}
	<Modal onclose={() => history.back()}>
		<!-- pass page data to the +page.svelte component,
		     just like SvelteKit would on navigation -->
		<PhotoPage data={$page.state.selected} />
	</Modal>
{/if}
```

## Caveats

During server-side rendering, `$page.state` is always an empty object. The same is true for the first page the user lands on — if the user reloads the page (or returns from another document), state will _not_ be applied until they navigate.

Shallow routing is a feature that requires JavaScript to work. Be mindful when using it and try to think of sensible fallback behavior in case JavaScript isn't available.

'''
'''--- documentation/docs/30-advanced/70-packaging.md ---
---
title: Packaging
---

You can use SvelteKit to build apps as well as component libraries, using the `@sveltejs/package` package (`npx sv create` has an option to set this up for you).

When you're creating an app, the contents of `src/routes` is the public-facing stuff; [`src/lib`]($lib) contains your app's internal library.

A component library has the exact same structure as a SvelteKit app, except that `src/lib` is the public-facing bit, and your root `package.json` is used to publish the package. `src/routes` might be a documentation or demo site that accompanies the library, or it might just be a sandbox you use during development.

Running the `svelte-package` command from `@sveltejs/package` will take the contents of `src/lib` and generate a `dist` directory (which can be [configured](#Options)) containing the following:

- All the files in `src/lib`. Svelte components will be preprocessed, TypeScript files will be transpiled to JavaScript.
- Type definitions (`d.ts` files) which are generated for Svelte, JavaScript and TypeScript files. You need to install `typescript >= 4.0.0` for this. Type definitions are placed next to their implementation, hand-written `d.ts` files are copied over as is. You can [disable generation](#Options), but we strongly recommend against it — people using your library might use TypeScript, for which they require these type definition files.

> [!NOTE] `@sveltejs/package` version 1 generated a `package.json`. This is no longer the case and it will now use the `package.json` from your project and validate that it is correct instead. If you're still on version 1, see [this PR](https://github.com/sveltejs/kit/pull/8922) for migration instructions.

## Anatomy of a package.json

Since you're now building a library for public use, the contents of your `package.json` will become more important. Through it, you configure the entry points of your package, which files are published to npm, and which dependencies your library has. Let's go through the most important fields one by one.

### name

This is the name of your package. It will be available for others to install using that name, and visible on `https://npmjs.com/package/<name>`.

```json
{
	"name": "your-library"
}
```

Read more about it [here](https://docs.npmjs.com/cli/v9/configuring-npm/package-json#name).

### license

Every package should have a license field so people know how they are allowed to use it. A very popular license which is also very permissive in terms of distribution and reuse without warranty is `MIT`.

```json
{
	"license": "MIT"
}
```

Read more about it [here](https://docs.npmjs.com/cli/v9/configuring-npm/package-json#license). Note that you should also include a `LICENSE` file in your package.

### files

This tells npm which files it will pack up and upload to npm. It should contain your output folder (`dist` by default). Your `package.json` and `README` and `LICENSE` will always be included, so you don't need to specify them.

```json
{
	"files": ["dist"]
}
```

To exclude unnecessary files (such as unit tests, or modules that are only imported from `src/routes` etc) you can add them to an `.npmignore` file. This will result in smaller packages that are faster to install.

Read more about it [here](https://docs.npmjs.com/cli/v9/configuring-npm/package-json#files).

### exports

The `"exports"` field contains the package's entry points. If you set up a new library project through `npx sv create`, it's set to a single export, the package root:

```json
{
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"svelte": "./dist/index.js"
		}
	}
}
```

This tells bundlers and tooling that your package only has one entry point, the root, and everything should be imported through that, like this:

```js
// @errors: 2307
import { Something } from 'your-library';
```

The `types` and `svelte` keys are [export conditions](https://nodejs.org/api/packages.html#conditional-exports). They tell tooling what file to import when they look up the `your-library` import:

- TypeScript sees the `types` condition and looks up the type definition file. If you don't publish type definitions, omit this condition.
- Svelte-aware tooling sees the `svelte` condition and knows this is a Svelte component library. If you publish a library that does not export any Svelte components and that could also work in non-Svelte projects (for example a Svelte store library), you can replace this condition with `default`.

> [!NOTE] Previous versions of `@sveltejs/package` also added a `package.json` export. This is no longer part of the template because all tooling can now deal with a `package.json` not being explicitly exported.

You can adjust `exports` to your liking and provide more entry points. For example, if instead of a `src/lib/index.js` file that re-exported components you wanted to expose a `src/lib/Foo.svelte` component directly, you could create the following export map...

```json
{
	"exports": {
		"./Foo.svelte": {
			"types": "./dist/Foo.svelte.d.ts",
			"svelte": "./dist/Foo.svelte"
		}
	}
}
```

...and a consumer of your library could import the component like so:

```js
// @filename: ambient.d.ts
declare module 'your-library/Foo.svelte';

// @filename: index.js
// ---cut---
import Foo from 'your-library/Foo.svelte';
```

> [!NOTE] Beware that doing this will need additional care if you provide type definitions. Read more about the caveat [here](#TypeScript)

In general, each key of the exports map is the path the user will have to use to import something from your package, and the value is the path to the file that will be imported or a map of export conditions which in turn contains these file paths.

Read more about `exports` [here](https://nodejs.org/docs/latest-v18.x/api/packages.html#package-entry-points).

### svelte

This is a legacy field that enabled tooling to recognise Svelte component libraries. It's no longer necessary when using the `svelte` [export condition](#Anatomy-of-a-package.json-exports), but for backwards compatibility with outdated tooling that doesn't yet know about export conditions it's good to keep it around. It should point towards your root entry point.

```json
{
	"svelte": "./dist/index.js"
}
```

### sideEffects

The `sideEffects` field in `package.json` is used by bundlers to determine if a module may contain code that has side effects. A module is considered to have side effects if it makes changes that are observable from other scripts outside the module when it's imported. For example, side effects include modifying global variables or the prototype of built-in JavaScript objects. Because a side effect could potentially affect the behavior of other parts of the application, these files/modules will be included in the final bundle regardless of whether their exports are used in the application. It is a best practice to avoid side effects in your code.

Setting the `sideEffects` field in `package.json` can help the bundler to be more aggressive in eliminating unused exports from the final bundle, a process known as tree-shaking. This results in smaller and more efficient bundles. Different bundlers handle `sideEffects` in various manners. While not necessary for Vite, we recommend that libraries state that all CSS files have side effects so that your library will be [compatible with webpack](https://webpack.js.org/guides/tree-shaking/#mark-the-file-as-side-effect-free). This is the configuration that comes with newly created projects:

```json
/// file: package.json
{
	"sideEffects": ["**/*.css"]
}
```

> If the scripts in your library have side effects, ensure that you update the `sideEffects` field. All scripts are marked as side effect free by default in newly created projects. If a file with side effects is incorrectly marked as having no side effects, it can result in broken functionality.

If your package has files with side effects, you can specify them in an array:

```json
/// file: package.json
{
    "sideEffects": [
    	"**/*.css",
    	"./dist/sideEffectfulFile.js"
    ]
}
```

This will treat only the specified files as having side effects.

## TypeScript

You should ship type definitions for your library even if you don't use TypeScript yourself so that people who do get proper intellisense when using your library. `@sveltejs/package` makes the process of generating types mostly opaque to you. By default, when packaging your library, type definitions are auto-generated for JavaScript, TypeScript and Svelte files. All you need to ensure is that the `types` condition in the [exports](#Anatomy-of-a-package.json-exports) map points to the correct files. When initialising a library project through `npx sv create`, this is automatically setup for the root export.

If you have something else than a root export however — for example providing a `your-library/foo` import — you need to take additional care for providing type definitions. Unfortunately, TypeScript by default will _not_ resolve the `types` condition for an export like `{ "./foo": { "types": "./dist/foo.d.ts", ... }}`. Instead, it will search for a `foo.d.ts` relative to the root of your library (i.e. `your-library/foo.d.ts` instead of `your-library/dist/foo.d.ts`). To fix this, you have two options:

The first option is to require people using your library to set the `moduleResolution` option in their `tsconfig.json` (or `jsconfig.json`) to `bundler` (available since TypeScript 5, the best and recommended option in the future), `node16` or `nodenext`. This opts TypeScript into actually looking at the exports map and resolving the types correctly.

The second option is to (ab)use the `typesVersions` feature from TypeScript to wire up the types. This is a field inside `package.json` TypeScript uses to check for different type definitions depending on the TypeScript version, and also contains a path mapping feature for that. We leverage that path mapping feature to get what we want. For the mentioned `foo` export above, the corresponding `typesVersions` looks like this:

```json
{
	"exports": {
		"./foo": {
			"types": "./dist/foo.d.ts",
			"svelte": "./dist/foo.js"
		}
	},
	"typesVersions": {
		">4.0": {
			"foo": ["./dist/foo.d.ts"]
		}
	}
}
```

`>4.0` tells TypeScript to check the inner map if the used TypeScript version is greater than 4 (which should in practice always be true). The inner map tells TypeScript that the typings for `your-library/foo` are found within `./dist/foo.d.ts`, which essentially replicates the `exports` condition. You also have `*` as a wildcard at your disposal to make many type definitions at once available without repeating yourself. Note that if you opt into `typesVersions` you have to declare all type imports through it, including the root import (which is defined as `"index.d.ts": [..]`).

You can read more about that feature [here](https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html#version-selection-with-typesversions).

## Best practices

You should avoid using SvelteKit-specific modules like `$app/environment` in your packages unless you intend for them to only be consumable by other SvelteKit projects. E.g. rather than using `import { browser } from '$app/environment'` you could use `import { BROWSER } from 'esm-env'` ([see esm-env docs](https://github.com/benmccann/esm-env)). You may also wish to pass in things like the current URL or a navigation action as a prop rather than relying directly on `$app/stores`, `$app/navigation`, etc. Writing your app in this more generic fashion will also make it easier to setup tools for testing, UI demos and so on.

Ensure that you add [aliases](configuration#alias) via `svelte.config.js` (not `vite.config.js` or `tsconfig.json`), so that they are processed by `svelte-package`.

You should think carefully about whether or not the changes you make to your package are a bug fix, a new feature, or a breaking change, and update the package version accordingly. Note that if you remove any paths from `exports` or any `export` conditions inside them from your existing library, that should be regarded as a breaking change.

```json
{
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
// changing `svelte` to `default` is a breaking change:
---			"svelte": "./dist/index.js"---
+++			"default": "./dist/index.js"+++
		},
// removing this is a breaking change:
---		"./foo": {
			"types": "./dist/foo.d.ts",
			"svelte": "./dist/foo.js",
			"default": "./dist/foo.js"
		},---
// adding this is ok:
+++		"./bar": {
			"types": "./dist/bar.d.ts",
			"svelte": "./dist/bar.js",
			"default": "./dist/bar.js"
		}+++
	}
}
```

## Options

`svelte-package` accepts the following options:

- `-w`/`--watch` — watch files in `src/lib` for changes and rebuild the package
- `-i`/`--input` — the input directory which contains all the files of the package. Defaults to `src/lib`
- `-o`/`--output` — the output directory where the processed files are written to. Your `package.json`'s `exports` should point to files inside there, and the `files` array should include that folder. Defaults to `dist`
- `-t`/`--types` — whether or not to create type definitions (`d.ts` files). We strongly recommend doing this as it fosters ecosystem library quality. Defaults to `true`
- `--tsconfig` - the path to a tsconfig or jsconfig. When not provided, searches for the next upper tsconfig/jsconfig in the workspace path.

## Publishing

To publish the generated package:

```sh
npm publish
```

## Caveats

All relative file imports need to be fully specified, adhering to Node's ESM algorithm. This means that for a file like `src/lib/something/index.js`, you must include the filename with the extension:

```js
// @errors: 2307
import { something } from './something+++/index.js+++';
```

If you are using TypeScript, you need to import `.ts` files the same way, but using a `.js` file ending, _not_ a `.ts` file ending. (This is a TypeScript design decision outside our control.) Setting `"moduleResolution": "NodeNext"` in your `tsconfig.json` or `jsconfig.json` will help you with this.

All files except Svelte files (preprocessed) and TypeScript files (transpiled to JavaScript) are copied across as-is.

'''
'''--- documentation/docs/30-advanced/index.md ---
---
title: Advanced
---

'''
'''--- documentation/docs/40-best-practices/03-auth.md ---
---
title: Auth
---

Auth refers to authentication and authorization, which are common needs when building a web application. Authentication means verifying that the user is who they say they are based on their provided credentials. Authorization means determining which actions they are allowed to take.

## Sessions vs tokens

After the user has provided their credentials such as a username and password, we want to allow them to use the application without needing to provide their credentials again for future requests. Users are commonly authenticated on subsequent requests with either a session identifier or signed token such as a JSON Web Token (JWT).

Session IDs are most commonly stored in a database. They can be immediately revoked, but require a database query to be made on each request.

In contrast, JWT generally are not checked against a datastore, which means they cannot be immediately revoked. The advantage of this method is improved latency and reduced load on your datastore.

## Integration points

Auth [cookies](@sveltejs-kit#Cookies) can be checked inside [server hooks](hooks#Server-hooks). If a user is found matching the provided credentials, the user information can be stored in [`locals`](hooks#Server-hooks-handle).

## Guides

[Lucia](https://lucia-next.pages.dev/) is a reference for session-based web app auth. It contains example code snippets and projects for implementing session-based auth within SvelteKit and other JS projects. You can add code which follows the Lucia guide to your project with `npx sv create` when creating a new project or `npx sv add lucia` for an existing project.

An auth system is tightly coupled to a web framework because most of the code lies in validating user input, handling errors, and directing users to the appropriate next page. As a result, many of the generic JS auth libraries include one or more web frameworks within them. For this reason, many users will find it preferrable to follow a SvelteKit-specific guide such as the examples found in [Lucia](https://lucia-next.pages.dev/) rather than having multiple web frameworks inside their project.

'''
'''--- documentation/docs/40-best-practices/05-performance.md ---
---
title: Performance
---

Out of the box, SvelteKit does a lot of work to make your applications as performant as possible:

- Code-splitting, so that only the code you need for the current page is loaded
- Asset preloading, so that 'waterfalls' (of files requesting other files) are prevented
- File hashing, so that your assets can be cached forever
- Request coalescing, so that data fetched from separate server `load` functions is grouped into a single HTTP request
- Parallel loading, so that separate universal `load` functions fetch data simultaneously
- Data inlining, so that requests made with `fetch` during server rendering can be replayed in the browser without issuing a new request
- Conservative invalidation, so that `load` functions are only re-run when necessary
- Prerendering (configurable on a per-route basis, if necessary) so that pages without dynamic data can be served instantaneously
- Link preloading, so that data and code requirements for a client-side navigation are eagerly anticipated

Nevertheless, we can't (yet) eliminate all sources of slowness. To eke out maximum performance, you should be mindful of the following tips.

## Diagnosing issues

Google's [PageSpeed Insights](https://pagespeed.web.dev/) and (for more advanced analysis) [WebPageTest](https://www.webpagetest.org/) are excellent ways to understand the performance characteristics of a site that is already deployed to the internet.

Your browser also includes useful developer tools for analysing your site, whether deployed or running locally:

* Chrome - [Lighthouse](https://developer.chrome.com/docs/lighthouse/overview#devtools), [Network](https://developer.chrome.com/docs/devtools/network), and [Performance](https://developer.chrome.com/docs/devtools/performance) devtools
* Edge - [Lighthouse](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/lighthouse/lighthouse-tool), [Network](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/network/), and [Performance](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/evaluate-performance/) devtools
* Firefox - [Network](https://firefox-source-docs.mozilla.org/devtools-user/network_monitor/) and [Performance](https://hacks.mozilla.org/2022/03/performance-tool-in-firefox-devtools-reloaded/) devtools
* Safari - [enhancing the performance of your webpage](https://developer.apple.com/library/archive/documentation/NetworkingInternetWeb/Conceptual/Web_Inspector_Tutorial/EnhancingyourWebpagesPerformance/EnhancingyourWebpagesPerformance.html)

Note that your site running locally in `dev` mode will exhibit different behaviour than your production app, so you should do performance testing in [preview](building-your-app#Preview-your-app) mode after building.

### Instrumenting

If you see in the network tab of your browser that an API call is taking a long time and you'd like to understand why, you may consider instrumenting your backend with a tool like [OpenTelemetry](https://opentelemetry.io/) or [Server-Timing headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing).

## Optimizing assets

### Images

Reducing the size of image files is often one of the most impactful changes you can make to a site's performance. Svelte provides the `@sveltejs/enhanced-img` package, detailed on the [images](images) page, for making this easier. Additionally, Lighthouse is useful for identifying the worst offenders.

### Videos

Video files can be very large, so extra care should be taken to ensure that they're optimized:

- Compress videos with tools such as [Handbrake](https://handbrake.fr/). Consider converting the videos to web-friendly formats such as `.webm` or `.mp4`.
- You can [lazy-load videos](https://web.dev/articles/lazy-loading-video) located below the fold with `preload="none"` (though note that this will slow down playback when the user _does_ initiate it).
- Strip the audio track out of muted videos using a tool like [FFmpeg](https://ffmpeg.org/).

### Fonts

SvelteKit automatically preloads critical `.js` and `.css` files when the user visits a page, but it does _not_ preload fonts by default, since this may cause unnecessary files (such as font weights that are referenced by your CSS but not actually used on the current page) to be downloaded. Having said that, preloading fonts correctly can make a big difference to how fast your site feels. In your [`handle`](hooks#Server-hooks-handle) hook, you can call `resolve` with a `preload` filter that includes your fonts.

You can reduce the size of font files by [subsetting](https://web.dev/learn/performance/optimize-web-fonts#subset_your_web_fonts) your fonts.

## Reducing code size

### Svelte version

We recommend running the latest version of Svelte. Svelte 5 is smaller and faster than Svelte 4, which is smaller and faster than Svelte 3.

### Packages

[`rollup-plugin-visualizer`](https://www.npmjs.com/package/rollup-plugin-visualizer) can be helpful for identifying which packages are contributing the most to the size of your site. You may also find opportunities to remove code by manually inspecting the build output (use `build: { minify: false }` in your [Vite config](https://vitejs.dev/config/build-options.html#build-minify) to make the output readable, but remember to undo that before deploying your app), or via the network tab of your browser's devtools.

### External scripts

Try to minimize the number of third-party scripts running in the browser. For example, instead of using JavaScript-based analytics consider using server-side implementations, such as those offered by many platforms with SvelteKit adapters including [Cloudflare](https://www.cloudflare.com/web-analytics/), [Netlify](https://docs.netlify.com/monitor-sites/site-analytics/), and [Vercel](https://vercel.com/docs/analytics).

To run third party scripts in a web worker (which avoids blocking the main thread), use [Partytown's SvelteKit integration](https://partytown.builder.io/sveltekit).

### Selective loading

Code imported with static `import` declarations will be automatically bundled with the rest of your page. If there is a piece of code you need only when some condition is met, use the dynamic `import(...)` form to selectively lazy-load the component.

## Navigation

### Preloading

You can speed up client-side navigations by eagerly preloading the necessary code and data, using [link options](link-options). This is configured by default on the `<body>` element when you create a new SvelteKit app.

### Non-essential data

For slow-loading data that isn't needed immediately, the object returned from your `load` function can contain promises rather than the data itself. For server `load` functions, this will cause the data to [stream](load#Streaming-with-promises) in after the navigation (or initial page load).

### Preventing waterfalls

One of the biggest performance killers is what is referred to as a _waterfall_, which is a series of requests that is made sequentially. This can happen on the server or in the browser.

- Asset waterfalls can occur in the browser when your HTML requests JS which requests CSS which requests a background image and web font. SvelteKit will largely solve this class of problems for you by adding [`modulepreload`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/modulepreload) tags or headers, but you should view [the network tab in your devtools](#Diagnosing-issues) to check whether additional resources need to be preloaded. Pay special attention to this if you use web [fonts](#Optimizing-assets-Fonts) since they need to be handled manually.
- If a universal `load` function makes an API call to fetch the current user, then uses the details from that response to fetch a list of saved items, and then uses _that_ response to fetch the details for each item, the browser will end up making multiple sequential requests. This is deadly for performance, especially for users that are physically located far from your backend. Avoid this issue by using [server `load` functions](load#Universal-vs-server) where possible.
- Server `load` functions are also not immune to waterfalls (though they are much less costly since they rarely involve roundtrips with high latency). For example if you query a database to get the current user and then use that data to make a second query for a list of saved items, it will typically be more performant to issue a single query with a database join.

## Hosting

Your frontend should be located in the same data center as your backend to minimize latency. For sites with no central backend, many SvelteKit adapters support deploying to the _edge_, which means handling each user's requests from a nearby server. This can reduce load times significantly. Some adapters even support [configuring deployment on a per-route basis](page-options#config). You should also consider serving images from a CDN (which are typically edge networks) — the hosts for many SvelteKit adapters will do this automatically.

Ensure your host uses HTTP/2 or newer. Vite's code splitting creates numerous small files for improved cacheability, which results in excellent performance, but this does assume that your files can be loaded in parallel with HTTP/2.

## Further reading

For the most part, building a performant SvelteKit app is the same as building any performant web app. You should be able to apply information from general performance resources such as [Core Web Vitals](https://web.dev/explore/learn-core-web-vitals) to any web experience you build.

'''
'''--- documentation/docs/40-best-practices/07-images.md ---
---
title: Images
---

Images can have a big impact on your app's performance. For best results, you should optimize them by doing the following:

- generate optimal formats like `.avif` and `.webp`
- create different sizes for different screens
- ensure that assets can be cached effectively

Doing this manually is tedious. There are a variety of techniques you can use, depending on your needs and preferences.

## Vite's built-in handling

[Vite will automatically process imported assets](https://vitejs.dev/guide/assets.html) for improved performance. This includes assets referenced via the CSS `url()` function. Hashes will be added to the filenames so that they can be cached, and assets smaller than `assetsInlineLimit` will be inlined. Vite's asset handling is most often used for images, but is also useful for video, audio, etc.

```svelte
<script>
	import logo from '$lib/assets/logo.png';
</script>

<img alt="The project logo" src={logo} />
```

## @sveltejs/enhanced-img

`@sveltejs/enhanced-img` is a plugin offered on top of Vite's built-in asset handling. It provides plug and play image processing that serves smaller file formats like `avif` or `webp`, automatically sets the intrinsic `width` and `height` of the image to avoid layout shift, creates images of multiple sizes for various devices, and strips EXIF data for privacy. It will work in any Vite-based project including, but not limited to, SvelteKit projects.

> [!NOTE] As a build plugin, `@sveltejs/enhanced-img` can only optimize files located on your machine during the build process. If you have an image located elsewhere (such as a path served from your database, CMS, or backend), please read about [loading images dynamically from a CDN](#Loading-images-dynamically-from-a-CDN).
>
> **WARNING**: The `@sveltejs/enhanced-img` package is experimental. It uses pre-1.0 versioning and may introduce breaking changes with every minor version release.

### Setup

Install:

```bash
npm install --save-dev @sveltejs/enhanced-img
```

Adjust `vite.config.js`:

```js
import { sveltekit } from '@sveltejs/kit/vite';
+++import { enhancedImages } from '@sveltejs/enhanced-img';+++
import { defineConfig } from 'vite';

export default defineConfig({
	plugins: [
		+++enhancedImages(),+++
		sveltekit()
	]
});
```

Building will take longer on the first build due to the computational expense of transforming images. However, the build output will be cached in `./node_modules/.cache/imagetools` so that subsequent builds will be fast.

### Basic usage

Use in your `.svelte` components by using `<enhanced:img>` rather than `<img>` and referencing the image file with a [Vite asset import](https://vitejs.dev/guide/assets.html#static-asset-handling) path:

```svelte
<enhanced:img src="./path/to/your/image.jpg" alt="An alt text" />
```

At build time, your `<enhanced:img>` tag will be replaced with an `<img>` wrapped by a `<picture>` providing multiple image types and sizes. It's only possible to downscale images without losing quality, which means that you should provide the highest resolution image that you need — smaller versions will be generated for the various device types that may request an image.

You should provide your image at 2x resolution for HiDPI displays (a.k.a. retina displays). `<enhanced:img>` will automatically take care of serving smaller versions to smaller devices.

If you wish to add styles to your `<enhanced:img>`, you should add a `class` and target that.

### Dynamically choosing an image

You can also manually import an image asset and pass it to an `<enhanced:img>`. This is useful when you have a collection of static images and would like to dynamically choose one or [iterate over them](https://github.com/sveltejs/kit/blob/0ab1733e394b6310895a1d3bf0f126ce34531170/sites/kit.svelte.dev/src/routes/home/Showcase.svelte). In this case you will need to update both the `import` statement and `<img>` element as shown below to indicate you'd like process them.

```svelte
<script>
	import MyImage from './path/to/your/image.jpg?enhanced';
</script>

<enhanced:img src={MyImage} alt="some alt text" />
```

You can also use [Vite's `import.meta.glob`](https://vitejs.dev/guide/features.html#glob-import). Note that you will have to specify `enhanced` via a [custom query](https://vitejs.dev/guide/features.html#custom-queries):

```svelte
<script>
	const imageModules = import.meta.glob(
		'/path/to/assets/*.{avif,gif,heif,jpeg,jpg,png,tiff,webp,svg}',
		{
			eager: true,
			query: {
				enhanced: true
			}
		}
	)
</script>

{#each Object.entries(imageModules) as [_path, module]}
	<enhanced:img src={module.default} alt="some alt text" />
{/each}
```

### Intrinsic Dimensions

`width` and `height` are optional as they can be inferred from the source image and will be automatically added when the `<enhanced:img>` tag is preprocessed. With these attributes, the browser can reserve the correct amount of space, preventing [layout shift](https://web.dev/articles/cls). If you'd like to use a different `width` and `height` you can style the image with CSS. Because the preprocessor adds a `width` and `height` for you, if you'd like one of the dimensions to be automatically calculated then you will need to specify that:

```svelte
<style>
	.hero-image img {
		width: var(--size);
		height: auto;
	}
</style>
```

### `srcset` and `sizes`

If you have a large image, such as a hero image taking the width of the design, you should specify `sizes` so that smaller versions are requested on smaller devices. E.g. if you have a 1280px image you may want to specify something like:

```svelte
<enhanced:img src="./image.png" sizes="min(1280px, 100vw)"/>
```

If `sizes` is specified, `<enhanced:img>` will generate small images for smaller devices and populate the `srcset` attribute.

The smallest picture generated automatically will have a width of 540px. If you'd like smaller images or would otherwise like to specify custom widths, you can do that with the `w` query parameter:
```svelte
<enhanced:img
  src="./image.png?w=1280;640;400"
  sizes="(min-width:1920px) 1280px, (min-width:1080px) 640px, (min-width:768px) 400px"
/>
```

If `sizes` is not provided, then a HiDPI/Retina image and a standard resolution image will be generated. The image you provide should be 2x the resolution you wish to display so that the browser can display that image on devices with a high [device pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio).

### Per-image transforms

By default, enhanced images will be transformed to more efficient formats. However, you may wish to apply other transforms such as a blur, quality, flatten, or rotate operation. You can run per-image transforms by appending a query string:

```svelte
<enhanced:img src="./path/to/your/image.jpg?blur=15" alt="An alt text" />
```

[See the imagetools repo for the full list of directives](https://github.com/JonasKruckenberg/imagetools/blob/main/docs/directives.md).

## Loading images dynamically from a CDN

In some cases, the images may not be accessible at build time — e.g. they may live inside a content management system or elsewhere.

Using a content delivery network (CDN) can allow you to optimize these images dynamically, and provides more flexibility with regards to sizes, but it may involve some setup overhead and usage costs. Depending on caching strategy, the browser may not be able to use a cached copy of the asset until a [304 response](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304) is received from the CDN. Building HTML to target CDNs allows using an `<img>` tag since the CDN can serve the appropriate format based on the `User-Agent` header, whereas build-time optimizations must produce `<picture>` tags with multiple sources. Finally, some CDNs may generate images lazily, which could have a negative performance impact for sites with low traffic and frequently changing images.

CDNs can generally be used without any need for a library. However, there are a number of libraries with Svelte support that make it easier. [`@unpic/svelte`](https://unpic.pics/img/svelte/) is a CDN-agnostic library with support for a large number of providers. You may also find that specific CDNs like [Cloudinary](https://svelte.cloudinary.dev/) have Svelte support. Finally, some content management systems (CMS) which support Svelte (such as [Contentful](https://www.contentful.com/sveltekit-starter-guide/), [Storyblok](https://github.com/storyblok/storyblok-svelte), and [Contentstack](https://www.contentstack.com/docs/developers/sample-apps/build-a-starter-website-with-sveltekit-and-contentstack)) have built-in support for image handling.

## Best practices

- For each image type, use the appropriate solution from those discussed above. You can mix and match all three solutions in one project. For example, you may use Vite's built-in handling to provide images for `<meta>` tags, display images on your homepage with `@sveltejs/enhanced-img`, and display user-submitted content with a dynamic approach.
- Consider serving all images via CDN regardless of the image optimization types you use. CDNs reduce latency by distributing copies of static assets globally.
- Your original images should have a good quality/resolution and should have 2x the width it will be displayed at to serve HiDPI devices. Image processing can size images down to save bandwidth when serving smaller screens, but it would be a waste of bandwidth to invent pixels to size images up.
- For images which are much larger than the width of a mobile device (roughly 400px), such as a hero image taking the width of the page design, specify `sizes` so that smaller images can be served on smaller devices.
- For important images, such as the [largest contentful paint (LCP)](https://web.dev/articles/lcp) image, set `fetchpriority="high" loading="eager"` to prioritize loading as early as possible.
- Give the image a container or styling so that it is constrained and does not jump around while the page is loading affecting your [cumulative layout shift (CLS)](https://web.dev/articles/cls). `width` and `height` help the browser to reserve space while the image is still loading, so `@sveltejs/enhanced-img` will add a `width` and `height` for you.
- Always provide a good `alt` text. The Svelte compiler will warn you if you don't do this.
- Do not use `em` or `rem` in `sizes` and change the default size of these measures. When used in `sizes` or `@media` queries, `em` and `rem` are both defined to mean the user's default `font-size`. For a `sizes` declaration like `sizes="(min-width: 768px) min(100vw, 108rem), 64rem"`, the actual `em` or `rem` that controls how the image is laid out on the page can be different if changed by CSS. For example, do not do something like `html { font-size: 62.5%; }` as the slot reserved by the browser preloader will now end up being larger than the actual slot of the CSS object model once it has been created.

'''
'''--- documentation/docs/40-best-practices/10-accessibility.md ---
---
title: Accessibility
---

SvelteKit strives to provide an accessible platform for your app by default. Svelte's [compile-time accessibility checks](../svelte/compiler-warnings) will also apply to any SvelteKit application you build.

Here's how SvelteKit's built-in accessibility features work and what you need to do to help these features to work as well as possible. Keep in mind that while SvelteKit provides an accessible foundation, you are still responsible for making sure your application code is accessible. If you're new to accessibility, see the ["further reading"](accessibility#Further-reading) section of this guide for additional resources.

We recognize that accessibility can be hard to get right. If you want to suggest improvements to how SvelteKit handles accessibility, please [open a GitHub issue](https://github.com/sveltejs/kit/issues).

## Route announcements

In traditional server-rendered applications, every navigation (e.g. clicking on an `<a>` tag) triggers a full page reload. When this happens, screen readers and other assistive technology will read out the new page's title so that users understand that the page has changed.

Since navigation between pages in SvelteKit happens without reloading the page (known as [client-side routing](glossary#Routing)), SvelteKit injects a [live region](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions) onto the page that will read out the new page name after each navigation. This determines the page name to announce by inspecting the `<title>` element.

Because of this behavior, every page in your app should have a unique, descriptive title. In SvelteKit, you can do this by placing a `<svelte:head>` element on each page:

```svelte
<!--- file: src/routes/+page.svelte --->
<svelte:head>
	<title>Todo List</title>
</svelte:head>
```

This will allow screen readers and other assistive technology to identify the new page after a navigation occurs. Providing a descriptive title is also important for [SEO](seo#Manual-setup-title-and-meta).

## Focus management

In traditional server-rendered applications, every navigation will reset focus to the top of the page. This ensures that people browsing the web with a keyboard or screen reader will start interacting with the page from the beginning.

To simulate this behavior during client-side routing, SvelteKit focuses the `<body>` element after each navigation and [enhanced form submission](form-actions#Progressive-enhancement). There is one exception - if an element with the [`autofocus`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus) attribute is present, SvelteKit will focus that element instead. Make sure to [consider the implications for assistive technology](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus#accessibility_considerations) when using that attribute.

If you want to customize SvelteKit's focus management, you can use the `afterNavigate` hook:

```js
/// <reference types="@sveltejs/kit" />
// ---cut---
import { afterNavigate } from '$app/navigation';

afterNavigate(() => {
	/** @type {HTMLElement | null} */
	const to_focus = document.querySelector('.focus-me');
	to_focus?.focus();
});
```

You can also programmatically navigate to a different page using the [`goto`]($app-navigation#goto) function. By default, this will have the same client-side routing behavior as clicking on a link. However, `goto` also accepts a `keepFocus` option that will preserve the currently-focused element instead of resetting focus. If you enable this option, make sure the currently-focused element still exists on the page after navigation. If the element no longer exists, the user's focus will be lost, making for a confusing experience for assistive technology users.

## The "lang" attribute

By default, SvelteKit's page template sets the default language of the document to English. If your content is not in English, you should update the `<html>` element in `src/app.html` to have the correct [`lang`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang#accessibility) attribute. This will ensure that any assistive technology reading the document uses the correct pronunciation. For example, if your content is in German, you should update `app.html` to the following:

```html
/// file: src/app.html
<html lang="de">
```

If your content is available in multiple languages, you should set the `lang` attribute based on the language of the current page. You can do this with SvelteKit's [handle hook](hooks#Server-hooks-handle):

```html
/// file: src/app.html
<html lang="%lang%">
```

```js
/// file: src/hooks.server.js
/**
 * @param {import('@sveltejs/kit').RequestEvent} event
 */
function get_lang(event) {
	return 'en';
}
// ---cut---
/** @type {import('@sveltejs/kit').Handle} */
export function handle({ event, resolve }) {
	return resolve(event, {
		transformPageChunk: ({ html }) => html.replace('%lang%', get_lang(event))
	});
}
```

## Further reading

For the most part, building an accessible SvelteKit app is the same as building an accessible web app. You should be able to apply information from the following general accessibility resources to any web experience you build:

- [MDN Web Docs: Accessibility](https://developer.mozilla.org/en-US/docs/Learn/Accessibility)
- [The A11y Project](https://www.a11yproject.com/)
- [How to Meet WCAG (Quick Reference)](https://www.w3.org/WAI/WCAG21/quickref/)

'''
'''--- documentation/docs/40-best-practices/20-seo.md ---
---
title: SEO
---

The most important aspect of SEO is to create high-quality content that is widely linked to from around the web. However, there are a few technical considerations for building sites that rank well.

## Out of the box

### SSR

While search engines have got better in recent years at indexing content that was rendered with client-side JavaScript, server-side rendered content is indexed more frequently and reliably. SvelteKit employs SSR by default, and while you can disable it in [`handle`](hooks#Server-hooks-handle), you should leave it on unless you have a good reason not to.

> [!NOTE] SvelteKit's rendering is highly configurable and you can implement [dynamic rendering](https://developers.google.com/search/docs/advanced/javascript/dynamic-rendering) if necessary. It's not generally recommended, since SSR has other benefits beyond SEO.

### Performance

Signals such as [Core Web Vitals](https://web.dev/vitals/#core-web-vitals) impact search engine ranking. Because Svelte and SvelteKit introduce minimal overhead, it's easier to build high performance sites. You can test your site's performance using Google's [PageSpeed Insights](https://pagespeed.web.dev/) or [Lighthouse](https://developers.google.com/web/tools/lighthouse). Read [the performance page](performance) for more details.

### Normalized URLs

SvelteKit redirects pathnames with trailing slashes to ones without (or vice versa depending on your [configuration](page-options#trailingSlash)), as duplicate URLs are bad for SEO.

## Manual setup

### &lt;title&gt; and &lt;meta&gt;

Every page should have well-written and unique `<title>` and `<meta name="description">` elements inside a [`<svelte:head>`](../svelte/svelte-head). Guidance on how to write descriptive titles and descriptions, along with other suggestions on making content understandable by search engines, can be found on Google's [Lighthouse SEO audits](https://web.dev/lighthouse-seo/) documentation.

> [!NOTE] A common pattern is to return SEO-related `data` from page [`load`](load) functions, then use it (as [`$page.data`]($app-stores)) in a `<svelte:head>` in your root [layout](routing#layout).

### Sitemaps

[Sitemaps](https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap) help search engines prioritize pages within your site, particularly when you have a large amount of content. You can create a sitemap dynamically using an endpoint:

```js
/// file: src/routes/sitemap.xml/+server.js
export async function GET() {
	return new Response(
		`
		<?xml version="1.0" encoding="UTF-8" ?>
		<urlset
			xmlns="https://www.sitemaps.org/schemas/sitemap/0.9"
			xmlns:xhtml="https://www.w3.org/1999/xhtml"
			xmlns:mobile="https://www.google.com/schemas/sitemap-mobile/1.0"
			xmlns:news="https://www.google.com/schemas/sitemap-news/0.9"
			xmlns:image="https://www.google.com/schemas/sitemap-image/1.1"
			xmlns:video="https://www.google.com/schemas/sitemap-video/1.1"
		>
			<!-- <url> elements go here -->
		</urlset>`.trim(),
		{
			headers: {
				'Content-Type': 'application/xml'
			}
		}
	);
}
```

### AMP

An unfortunate reality of modern web development is that it is sometimes necessary to create an [Accelerated Mobile Pages (AMP)](https://amp.dev/) version of your site. In SvelteKit this can be done by setting the [`inlineStyleThreshold`](configuration#inlineStyleThreshold) option...

```js
/// file: svelte.config.js
/** @type {import('@sveltejs/kit').Config} */
const config = {
	kit: {
		// since <link rel="stylesheet"> isn't
		// allowed, inline all styles
		inlineStyleThreshold: Infinity
	}
};

export default config;
```

...disabling `csr` in your root `+layout.js`/`+layout.server.js`...

```js
/// file: src/routes/+layout.server.js
export const csr = false;
```

...adding `amp` to your `app.html`

```html
<html amp>
...
```

...and transforming the HTML using `transformPageChunk` along with `transform` imported from `@sveltejs/amp`:

```js
/// file: src/hooks.server.js
import * as amp from '@sveltejs/amp';

/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	let buffer = '';
	return await resolve(event, {
		transformPageChunk: ({ html, done }) => {
			buffer += html;
			if (done) return amp.transform(buffer);
		}
	});
}
```

To prevent shipping any unused CSS as a result of transforming the page to amp, we can use [`dropcss`](https://www.npmjs.com/package/dropcss):

```js
// @filename: ambient.d.ts
declare module 'dropcss';

// @filename: index.js
// ---cut---
/// file: src/hooks.server.js
// @errors: 2307
import * as amp from '@sveltejs/amp';
import dropcss from 'dropcss';

/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	let buffer = '';

	return await resolve(event, {
		transformPageChunk: ({ html, done }) => {
			buffer += html;

			if (done) {
				let css = '';
				const markup = amp
					.transform(buffer)
					.replace('⚡', 'amp') // dropcss can't handle this character
					.replace(/<style amp-custom([^>]*?)>([^]+?)<\/style>/, (match, attributes, contents) => {
						css = contents;
						return `<style amp-custom${attributes}></style>`;
					});

				css = dropcss({ css, html: markup }).css;
				return markup.replace('</style>', `${css}</style>`);
			}
		}
	});
}

```

> [!NOTE] It's a good idea to use the `handle` hook to validate the transformed HTML using `amphtml-validator`, but only if you're prerendering pages since it's very slow.

'''
'''--- documentation/docs/40-best-practices/index.md ---
---
title: Best practices
---

'''
'''--- documentation/docs/60-appendix/10-faq.md ---
---
title: Frequently asked questions
---

## Other resources

Please see [the Svelte FAQ](../svelte/faq) and [`vite-plugin-svelte` FAQ](https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/faq.md) as well for the answers to questions deriving from those libraries.

## What can I make with SvelteKit?

SvelteKit can be used to create most kinds of applications. Out of the box, SvelteKit supports many features including:

- Dynamic page content with [load](load) functions and [API routes](routing#server).
- SEO-friendly dynamic content with [server-side rendering (SSR)](glossary#SSR).
- User-friendly progressively-enhanced interactive pages with SSR and [Form Actions](form-actions).
- Static pages with [prerendering](page-options#prerender).

SvelteKit can also be deployed to a wide spectrum of hosted architectures via [adapters](adapters). In cases where SSR is used (or server-side logic is added without prerendering), those functions will be adapted to the target backend. Some examples include:

- Self-hosted dynamic web applications with a [Node.js backend](adapter-node).
- Serverless web applications with backend loaders and APIs deployed as remote functions. See [zero-config deployments](adapter-auto) for popular deployment options.
- [Static pre-rendered sites](adapter-static) such as a blog or multi-page site hosted on a CDN or static host. Statically-generated sites are shipped without a backend.
- [Single-page Applications (SPAs)](single-page-apps) with client-side routing and rendering for API-driven dynamic content. SPAs are shipped without a backend and are not server-rendered. This option is commonly chosen when bundling SvelteKit with an app written in PHP, .Net, Java, C, Golang, Rust, etc.
- A mix of the above; some routes can be static, and some routes can use backend functions to fetch dynamic information. This can be configured with [page options](page-options) that includes the option to opt out of SSR.

In order to support SSR, a JS backend — such as Node.js or Deno-based server, serverless function, or edge function — is required.

It is also possible to write custom adapters or leverage community adapters to deploy SvelteKit to more platforms such as specialized server environments, browser extensions, or native applications. See [integrations](./integrations) for more examples and integrations.

## How do I include details from package.json in my application?

You cannot directly require JSON files, since SvelteKit expects [`svelte.config.js`](./configuration) to be an ES module. If you'd like to include your application's version number or other information from `package.json` in your application, you can load JSON like so:

```js
/// file: svelte.config.js
// @filename: index.js
/// <reference types="@types/node" />
import { URL } from 'node:url';
// ---cut---
import { readFileSync } from 'node:fs';
import { fileURLToPath } from 'node:url';

const path = fileURLToPath(new URL('package.json', import.meta.url));
const pkg = JSON.parse(readFileSync(path, 'utf8'));
```

## How do I fix the error I'm getting trying to include a package?

Most issues related to including a library are due to incorrect packaging. You can check if a library's packaging is compatible with Node.js by entering it into [the publint website](https://publint.dev/).

Here are a few things to keep in mind when checking if a library is packaged correctly:

- `exports` takes precedence over the other entry point fields such as `main` and `module`. Adding an `exports` field may not be backwards-compatible as it prevents deep imports.
- ESM files should end with `.mjs` unless `"type": "module"` is set in which any case CommonJS files should end with `.cjs`.
- `main` should be defined if `exports` is not. It should be either a CommonJS or ESM file and adhere to the previous bullet. If a `module` field is defined, it should refer to an ESM file.
- Svelte components should be distributed as uncompiled `.svelte` files with any JS in the package written as ESM only. Custom script and style languages, like TypeScript and SCSS, should be preprocessed as vanilla JS and CSS respectively. We recommend using [`svelte-package`](./packaging) for packaging Svelte libraries, which will do this for you.

Libraries work best in the browser with Vite when they distribute an ESM version, especially if they are dependencies of a Svelte component library. You may wish to suggest to library authors that they provide an ESM version. However, CommonJS (CJS) dependencies should work as well since, by default, [`vite-plugin-svelte` will ask Vite to pre-bundle them](https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/faq.md#what-is-going-on-with-vite-and-pre-bundling-dependencies) using `esbuild` to convert them to ESM.

If you are still encountering issues we recommend searching both [the Vite issue tracker](https://github.com/vitejs/vite/issues) and the issue tracker of the library in question. Sometimes issues can be worked around by fiddling with the [`optimizeDeps`](https://vitejs.dev/config/#dep-optimization-options) or [`ssr`](https://vitejs.dev/config/#ssr-options) config values though we recommend this as only a short-term workaround in favor of fixing the library in question.

## How do I use the view transitions API with SvelteKit?

While SvelteKit does not have any specific integration with [view transitions](https://developer.chrome.com/docs/web-platform/view-transitions/), you can call `document.startViewTransition` in [`onNavigate`]($app-navigation#onNavigate) to trigger a view transition on every client-side navigation.

```js
// @errors: 2339 2810
import { onNavigate } from '$app/navigation';

onNavigate((navigation) => {
	if (!document.startViewTransition) return;

	return new Promise((resolve) => {
		document.startViewTransition(async () => {
			resolve();
			await navigation.complete;
		});
	});
});
```

For more, see ["Unlocking view transitions"](/blog/view-transitions) on the Svelte blog.

## How do I use X with SvelteKit?

Make sure you've read the [documentation section on integrations](./integrations). If you're still having trouble, solutions to common issues are listed below.

### How do I setup a database?

Put the code to query your database in a [server route](./routing#server) - don't query the database in .svelte files. You can create a `db.js` or similar that sets up a connection immediately and makes the client accessible throughout the app as a singleton. You can execute any one-time setup code in `hooks.server.js` and import your database helpers into any endpoint that needs them.

### How do I use a client-side only library that depends on `document` or `window`?

If you need access to the `document` or `window` variables or otherwise need code to run only on the client-side you can wrap it in a `browser` check:

```js
/// <reference types="@sveltejs/kit" />
// ---cut---
import { browser } from '$app/environment';

if (browser) {
	// client-only code here
}
```

You can also run code in `onMount` if you'd like to run it after the component has been first rendered to the DOM:

```js
// @filename: ambient.d.ts
// @lib: ES2015
declare module 'some-browser-only-library';

// @filename: index.js
// ---cut---
import { onMount } from 'svelte';

onMount(async () => {
	const { method } = await import('some-browser-only-library');
	method('hello world');
});
```

If the library you'd like to use is side-effect free you can also statically import it and it will be tree-shaken out in the server-side build where `onMount` will be automatically replaced with a no-op:

```js
// @filename: ambient.d.ts
// @lib: ES2015
declare module 'some-browser-only-library';

// @filename: index.js
// ---cut---
import { onMount } from 'svelte';
import { method } from 'some-browser-only-library';

onMount(() => {
	method('hello world');
});
```

Finally, you may also consider using an `{#await}` block:
```svelte
<!--- file: index.svelte --->
<script>
	import { browser } from '$app/environment';

	const ComponentConstructor = browser ?
		import('some-browser-only-library').then((module) => module.Component) :
		new Promise(() => {});
</script>

{#await ComponentConstructor}
	<p>Loading...</p>
{:then component}
	<svelte:component this={component} />
{:catch error}
	<p>Something went wrong: {error.message}</p>
{/await}
```

### How do I use a different backend API server?

You can use [`event.fetch`](./load#Making-fetch-requests) to request data from an external API server, but be aware that you would need to deal with [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS), which will result in complications such as generally requiring requests to be preflighted resulting in higher latency. Requests to a separate subdomain may also increase latency due to an additional DNS lookup, TLS setup, etc. If you wish to use this method, you may find [`handleFetch`](./hooks#Server-hooks-handleFetch) helpful.

Another approach is to set up a proxy to bypass CORS headaches. In production, you would rewrite a path like `/api` to the API server; for local development, use Vite's [`server.proxy`](https://vitejs.dev/config/server-options.html#server-proxy) option.

How to setup rewrites in production will depend on your deployment platform. If rewrites aren't an option, you could alternatively add an [API route](./routing#server):

```js
/// file: src/routes/api/[...path]/+server.js
/** @type {import('./$types').RequestHandler} */
export function GET({ params, url }) {
	return fetch(`https://my-api-server.com/${params.path + url.search}`);
}
```

(Note that you may also need to proxy `POST`/`PATCH` etc requests, and forward `request.headers`, depending on your needs.)

### How do I use middleware?

`adapter-node` builds a middleware that you can use with your own server for production mode. In dev, you can add middleware to Vite by using a Vite plugin. For example:

```js
// @errors: 2322
// @filename: ambient.d.ts
declare module '@sveltejs/kit/vite'; // TODO this feels unnecessary, why can't it 'see' the declarations?

// @filename: index.js
// ---cut---
import { sveltekit } from '@sveltejs/kit/vite';

/** @type {import('vite').Plugin} */
const myPlugin = {
	name: 'log-request-middleware',
	configureServer(server) {
		server.middlewares.use((req, res, next) => {
			console.log(`Got request ${req.url}`);
			next();
		});
	}
};

/** @type {import('vite').UserConfig} */
const config = {
	plugins: [myPlugin, sveltekit()]
};

export default config;
```

See [Vite's `configureServer` docs](https://vitejs.dev/guide/api-plugin.html#configureserver) for more details including how to control ordering.

### Does it work with Yarn 2?

Sort of. The Plug'n'Play feature, aka 'pnp', is broken (it deviates from the Node module resolution algorithm, and [doesn't yet work with native JavaScript modules](https://github.com/yarnpkg/berry/issues/638) which SvelteKit — along with an [increasing number of packages](https://blog.sindresorhus.com/get-ready-for-esm-aa53530b3f77) — uses). You can use `nodeLinker: 'node-modules'` in your [`.yarnrc.yml`](https://yarnpkg.com/configuration/yarnrc#nodeLinker) file to disable pnp, but it's probably easier to just use npm or [pnpm](https://pnpm.io/), which is similarly fast and efficient but without the compatibility headaches.

### How do I use with Yarn 3?

Currently ESM Support within the latest Yarn (version 3) is considered [experimental](https://github.com/yarnpkg/berry/pull/2161).

The below seems to work although your results may vary.

First create a new application:

```sh
yarn create svelte myapp
cd myapp
```

And enable Yarn Berry:

```sh
yarn set version berry
yarn install
```

#### Yarn 3 global cache

One of the more interesting features of Yarn Berry is the ability to have a single global cache for packages, instead of having multiple copies for each project on the disk. However, setting `enableGlobalCache` to true causes building to fail, so it is recommended to add the following to the `.yarnrc.yml` file:

```yaml
nodeLinker: node-modules
```

This will cause packages to be downloaded into a local node_modules directory but avoids the above problem and is your best bet for using version 3 of Yarn at this point in time.

'''
'''--- documentation/docs/60-appendix/20-integrations.md ---
---
title: Integrations
---

## `vitePreprocess`

Including [`vitePreprocess`](https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/preprocess.md) in your project will allow you to use the various flavors of CSS that Vite supports: PostCSS, SCSS, Less, Stylus, and SugarSS. If you set your project up with TypeScript it will be included by default:

```js
// svelte.config.js
import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';

export default {
  preprocess: [vitePreprocess()]
};
```

You will also need to use a preprocessor if you're using TypeScript with Svelte 4. TypeScript is supported natively in Svelte 5 if you're using only the type syntax. To use more complex TypeScript syntax in Svelte 5, you will need still need a preprocessor and can use `vitePreprocess({ script: true })`.

## Adders

Run `npx sv add` to setup many different complex integrations with a single command including:
- prettier (formatting)
- eslint (linting)
- vitest (unit testing)
- playwright (e2e testing)
- lucia (auth)
- tailwind (CSS)
- drizzle (DB)
- paraglide (i18n)
- mdsvex (markdown)
- storybook (frontend workshop)

## Directory

See [sveltesociety.dev](https://sveltesociety.dev/) for a full listing of [packages](https://sveltesociety.dev/packages) and [templates](https://sveltesociety.dev/templates) available for use with Svelte and SvelteKit.

## Additional integrations

### `svelte-preprocess`

`svelte-preprocess` has some additional functionality not found in `vitePreprocess` such as support for Pug, Babel, and global styles. However, `vitePreprocess` may be faster and require less configuration, so it is used by default. Note that CoffeeScript is [not supported](https://github.com/sveltejs/kit/issues/2920#issuecomment-996469815) by SvelteKit.

You will need to install `svelte-preprocess` with `npm install --save-dev svelte-preprocess` and [add it to your `svelte.config.js`](https://github.com/sveltejs/svelte-preprocess/blob/main/docs/usage.md#with-svelte-config). After that, you will often need to [install the corresponding library](https://github.com/sveltejs/svelte-preprocess/blob/main/docs/getting-started.md) such as `npm install -D sass` or `npm install -D less`.

## Vite plugins

Since SvelteKit projects are built with Vite, you can use Vite plugins to enhance your project. See a list of available plugins at [`vitejs/awesome-vite`](https://github.com/vitejs/awesome-vite?tab=readme-ov-file#plugins).

## Integration FAQs

The SvelteKit FAQ has a [how to do X with SvelteKit](./faq#How-do-I-use-X-with-SvelteKit), which may be helpful if you still have questions.

'''
'''--- documentation/docs/60-appendix/25-debugging.md ---
---
title: Breakpoint Debugging
---

In addition to the [`@debug`](../svelte/@debug) tag, you can also debug Svelte and SvelteKit projects using breakpoints within various tools and development environments. This includes both frontend and backend code.

The following guides assume your JavaScript runtime environment is Node.js.

## Visual Studio Code

With the built-in debug terminal, you can set up breakpoints in source files within VSCode.

1. Open the command palette: `CMD/Ctrl` + `Shift` + `P`.
2. Find and launch "Debug: JavaScript Debug Terminal".
3. Start your project using the debug terminal. For example: `npm run dev`.
4. Set some breakpoints in your client or server-side source code.
5. Trigger the breakpoint.

### Launch via debug pane

You may alternatively set up a `.vscode/launch.json` in your project. To set one up automatically:

1. Go to the "Run and Debug" pane.
2. In the "Run" select menu, choose "Node.js...".
3. Select the "run script" that corresponds to your project, such as "Run script: dev".
4. Press the "Start debugging" play button, or hit `F5` to begin breakpoint debugging.

Here's an example `launch.json`:

```json
{
	"version": "0.2.0",
	"configurations": [
		{
			"command": "npm run dev",
			"name": "Run development server",
			"request": "launch",
			"type": "node-terminal"
		}
	]
}
```

Further reading: <https://code.visualstudio.com/docs/editor/debugging>.

## Other Editors

If you use a different editor, these community guides might be useful for you:

- [WebStorm Svelte: Debug Your Application](https://www.jetbrains.com/help/webstorm/svelte.html#ws_svelte_debug)
- [Debugging JavaScript Frameworks in Neovim](https://theosteiner.de/debugging-javascript-frameworks-in-neovim)

## Google Chrome and Microsoft Edge Developer Tools

It's possible to debug Node.js applications using a browser-based debugger.

> [!NOTE] Note this only works with debugging client-side SvelteKit source maps.

1. Run the `--inspect` flag when starting the Vite server with Node.js. For instance: `NODE_OPTIONS="--inspect" npm run dev`
2. Open your site in a new tab. Typically at `localhost:5173`.
3. Open your browser's dev tools, and click on the "Open dedicated DevTools for Node.js" icon near the top-left. It should display the Node.js logo.
4. Set up breakpoints and debug your application.

You may alternatively open the debugger devtools by navigating to `chrome://inspect` in Google Chrome, or `edge://inspect` in Microsoft Edge.

## References

- [Debugging Node.js](https://nodejs.org/en/learn/getting-started/debugging)

'''
'''--- documentation/docs/60-appendix/30-migrating-to-sveltekit-2.md ---
---
title: Migrating to SvelteKit v2
---

Upgrading from SvelteKit version 1 to version 2 should be mostly seamless. There are a few breaking changes to note, which are listed here. You can use `npx sv migrate sveltekit-2` to migrate some of these changes automatically.

We highly recommend upgrading to the most recent 1.x version before upgrading to 2.0, so that you can take advantage of targeted deprecation warnings. We also recommend [updating to Svelte 4](../svelte/v4-migration-guide) first: Later versions of SvelteKit 1.x support it, and SvelteKit 2.0 requires it.

## `redirect` and `error` are no longer thrown by you

Previously, you had to `throw` the values returned from `error(...)` and `redirect(...)` yourself. In SvelteKit 2 this is no longer the case — calling the functions is sufficient.

```js
import { error } from '@sveltejs/kit'

// ...
---throw error(500, 'something went wrong');---
+++error(500, 'something went wrong');+++
```

`svelte-migrate` will do these changes automatically for you.

If the error or redirect is thrown inside a `try {...}` block (hint: don't do this!), you can distinguish them from unexpected errors using [`isHttpError`](@sveltejs-kit#isHttpError) and [`isRedirect`](@sveltejs-kit#isRedirect) imported from `@sveltejs/kit`.

## path is required when setting cookies

When receiving a `Set-Cookie` header that doesn't specify a `path`, browsers will [set the cookie path](https://www.rfc-editor.org/rfc/rfc6265#section-5.1.4) to the parent of the resource in question. This behaviour isn't particularly helpful or intuitive, and frequently results in bugs because the developer expected the cookie to apply to the domain as a whole.

As of SvelteKit 2.0, you need to set a `path` when calling `cookies.set(...)`, `cookies.delete(...)` or `cookies.serialize(...)` so that there's no ambiguity. Most of the time, you probably want to use `path: '/'`, but you can set it to whatever you like, including relative paths — `''` means 'the current path', `'.'` means 'the current directory'.

```js
/** @type {import('./$types').PageServerLoad} */
export function load({ cookies }) {
	cookies.set(name, value, +++{ path: '/' }+++);
	return { response }
}
```

`svelte-migrate` will add comments highlighting the locations that need to be adjusted.

## Top-level promises are no longer awaited

In SvelteKit version 1, if the top-level properties of the object returned from a `load` function were promises, they were automatically awaited. With the introduction of [streaming](/blog/streaming-snapshots-sveltekit) this behavior became a bit awkward as it forces you to nest your streamed data one level deep.

As of version 2, SvelteKit no longer differentiates between top-level and non-top-level promises. To get back the blocking behavior, use `await` (with `Promise.all` to prevent waterfalls, where appropriate):

```js
// @filename: ambient.d.ts
declare const url: string;

// @filename: index.js
// ---cut---
// If you have a single promise
/** @type {import('./$types').PageServerLoad} */
export +++async+++ function load({ fetch }) {
	const response = +++await+++ fetch(url).then(r => r.json());
	return { response }
}
```

```js
// @filename: ambient.d.ts
declare const url1: string;
declare const url2: string;

// @filename: index.js
// ---cut---
// If you have multiple promises
/** @type {import('./$types').PageServerLoad} */
export +++async+++ function load({ fetch }) {
---	const a = fetch(url1).then(r => r.json());---
---	const b = fetch(url2).then(r => r.json());---
+++	const [a, b] = await Promise.all([
	  fetch(url1).then(r => r.json()),
	  fetch(url2).then(r => r.json()),
	]);+++
	return { a, b };
}
```

## goto(...) changes

`goto(...)` no longer accepts external URLs. To navigate to an external URL, use `window.location.href = url`. The `state` object now determines `$page.state` and must adhere to the `App.PageState` interface, if declared. See [shallow routing](shallow-routing) for more details.

## paths are now relative by default

In SvelteKit 1, `%sveltekit.assets%` in your `app.html` was replaced with a relative path by default (i.e. `.` or `..` or `../..` etc, depending on the path being rendered) during server-side rendering unless the [`paths.relative`](configuration#paths) config option was explicitly set to `false`. The same was true for `base` and `assets` imported from `$app/paths`, but only if the `paths.relative` option was explicitly set to `true`.

This inconsistency is fixed in version 2. Paths are either always relative or always absolute, depending on the value of [`paths.relative`](configuration#paths). It defaults to `true` as this results in more portable apps: if the `base` is something other than the app expected (as is the case when viewed on the [Internet Archive](https://archive.org/), for example) or unknown at build time (as is the case when deploying to [IPFS](https://ipfs.tech/) and so on), fewer things are likely to break.

## Server fetches are not trackable anymore

Previously it was possible to track URLs from `fetch`es on the server in order to rerun load functions. This poses a possible security risk (private URLs leaking), and as such it was behind the `dangerZone.trackServerFetches` setting, which is now removed.

## `preloadCode` arguments must be prefixed with `base`

SvelteKit exposes two functions, [`preloadCode`]($app-navigation#preloadCode) and [`preloadData`]($app-navigation#preloadData), for programmatically loading the code and data associated with a particular path. In version 1, there was a subtle inconsistency — the path passed to `preloadCode` did not need to be prefixed with the `base` path (if set), while the path passed to `preloadData` did.

This is fixed in SvelteKit 2 — in both cases, the path should be prefixed with `base` if it is set.

Additionally, `preloadCode` now takes a single argument rather than _n_ arguments.

## `resolvePath` has been removed

SvelteKit 1 included a function called `resolvePath` which allows you to resolve a route ID (like `/blog/[slug]`) and a set of parameters (like `{ slug: 'hello' }`) to a pathname. Unfortunately the return value didn't include the `base` path, limiting its usefulness in cases where `base` was set.

As such, SvelteKit 2 replaces `resolvePath` with a (slightly better named) function called `resolveRoute`, which is imported from `$app/paths` and which takes `base` into account.

```js
---import { resolvePath } from '@sveltejs/kit';
import { base } from '$app/paths';---
+++import { resolveRoute } from '$app/paths';+++

---const path = base + resolvePath('/blog/[slug]', { slug });---
+++const path = resolveRoute('/blog/[slug]', { slug });+++
```

`svelte-migrate` will do the method replacement for you, though if you later prepend the result with `base`, you need to remove that yourself.

## Improved error handling

Errors are handled inconsistently in SvelteKit 1. Some errors trigger the `handleError` hook but there is no good way to discern their status (for example, the only way to tell a 404 from a 500 is by seeing if `event.route.id` is `null`), while others (such as 405 errors for `POST` requests to pages without actions) don't trigger `handleError` at all, but should. In the latter case, the resulting `$page.error` will deviate from the [`App.Error`](types#Error) type, if it is specified.

SvelteKit 2 cleans this up by calling `handleError` hooks with two new properties: `status` and `message`. For errors thrown from your code (or library code called by your code) the status will be `500` and the message will be `Internal Error`. While `error.message` may contain sensitive information that should not be exposed to users, `message` is safe.

## Dynamic environment variables cannot be used during prerendering

The `$env/dynamic/public` and `$env/dynamic/private` modules provide access to _run time_ environment variables, as opposed to the _build time_ environment variables exposed by `$env/static/public` and `$env/static/private`.

During prerendering in SvelteKit 1, they are one and the same. As such, prerendered pages that make use of 'dynamic' environment variables are really 'baking in' build time values, which is incorrect. Worse, `$env/dynamic/public` is populated in the browser with these stale values if the user happens to land on a prerendered page before navigating to dynamically-rendered pages.

Because of this, dynamic environment variables can no longer be read during prerendering in SvelteKit 2 — you should use the `static` modules instead. If the user lands on a prerendered page, SvelteKit will request up-to-date values for `$env/dynamic/public` from the server (by default from a module called `_env.js` — this can be configured with `config.kit.env.publicModule`) instead of reading them from the server-rendered HTML.

## `form` and `data` have been removed from `use:enhance` callbacks

If you provide a callback to [`use:enhance`](form-actions#Progressive-enhancement-use:enhance), it will be called with an object containing various useful properties.

In SvelteKit 1, those properties included `form` and `data`. These were deprecated some time ago in favour of `formElement` and `formData`, and have been removed altogether in SvelteKit 2.

## Forms containing file inputs must use `multipart/form-data`

If a form contains an `<input type="file">` but does not have an `enctype="multipart/form-data"` attribute, non-JS submissions will omit the file. SvelteKit 2 will throw an error if it encounters a form like this during a `use:enhance` submission to ensure that your forms work correctly when JavaScript is not present.

## Generated `tsconfig.json` is more strict

Previously, the generated `tsconfig.json` was trying its best to still produce a somewhat valid config when your `tsconfig.json` included `paths` or `baseUrl`. In SvelteKit 2, the validation is more strict and will warn when you use either `paths` or `baseUrl` in your `tsconfig.json`. These settings are used to generate path aliases and you should use [the `alias` config](configuration#alias) option in your `svelte.config.js` instead, to also create a corresponding alias for the bundler.

## `getRequest` no longer throws errors

The `@sveltejs/kit/node` module exports helper functions for use in Node environments, including `getRequest` which turns a Node [`ClientRequest`](https://nodejs.org/api/http.html#class-httpclientrequest) into a standard [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request) object.

In SvelteKit 1, `getRequest` could throw if the `Content-Length` header exceeded the specified size limit. In SvelteKit 2, the error will not be thrown until later, when the request body (if any) is being read. This enables better diagnostics and simpler code.

## `vitePreprocess` is no longer exported from `@sveltejs/kit/vite`

Since `@sveltejs/vite-plugin-svelte` is now a peer dependency, SvelteKit 2 no longer re-exports `vitePreprocess`. You should import it directly from `@sveltejs/vite-plugin-svelte`.

## Updated dependency requirements

SvelteKit 2 requires Node `18.13` or higher, and the following minimum dependency versions:

- `svelte@4`
- `vite@5`
- `typescript@5`
- `@sveltejs/vite-plugin-svelte@3` (this is now required as a `peerDependency` of SvelteKit — previously it was directly depended upon)
- `@sveltejs/adapter-cloudflare@3` (if you're using these adapters)
- `@sveltejs/adapter-cloudflare-workers@2`
- `@sveltejs/adapter-netlify@3`
- `@sveltejs/adapter-node@2`
- `@sveltejs/adapter-static@3`
- `@sveltejs/adapter-vercel@4`

`svelte-migrate` will update your `package.json` for you.

As part of the TypeScript upgrade, the generated `tsconfig.json` (the one your `tsconfig.json` extends from) now uses `"moduleResolution": "bundler"` (which is recommended by the TypeScript team, as it properly resolves types from packages with an `exports` map in package.json) and `verbatimModuleSyntax` (which replaces the existing `importsNotUsedAsValues ` and `preserveValueImports` flags — if you have those in your `tsconfig.json`, remove them. `svelte-migrate` will do this for you).

'''
'''--- documentation/docs/60-appendix/40-migrating.md ---
---
title: Migrating from Sapper
rank: 1
---

SvelteKit is the successor to Sapper and shares many elements of its design.

If you have an existing Sapper app that you plan to migrate to SvelteKit, there are a number of changes you will need to make. You may find it helpful to view [some examples](additional-resources#Examples) while migrating.

## package.json

### type: "module"

Add `"type": "module"` to your `package.json`. You can do this step separately from the rest as part of an incremental migration if you are using Sapper 0.29.3
or newer.

### dependencies

Remove `polka` or `express`, if you're using one of those, and any middleware such as `sirv` or `compression`.

### devDependencies

Remove `sapper` from your `devDependencies` and replace it with `@sveltejs/kit` and whichever [adapter](adapters) you plan to use (see [next section](migrating#Project-files-Configuration)).

### scripts

Any scripts that reference `sapper` should be updated:

- `sapper build` should become `vite build` using the Node [adapter](adapters)
- `sapper export` should become `vite build` using the static [adapter](adapters)
- `sapper dev` should become `vite dev`
- `node __sapper__/build` should become `node build`

## Project files

The bulk of your app, in `src/routes`, can be left where it is, but several project files will need to be moved or updated.

### Configuration

Your `webpack.config.js` or `rollup.config.js` should be replaced with a `svelte.config.js`, as documented [here](configuration). Svelte preprocessor options should be moved to `config.preprocess`.

You will need to add an [adapter](adapters). `sapper build` is roughly equivalent to [adapter-node](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) while `sapper export` is roughly equivalent to [adapter-static](https://github.com/sveltejs/kit/tree/main/packages/adapter-static), though you might prefer to use an adapter designed for the platform you're deploying to.

If you were using plugins for filetypes that are not automatically handled by [Vite](https://vitejs.dev), you will need to find Vite equivalents and add them to the [Vite config](project-structure#Project-files-vite.config.js).

### src/client.js

This file has no equivalent in SvelteKit. Any custom logic (beyond `sapper.start(...)`) should be expressed in your `+layout.svelte` file, inside an `onMount` callback.

### src/server.js

When using `adapter-node` the equivalent is a [custom server](adapter-node#Custom-server). Otherwise, this file has no direct equivalent, since SvelteKit apps can run in serverless environments.

### src/service-worker.js

Most imports from `@sapper/service-worker` have equivalents in [`$service-worker`]($service-worker):

- `files` is unchanged
- `routes` has been removed
- `shell` is now `build`
- `timestamp` is now `version`

### src/template.html

The `src/template.html` file should be renamed `src/app.html`.

Remove `%sapper.base%`, `%sapper.scripts%` and `%sapper.styles%`. Replace `%sapper.head%` with `%sveltekit.head%` and `%sapper.html%` with `%sveltekit.body%`. The `<div id="sapper">` is no longer necessary.

### src/node_modules

A common pattern in Sapper apps is to put your internal library in a directory inside `src/node_modules`. This doesn't work with Vite, so we use [`src/lib`]($lib) instead.

## Pages and layouts

### Renamed files

Routes now are made up of the folder name exclusively to remove ambiguity, the folder names leading up to a `+page.svelte` correspond to the route. See [the routing docs](routing) for an overview. The following shows a old/new comparison:

| Old                       | New                       |
| ------------------------- | ------------------------- |
| routes/about/index.svelte | routes/about/+page.svelte |
| routes/about.svelte       | routes/about/+page.svelte |

Your custom error page component should be renamed from `_error.svelte` to `+error.svelte`. Any `_layout.svelte` files should likewise be renamed `+layout.svelte`. [Any other files are ignored](routing#Other-files).

### Imports

The `goto`, `prefetch` and `prefetchRoutes` imports from `@sapper/app` should be replaced with `goto`, `preloadData` and `preloadCode` imports respectively from [`$app/navigation`]($app-navigation).

The `stores` import from `@sapper/app` should be replaced — see the [Stores](migrating#Pages-and-layouts-Stores) section below.

Any files you previously imported from directories in `src/node_modules` will need to be replaced with [`$lib`]($lib) imports.

### Preload

As before, pages and layouts can export a function that allows data to be loaded before rendering takes place.

This function has been renamed from `preload` to [`load`](load), it now lives in a `+page.js` (or `+layout.js`) next to its `+page.svelte` (or `+layout.svelte`), and its API has changed. Instead of two arguments — `page` and `session` — there is a single `event` argument.

There is no more `this` object, and consequently no `this.fetch`, `this.error` or `this.redirect`. Instead, you can get [`fetch`](load#Making-fetch-requests) from the input methods, and both [`error`](load#Errors) and [`redirect`](load#Redirects) are now thrown.

### Stores

In Sapper, you would get references to provided stores like so:

```js
// @filename: ambient.d.ts
declare module '@sapper/app';

// @filename: index.js
// ---cut---
import { stores } from '@sapper/app';
const { preloading, page, session } = stores();
```

The `page` store still exists; `preloading` has been replaced with a `navigating` store that contains `from` and `to` properties. `page` now has `url` and `params` properties, but no `path` or `query`.

You access them differently in SvelteKit. `stores` is now `getStores`, but in most cases it is unnecessary since you can import `navigating`, and `page` directly from [`$app/stores`]($app-stores).

### Routing

Regex routes are no longer supported. Instead, use [advanced route matching](advanced-routing#Matching).

### Segments

Previously, layout components received a `segment` prop indicating the child segment. This has been removed; you should use the more flexible `$page.url.pathname` value to derive the segment you're interested in.

### URLs

In Sapper, all relative URLs were resolved against the base URL — usually `/`, unless the `basepath` option was used — rather than against the current page.

This caused problems and is no longer the case in SvelteKit. Instead, relative URLs are resolved against the current page (or the destination page, for `fetch` URLs in `load` functions) instead. In most cases, it's easier to use root-relative (i.e. starts with `/`) URLs, since their meaning is not context-dependent.

### &lt;a&gt; attributes

- `sapper:prefetch` is now `data-sveltekit-preload-data`
- `sapper:noscroll` is now `data-sveltekit-noscroll`

## Endpoints

In Sapper, [server routes](routing#server) received the `req` and `res` objects exposed by Node's `http` module (or the augmented versions provided by frameworks like Polka and Express).

SvelteKit is designed to be agnostic as to where the app is running — it could be running on a Node server, but could equally be running on a serverless platform or in a Cloudflare Worker. For that reason, you no longer interact directly with `req` and `res`. Your endpoints will need to be updated to match the new signature.

To support this environment-agnostic behavior, `fetch` is now available in the global context, so you don't need to import `node-fetch`, `cross-fetch`, or similar server-side fetch implementations in order to use it.

## Integrations

See [integrations](./integrations) for detailed information about integrations.

### HTML minifier

Sapper includes `html-minifier` by default. SvelteKit does not include this, but you can add it as a prod dependency and then use it through a [hook](hooks#Server-hooks-handle):

```js
// @filename: ambient.d.ts
/// <reference types="@sveltejs/kit" />
declare module 'html-minifier';

// @filename: index.js
// ---cut---
import { minify } from 'html-minifier';
import { building } from '$app/environment';

const minification_options = {
	collapseBooleanAttributes: true,
	collapseWhitespace: true,
	conservativeCollapse: true,
	decodeEntities: true,
	html5: true,
	ignoreCustomComments: [/^#/],
	minifyCSS: true,
	minifyJS: false,
	removeAttributeQuotes: true,
	removeComments: false, // some hydration code needs comments, so leave them in
	removeOptionalTags: true,
	removeRedundantAttributes: true,
	removeScriptTypeAttributes: true,
	removeStyleLinkTypeAttributes: true,
	sortAttributes: true,
	sortClassName: true
};

/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	let page = '';

	return resolve(event, {
		transformPageChunk: ({ html, done }) => {
			page += html;
			if (done) {
				return building ? minify(page, minification_options) : page;
			}
		}
	});
}
```

Note that `prerendering` is `false` when using `vite preview` to test the production build of the site, so to verify the results of minifying, you'll need to inspect the built HTML files directly.

'''
'''--- documentation/docs/60-appendix/50-additional-resources.md ---
---
title: Additional resources
---

## FAQs

Please see the [SvelteKit FAQ](faq) for solutions to common issues and helpful tips and tricks.

The [Svelte FAQ](../svelte/faq) and [`vite-plugin-svelte` FAQ](https://github.com/sveltejs/vite-plugin-svelte/blob/main/docs/faq.md) may also be helpful for questions deriving from those libraries.

## Examples

We've written and published a few different SvelteKit sites as examples:

- [`sveltejs/realworld`](https://github.com/sveltejs/realworld) contains an example blog site
- [A HackerNews clone](https://github.com/sveltejs/sites/tree/master/sites/hn.svelte.dev)
- [`svelte.dev`](https://github.com/sveltejs/svelte.dev)

SvelteKit users have also published plenty of examples on GitHub, under the [#sveltekit](https://github.com/topics/sveltekit) and [#sveltekit-template](https://github.com/topics/sveltekit-template) topics, as well as on [the Svelte Society site](https://sveltesociety.dev/templates?category=sveltekit). Note that these have not been vetted by the maintainers and may not be up to date.

## Support

You can ask for help on [Discord](https://svelte.dev/chat) and [StackOverflow](https://stackoverflow.com/questions/tagged/sveltekit). Please first search for information related to your issue in the FAQ, Google or another search engine, issue tracker, and Discord chat history in order to be respectful of others' time. There are many more people asking questions than answering them, so this will help in allowing the community to grow in a scalable fashion.

'''
'''--- documentation/docs/60-appendix/60-glossary.md ---
---
title: Glossary
---

The core of SvelteKit provides a highly configurable rendering engine. This section describes some of the terms used when discussing rendering. A reference for setting these options is provided in the documentation above.

## CSR

Client-side rendering (CSR) is the generation of the page contents in the web browser using JavaScript.

In SvelteKit, client-side rendering will be used by default, but you can turn off JavaScript with [the `csr = false` page option](page-options#csr).

## Hydration

Svelte components store some state and update the DOM when the state is updated. When fetching data during SSR, by default SvelteKit will store this data and transmit it to the client along with the server-rendered HTML. The components can then be initialized on the client with that data without having to call the same API endpoints again. Svelte will then check that the DOM is in the expected state and attach event listeners in a process called hydration. Once the components are fully hydrated, they can react to changes to their properties just like any newly created Svelte component.

In SvelteKit, pages will be hydrated by default, but you can turn off JavaScript with [the `csr = false` page option](page-options#csr).

## Prerendering

Prerendering means computing the contents of a page at build time and saving the HTML for display. This approach has the same benefits as traditional server-rendered pages, but avoids recomputing the page for each visitor and so scales nearly for free as the number of visitors increases. The tradeoff is that the build process is more expensive and prerendered content can only be updated by building and deploying a new version of the application.

Not all pages can be prerendered. The basic rule is this: for content to be prerenderable, any two users hitting it directly must get the same content from the server, and the page must not contain [actions](form-actions). Note that you can still prerender content that is loaded based on the page's parameters as long as all users will be seeing the same prerendered content.

Pre-rendered pages are not limited to static content. You can build personalized pages if user-specific data is fetched and rendered client-side. This is subject to the caveat that you will experience the downsides of not doing SSR for that content as discussed above.

In SvelteKit, you can control prerendering with [the `prerender` page option](page-options#prerender) and [`prerender` config](configuration#prerender) in `svelte.config.js`.

## Routing

By default, when you navigate to a new page (by clicking on a link or using the browser's forward or back buttons), SvelteKit will intercept the attempted navigation and handle it instead of allowing the browser to send a request to the server for the destination page. SvelteKit will then update the displayed contents on the client by rendering the component for the new page, which in turn can make calls to the necessary API endpoints. This process of updating the page on the client in response to attempted navigation is called client-side routing.

In SvelteKit, client-side routing will be used by default, but you can skip it with [`data-sveltekit-reload`](link-options#data-sveltekit-reload).

## SPA

A single-page app (SPA) is an application in which all requests to the server load a single HTML file which then does client-side rendering of the requested contents based on the requested URL. All navigation is handled on the client-side in a process called client-side routing with per-page contents being updated and common layout elements remaining largely unchanged. SPAs do not provide SSR, which has the shortcoming described above. However, some applications are not greatly impacted by these shortcomings such as a complex business application behind a login where SEO would not be important and it is known that users will be accessing the application from a consistent computing environment.

In SvelteKit, you can [build an SPA with `adapter-static`](single-page-apps).

## SSG

Static Site Generation (SSG) is a term that refers to a site where every page is prerendered. SvelteKit was not built to do only static site generation like some tools and so may not scale as well to efficiently render a very large number of pages as tools built specifically for that purpose. However, in contrast to most purpose-built SSGs, SvelteKit does nicely allow for mixing and matching different rendering types on different pages. One benefit of fully prerendering a site is that you do not need to maintain or pay for servers to perform SSR. Once generated, the site can be served from CDNs, leading to great "time to first byte" performance. This delivery model is often referred to as JAMstack.

In SvelteKit, you can do static site generation by using [`adapter-static`](adapter-static) or by configuring every page to be prerendered using [the `prerender` page option](page-options#prerender) or [`prerender` config](configuration#prerender) in `svelte.config.js`.

## SSR

Server-side rendering (SSR) is the generation of the page contents on the server. SSR is generally preferred for SEO. While some search engines can index content that is dynamically generated on the client-side it may take longer even in these cases. It also tends to improve perceived performance and makes your app accessible to users if JavaScript fails or is disabled (which happens [more often than you probably think](https://kryogenix.org/code/browser/everyonehasjs.html)).

In SvelteKit, pages are server-side rendered by default. You can disable SSR with [the `ssr` page option](page-options#ssr).

'''
'''--- documentation/docs/60-appendix/index.md ---
---
title: Appendix
---

'''
'''--- documentation/docs/98-reference/10-@sveltejs-kit.md ---
---
title: @sveltejs/kit
---

> MODULE: @sveltejs/kit

## Private types

The following are referenced by the public types documented above, but cannot be imported directly:

> TYPES: Private types

'''
'''--- documentation/docs/98-reference/15-@sveltejs-kit-hooks.md ---
---
title: @sveltejs/kit/hooks
---

> MODULE: @sveltejs/kit/hooks

'''
'''--- documentation/docs/98-reference/15-@sveltejs-kit-node-polyfills.md ---
---
title: @sveltejs/kit/node/polyfills
---

> MODULE: @sveltejs/kit/node/polyfills

'''
'''--- documentation/docs/98-reference/15-@sveltejs-kit-node.md ---
---
title:  @sveltejs/kit/node
---

> MODULE: @sveltejs/kit/node

'''
'''--- documentation/docs/98-reference/15-@sveltejs-kit-vite.md ---
---
title:  @sveltejs/kit/vite
---

> MODULE: @sveltejs/kit/vite

'''
'''--- documentation/docs/98-reference/20-$app-environment.md ---
---
title: $app/environment
---

> MODULE: $app/environment

'''
'''--- documentation/docs/98-reference/20-$app-forms.md ---
---
title: $app/forms
---

> MODULE: $app/forms

'''
'''--- documentation/docs/98-reference/20-$app-navigation.md ---
---
title: $app/navigation
---

> MODULE: $app/navigation

'''
'''--- documentation/docs/98-reference/20-$app-paths.md ---
---
title: $app/paths
---

> MODULE: $app/paths

'''
'''--- documentation/docs/98-reference/20-$app-server.md ---
---
title: $app/server
---

> MODULE: $app/server

'''
'''--- documentation/docs/98-reference/20-$app-stores.md ---
---
title: $app/stores
---

> MODULE: $app/stores

'''
'''--- documentation/docs/98-reference/25-$env-dynamic-private.md ---
---
title: $env/dynamic/private
---

> MODULE: $env/dynamic/private

'''
'''--- documentation/docs/98-reference/25-$env-dynamic-public.md ---
---
title: $env/dynamic/public
---

> MODULE: $env/dynamic/public

'''
'''--- documentation/docs/98-reference/25-$env-static-private.md ---
---
title: $env/static/private
---

> MODULE: $env/static/private

'''
'''--- documentation/docs/98-reference/25-$env-static-public.md ---
---
title: $env/static/public
---

> MODULE: $env/static/public

'''
'''--- documentation/docs/98-reference/26-$lib.md ---
---
title: $lib
---

SvelteKit automatically makes files under `src/lib` available using the `$lib` import alias. You can change which directory this alias points to in your [config file](configuration#files).

```svelte
<!--- file: src/lib/Component.svelte --->
A reusable component
```

```svelte
<!--- file: src/routes/+page.svelte --->
<script>
    import Component from '$lib/Component.svelte';
</script>

<Component />
```

'''
'''--- documentation/docs/98-reference/27-$service-worker.md ---
---
title: $service-worker
---

> MODULE: $service-worker

'''
'''--- documentation/docs/98-reference/50-configuration.md ---
---
title: Configuration
---

Your project's configuration lives in a `svelte.config.js` file at the root of your project. As well as SvelteKit, this config object is used by other tooling that integrates with Svelte such as editor extensions.

```js
/// file: svelte.config.js
// @filename: ambient.d.ts
declare module '@sveltejs/adapter-auto' {
	const plugin: () => import('@sveltejs/kit').Adapter;
	export default plugin;
}

// @filename: index.js
// ---cut---
import adapter from '@sveltejs/adapter-auto';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	kit: {
		adapter: adapter()
	}
};

export default config;
```

## Config

> TYPES: Configuration#Config

## KitConfig

The `kit` property configures SvelteKit, and can have the following properties:

> EXPANDED_TYPES: Configuration#KitConfig

'''
'''--- documentation/docs/98-reference/52-cli.md ---
---
title: Command Line Interface
---

SvelteKit projects use [Vite](https://vitejs.dev), meaning you'll mostly use its CLI (albeit via `npm run dev/build/preview` scripts):

- `vite dev` — start a development server
- `vite build` — build a production version of your app
- `vite preview` — run the production version locally

However SvelteKit includes its own CLI for initialising your project:

## svelte-kit sync

`svelte-kit sync` creates the `tsconfig.json` and all generated types (which you can import as `./$types` inside routing files) for your project. When you create a new project, it is listed as the `prepare` script and will be run automatically as part of the npm lifecycle, so you should not ordinarily have to run this command.

'''
'''--- documentation/docs/98-reference/54-types.md ---
---
title: Types
---

## Generated types

The `RequestHandler` and `Load` types both accept a `Params` argument allowing you to type the `params` object. For example this endpoint expects `foo`, `bar` and `baz` params:

```js
/// file: src/routes/[foo]/[bar]/[baz]/+page.server.js
// @errors: 2355 2322 1360
/** @type {import('@sveltejs/kit').RequestHandler<{
    foo: string;
    bar: string;
    baz: string
  }>} */
export async function GET({ params }) {
	// ...
}
```

Needless to say, this is cumbersome to write out, and less portable (if you were to rename the `[foo]` directory to `[qux]`, the type would no longer reflect reality).

To solve this problem, SvelteKit generates `.d.ts` files for each of your endpoints and pages:

```ts
/// file: .svelte-kit/types/src/routes/[foo]/[bar]/[baz]/$types.d.ts
/// link: true
import type * as Kit from '@sveltejs/kit';

type RouteParams = {
	foo: string;
	bar: string;
	baz: string;
};

export type PageServerLoad = Kit.ServerLoad<RouteParams>;
export type PageLoad = Kit.Load<RouteParams>;
```

These files can be imported into your endpoints and pages as siblings, thanks to the [`rootDirs`](https://www.typescriptlang.org/tsconfig#rootDirs) option in your TypeScript configuration:

```js
/// file: src/routes/[foo]/[bar]/[baz]/+page.server.js
// @filename: $types.d.ts
import type * as Kit from '@sveltejs/kit';

type RouteParams = {
	foo: string;
	bar: string;
	baz: string;
}

export type PageServerLoad = Kit.ServerLoad<RouteParams>;

// @filename: index.js
// @errors: 2355
// ---cut---
/** @type {import('./$types').PageServerLoad} */
export async function GET({ params }) {
	// ...
}
```

```js
/// file: src/routes/[foo]/[bar]/[baz]/+page.js
// @filename: $types.d.ts
import type * as Kit from '@sveltejs/kit';

type RouteParams = {
	foo: string;
	bar: string;
	baz: string;
}

export type PageLoad = Kit.Load<RouteParams>;

// @filename: index.js
// @errors: 2355
// ---cut---
/** @type {import('./$types').PageLoad} */
export async function load({ params, fetch }) {
	// ...
}
```

> [!NOTE] For this to work, your own `tsconfig.json` or `jsconfig.json` should extend from the generated `.svelte-kit/tsconfig.json` (where `.svelte-kit` is your [`outDir`](configuration#outDir)):
>
> `{ "extends": "./.svelte-kit/tsconfig.json" }`

### Default tsconfig.json

The generated `.svelte-kit/tsconfig.json` file contains a mixture of options. Some are generated programmatically based on your project configuration, and should generally not be overridden without good reason:

```json
/// file: .svelte-kit/tsconfig.json
{
	"compilerOptions": {
		"baseUrl": "..",
		"paths": {
			"$lib": "src/lib",
			"$lib/*": "src/lib/*"
		},
		"rootDirs": ["..", "./types"]
	},
	"include": ["../src/**/*.js", "../src/**/*.ts", "../src/**/*.svelte"],
	"exclude": ["../node_modules/**", "./**"]
}
```

Others are required for SvelteKit to work properly, and should also be left untouched unless you know what you're doing:

```json
/// file: .svelte-kit/tsconfig.json
{
	"compilerOptions": {
		// this ensures that types are explicitly
		// imported with `import type`, which is
		// necessary as svelte-preprocess cannot
		// otherwise compile components correctly
		"importsNotUsedAsValues": "error",

		// Vite compiles one TypeScript module
		// at a time, rather than compiling
		// the entire module graph
		"isolatedModules": true,

		// TypeScript cannot 'see' when you
		// use an imported value in your
		// markup, so we need this
		"preserveValueImports": true,

		// This ensures both `vite build`
		// and `svelte-package` work correctly
		"lib": ["esnext", "DOM", "DOM.Iterable"],
		"moduleResolution": "node",
		"module": "esnext",
		"target": "esnext"
	}
}
```

## $lib

This is a simple alias to `src/lib`, or whatever directory is specified as [`config.kit.files.lib`](configuration#files). It allows you to access common components and utility modules without `../../../../` nonsense.

### $lib/server

A subdirectory of `$lib`. SvelteKit will prevent you from importing any modules in `$lib/server` into client-side code. See [server-only modules](server-only-modules).

## app.d.ts

The `app.d.ts` file is home to the ambient types of your apps, i.e. types that are available without explicitly importing them.

Always part of this file is the `App` namespace. This namespace contains several types that influence the shape of certain SvelteKit features you interact with.

> TYPES: App

'''
'''--- documentation/docs/98-reference/index.md ---
---
title: Reference
---

'''
'''--- documentation/docs/index.md ---
---
title: SvelteKit
---

'''
'''--- packages/adapter-auto/CHANGELOG.md ---
# @sveltejs/adapter-auto

## 3.3.1
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 3.3.0
### Minor Changes

- feat: add support for Bun package manager ([#12854](https://github.com/sveltejs/kit/pull/12854))

## 3.2.5
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

- Updated dependencies [[`e798ef718f163bed4f93e1918bd8294f765376ad`](https://github.com/sveltejs/kit/commit/e798ef718f163bed4f93e1918bd8294f765376ad)]:
  - @sveltejs/kit@2.5.28

## 3.2.4
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 3.2.3
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 3.2.2

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 3.2.1

### Patch Changes

- fix: bump import-meta-resolve to remove deprecation warnings ([#12240](https://github.com/sveltejs/kit/pull/12240))

- Updated dependencies [[`460d4526c80358958e58a2451fe1b663fdc656e9`](https://github.com/sveltejs/kit/commit/460d4526c80358958e58a2451fe1b663fdc656e9), [`16cd900c304e0cf0f16b484aa61a5ba0531d8751`](https://github.com/sveltejs/kit/commit/16cd900c304e0cf0f16b484aa61a5ba0531d8751)]:
  - @sveltejs/kit@2.5.10

## 3.2.0

### Minor Changes

- feat: add support for Google Cloud Run ([#12015](https://github.com/sveltejs/kit/pull/12015))

## 3.1.1

### Patch Changes

- fix: better error message when using `read` ([#11689](https://github.com/sveltejs/kit/pull/11689))

## 3.1.0

### Minor Changes

- feat: bump Azure adapter version ([#11496](https://github.com/sveltejs/kit/pull/11496))

## 3.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 3.0.0

### Major Changes

- breaking: require SvelteKit 2 ([#11316](https://github.com/sveltejs/kit/pull/11316))

## 2.1.1

### Patch Changes

- chore(deps): update dependency `import-meta-resolve` to v4 ([#10970](https://github.com/sveltejs/kit/pull/10970))

- Updated dependencies [[`072430ec5`](https://github.com/sveltejs/kit/commit/072430ec5c64782cd25c750f40534fea9cab4b40)]:
  - @sveltejs/kit@1.27.3

## 2.1.0

### Minor Changes

- [feat] support AWS via SST ([#9874](https://github.com/sveltejs/kit/pull/9874))

## 2.0.1

### Patch Changes

- chore: update dependency `import-meta-resolve` to v3 ([#9758](https://github.com/sveltejs/kit/pull/9758))

- Updated dependencies [[`aae5992e4`](https://github.com/sveltejs/kit/commit/aae5992e4568d93b477befe02b4018a59a298262), [`415358258`](https://github.com/sveltejs/kit/commit/415358258797911a8406c3b1e569b7cdcae6b207)]:
  - @sveltejs/kit@1.15.8

## 2.0.0

### Major Changes

- breaking: bump `@sveltejs/kit` peer dependency ([#8740](https://github.com/sveltejs/kit/pull/8740))

### Patch Changes

- Updated dependencies [[`c7648f66`](https://github.com/sveltejs/kit/commit/c7648f6608a413e2654625cbd30f890d2148cf13), [`63613bf1`](https://github.com/sveltejs/kit/commit/63613bf194c18ce50e111585ad770fc93f9e43c7), [`d1f7655e`](https://github.com/sveltejs/kit/commit/d1f7655efdff70d91f94fe0cb0de50ed2511b5e5)]:
  - @sveltejs/kit@1.5.0

## 1.0.3

### Patch Changes

- fix: pin adapter versions ([#8874](https://github.com/sveltejs/kit/pull/8874))

- Updated dependencies [[`f8dd7754`](https://github.com/sveltejs/kit/commit/f8dd7754ea21b11063613aac7d0d6cd98fc28b8e), [`fafe7d5f`](https://github.com/sveltejs/kit/commit/fafe7d5f033b249d554879b5ab7bc641f0ace362), [`e56a13c6`](https://github.com/sveltejs/kit/commit/e56a13c68a7d885f83f519c43f3510f10fee4ca5), [`02bd767d`](https://github.com/sveltejs/kit/commit/02bd767d3277a840b480fe94444cd1c886ef519b), [`97d68b13`](https://github.com/sveltejs/kit/commit/97d68b1381c1e0d052a0978824e96b9f50d248a9), [`2ef9b7d1`](https://github.com/sveltejs/kit/commit/2ef9b7d124809ce6a9804abbeaa4647a99fac97c), [`64a279f7`](https://github.com/sveltejs/kit/commit/64a279f7f92dcd4855af83fcbb09ea5ba1521ee8)]:
  - @sveltejs/kit@1.4.0

## 1.0.2

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.1

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.91

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.90

### Patch Changes

- Upgrade dependencies ([#7852](https://github.com/sveltejs/kit/pull/7852))

## 1.0.0-next.89

### Patch Changes

- defer adapter installation until actually needed ([#7739](https://github.com/sveltejs/kit/pull/7739))

## 1.0.0-next.88

### Patch Changes

- feat: install adapters on demand ([#7462](https://github.com/sveltejs/kit/pull/7462))

## 1.0.0-next.87

### Patch Changes

- Updated dependencies [[`7259ed67`](https://github.com/sveltejs/kit/commit/7259ed67c2bee882135bcf43577611bab6903f90)]:
  - @sveltejs/adapter-netlify@1.0.0-next.84
  - @sveltejs/adapter-vercel@1.0.0-next.81

## 1.0.0-next.86

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))
- Updated dependencies [[`e141513d`](https://github.com/sveltejs/kit/commit/e141513dd395466cc2e1649c8c9bfe36c0633846)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.40
  - @sveltejs/adapter-netlify@1.0.0-next.83
  - @sveltejs/adapter-vercel@1.0.0-next.81

## 1.0.0-next.85

### Patch Changes

- Updated dependencies [[`97d45c0c`](https://github.com/sveltejs/kit/commit/97d45c0cca9c06e71f91a0777d4748f96d400b4d)]:
  - @sveltejs/adapter-netlify@1.0.0-next.82
  - @sveltejs/adapter-vercel@1.0.0-next.80

## 1.0.0-next.84

### Patch Changes

- Updated dependencies [[`8d83708a`](https://github.com/sveltejs/kit/commit/8d83708ab021e367dc0eaa3ed57daf30a56497d7)]:
  - @sveltejs/adapter-vercel@1.0.0-next.80
  - @sveltejs/adapter-netlify@1.0.0-next.81

## 1.0.0-next.83

### Patch Changes

- Updated dependencies [[`b4c26809`](https://github.com/sveltejs/kit/commit/b4c268091b246befb1cb028875781285c9ff4aa5)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.39
  - @sveltejs/adapter-netlify@1.0.0-next.81
  - @sveltejs/adapter-vercel@1.0.0-next.79

## 1.0.0-next.82

### Patch Changes

- Updated dependencies [[`b5a0991c`](https://github.com/sveltejs/kit/commit/b5a0991c1692ff87d04be0cdb0a562a20de113a1)]:
  - @sveltejs/adapter-netlify@1.0.0-next.80
  - @sveltejs/adapter-vercel@1.0.0-next.78

## 1.0.0-next.81

### Patch Changes

- Updated dependencies [[`2555e64b`](https://github.com/sveltejs/kit/commit/2555e64be5ca8433c623e7838dc9c570ad024aed)]:
  - @sveltejs/adapter-netlify@1.0.0-next.79
  - @sveltejs/adapter-vercel@1.0.0-next.77

## 1.0.0-next.80

### Patch Changes

- Updated dependencies [[`d0e63d44`](https://github.com/sveltejs/kit/commit/d0e63d445e19e2df7a5e7d35f42b2ba1ae5e5745)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.38

## 1.0.0-next.79

### Patch Changes

- Updated dependencies [[`ae8225d4`](https://github.com/sveltejs/kit/commit/ae8225d4e547c8bc07d82e516dd49315eddb56c3)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.37
  - @sveltejs/adapter-netlify@1.0.0-next.78
  - @sveltejs/adapter-vercel@1.0.0-next.77

## 1.0.0-next.78

### Patch Changes

- Updated dependencies [[`737160d8`](https://github.com/sveltejs/kit/commit/737160d88cd96323eeac317ed08b4f0d6d83c482)]:
  - @sveltejs/adapter-vercel@1.0.0-next.77
  - @sveltejs/adapter-netlify@1.0.0-next.78

## 1.0.0-next.77

### Patch Changes

- Updated dependencies [[`e40acb56`](https://github.com/sveltejs/kit/commit/e40acb561e32a2ee5bcb6d289ebd1284d7af247b)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.36

## 1.0.0-next.76

### Patch Changes

- Updated dependencies [[`ae2e4bf2`](https://github.com/sveltejs/kit/commit/ae2e4bf2c5fe0aeba4cba21d51362837f66d1949)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.35

## 1.0.0-next.75

### Patch Changes

- Updated dependencies [[`fc1834b7`](https://github.com/sveltejs/kit/commit/fc1834b79ac85066ccb0f995958276628f944147)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.34
  - @sveltejs/adapter-netlify@1.0.0-next.78
  - @sveltejs/adapter-vercel@1.0.0-next.76

## 1.0.0-next.74

### Patch Changes

- feat: support Azure SWA ([#6761](https://github.com/sveltejs/kit/pull/6761))
- Updated dependencies [[`2040baee`](https://github.com/sveltejs/kit/commit/2040baee98cf85fe542e1e38a9fb60ede3f95f1d)]:
  - @sveltejs/adapter-vercel@1.0.0-next.75
  - @sveltejs/adapter-netlify@1.0.0-next.77

## 1.0.0-next.73

### Patch Changes

- Updated dependencies [[`b32b3ac9`](https://github.com/sveltejs/kit/commit/b32b3ac9c05efebfab5651de9bf5cdd0d4d54c12), [`ee5777e3`](https://github.com/sveltejs/kit/commit/ee5777e33695d2ddf1742a5e1d0144674d48d2d3)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.33
  - @sveltejs/adapter-netlify@1.0.0-next.77
  - @sveltejs/adapter-vercel@1.0.0-next.74

## 1.0.0-next.72

### Patch Changes

- Updated dependencies [[`f1e762bf`](https://github.com/sveltejs/kit/commit/f1e762bff16acc56b0d1e10c9cadeada0d25017d)]:
  - @sveltejs/adapter-vercel@1.0.0-next.73
  - @sveltejs/adapter-netlify@1.0.0-next.76

## 1.0.0-next.71

### Patch Changes

- Updated dependencies [[`6b06da84`](https://github.com/sveltejs/kit/commit/6b06da84b2454f42cbf7e8bcb643169af74428db)]:
  - @sveltejs/adapter-netlify@1.0.0-next.76
  - @sveltejs/adapter-vercel@1.0.0-next.72

## 1.0.0-next.70

### Patch Changes

- Updated dependencies [[`4b48d1bd`](https://github.com/sveltejs/kit/commit/4b48d1bd5005dc8e059b17fa42f0d08674aad30c)]:
  - @sveltejs/adapter-vercel@1.0.0-next.72
  - @sveltejs/adapter-netlify@1.0.0-next.75

## 1.0.0-next.69

### Patch Changes

- Updated dependencies [[`c530d337`](https://github.com/sveltejs/kit/commit/c530d33793a228fac684c71ed7926e6217101a90)]:
  - @sveltejs/adapter-netlify@1.0.0-next.75
  - @sveltejs/adapter-vercel@1.0.0-next.71

## 1.0.0-next.68

### Patch Changes

- Updated dependencies [[`331e0a80`](https://github.com/sveltejs/kit/commit/331e0a80b5e63f75c8226ddc93d0b0beefd40de3)]:
  - @sveltejs/adapter-vercel@1.0.0-next.70
  - @sveltejs/adapter-netlify@1.0.0-next.74

## 1.0.0-next.67

### Patch Changes

- Updated dependencies [[`ddd3b630`](https://github.com/sveltejs/kit/commit/ddd3b630090cd098a1038a56765e570339697830)]:
  - @sveltejs/adapter-vercel@1.0.0-next.69
  - @sveltejs/adapter-netlify@1.0.0-next.73

## 1.0.0-next.66

### Patch Changes

- Updated dependencies [[`64449a71`](https://github.com/sveltejs/kit/commit/64449a7138b9b5bce913dce1290bd6ff8a44c906)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.32
  - @sveltejs/adapter-netlify@1.0.0-next.72
  - @sveltejs/adapter-vercel@1.0.0-next.68

## 1.0.0-next.65

### Patch Changes

- Updated dependencies [[`4bd84b32`](https://github.com/sveltejs/kit/commit/4bd84b326889f71c2ebaacfc7f0f1b3a19017a4c)]:
  - @sveltejs/adapter-vercel@1.0.0-next.67
  - @sveltejs/adapter-netlify@1.0.0-next.71

## 1.0.0-next.64

### Patch Changes

- Updated dependencies [[`b1a40552`](https://github.com/sveltejs/kit/commit/b1a40552aa6d9bd16d1f2bb5d7359dcc0101d2ea)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.31
  - @sveltejs/adapter-netlify@1.0.0-next.71
  - @sveltejs/adapter-vercel@1.0.0-next.66

## 1.0.0-next.63

### Patch Changes

- Updated dependencies [[`81917206`](https://github.com/sveltejs/kit/commit/819172065cdda6c695f3fb48e60fa451c1caaae6)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.30
  - @sveltejs/adapter-netlify@1.0.0-next.70
  - @sveltejs/adapter-vercel@1.0.0-next.65

## 1.0.0-next.62

### Patch Changes

- Updated dependencies [[`2a9c1925`](https://github.com/sveltejs/kit/commit/2a9c19252912d61bd840441fe80dc13366af41f7)]:
  - @sveltejs/adapter-vercel@1.0.0-next.64
  - @sveltejs/adapter-netlify@1.0.0-next.69

## 1.0.0-next.61

### Patch Changes

- Updated dependencies [[`bbb8a8e0`](https://github.com/sveltejs/kit/commit/bbb8a8e0f0d2ca6513ecc8da5964877acbebf4b7)]:
  - @sveltejs/adapter-vercel@1.0.0-next.63

## 1.0.0-next.60

### Patch Changes

- Updated dependencies [[`5e7ca20d`](https://github.com/sveltejs/kit/commit/5e7ca20d79682416fb11aefc3f3abe0f1878d188)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.29
  - @sveltejs/adapter-netlify@1.0.0-next.69
  - @sveltejs/adapter-vercel@1.0.0-next.62

## 1.0.0-next.59

### Patch Changes

- Updated dependencies [[`d090a59b`](https://github.com/sveltejs/kit/commit/d090a59b89114f5f4ec605149f28a1e1748358ea)]:
  - @sveltejs/adapter-vercel@1.0.0-next.61

## 1.0.0-next.58

### Patch Changes

- Updated dependencies [[`cdbce6b1`](https://github.com/sveltejs/kit/commit/cdbce6b10e960a8839916ab5db11c79b450541f7)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.28

## 1.0.0-next.57

### Patch Changes

- Updated dependencies [[`10f2105d`](https://github.com/sveltejs/kit/commit/10f2105d5d33640cfd7365b3747c131a90281834)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.27

## 1.0.0-next.56

### Patch Changes

- Updated dependencies [[`31fbb1cb`](https://github.com/sveltejs/kit/commit/31fbb1cb4dc9fd29edff5993bb85da8863b54e79)]:
  - @sveltejs/adapter-netlify@1.0.0-next.68

## 1.0.0-next.55

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))
- Updated dependencies [[`3799a89e`](https://github.com/sveltejs/kit/commit/3799a89e7913b71da4dab749ec1423215c4a20a1)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.26
  - @sveltejs/adapter-netlify@1.0.0-next.67
  - @sveltejs/adapter-vercel@1.0.0-next.60

## 1.0.0-next.54

### Patch Changes

- Updated dependencies [[`320777aa`](https://github.com/sveltejs/kit/commit/320777aad1f0d2141e36738fc440589e3232304d)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.25

## 1.0.0-next.53

### Patch Changes

- Updated dependencies [[`8883ab72`](https://github.com/sveltejs/kit/commit/8883ab72bf2a9ce1815ef8ebd5eb7b028cd5a6dd)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.24
  - @sveltejs/adapter-netlify@1.0.0-next.66
  - @sveltejs/adapter-vercel@1.0.0-next.59

## 1.0.0-next.52

### Patch Changes

- Updated dependencies [[`c399840e`](https://github.com/sveltejs/kit/commit/c399840ecaa33d84e396b6d4c6658c240d248455)]:
  - @sveltejs/adapter-vercel@1.0.0-next.59
  - @sveltejs/adapter-netlify@1.0.0-next.65

## 1.0.0-next.51

### Patch Changes

- Updated dependencies [[`1974386d`](https://github.com/sveltejs/kit/commit/1974386d001beff62d92ca1d174a06c5681d3158)]:
  - @sveltejs/adapter-netlify@1.0.0-next.65
  - @sveltejs/adapter-vercel@1.0.0-next.58

## 1.0.0-next.50

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))
- Updated dependencies [[`821592f3`](https://github.com/sveltejs/kit/commit/821592f36e4e507cbfa5a0e0a1ee99be9991e827)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.23
  - @sveltejs/adapter-netlify@1.0.0-next.64
  - @sveltejs/adapter-vercel@1.0.0-next.58

## 1.0.0-next.49

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))
- Updated dependencies [[`7d5fb308`](https://github.com/sveltejs/kit/commit/7d5fb3083a428c4b045d7845138efdb40e1ebad8)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.22
  - @sveltejs/adapter-netlify@1.0.0-next.63
  - @sveltejs/adapter-vercel@1.0.0-next.57

## 1.0.0-next.48

### Patch Changes

- Updated dependencies [[`60370cc2`](https://github.com/sveltejs/kit/commit/60370cc242ff0879401d3b10eb38e9c22e41b7ab), [`f0fb175d`](https://github.com/sveltejs/kit/commit/f0fb175dda834807dc51964105e4ecce33c4ad0b)]:
  - @sveltejs/adapter-vercel@1.0.0-next.56
  - @sveltejs/adapter-cloudflare@1.0.0-next.21
  - @sveltejs/adapter-netlify@1.0.0-next.62

## 1.0.0-next.47

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))
- Updated dependencies [[`9b13c61c`](https://github.com/sveltejs/kit/commit/9b13c61c68ac4fe601e0a95cf958f7b63fa7a754)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.20
  - @sveltejs/adapter-netlify@1.0.0-next.61
  - @sveltejs/adapter-vercel@1.0.0-next.55

## 1.0.0-next.46

### Patch Changes

- Updated dependencies [[`e3c9073a`](https://github.com/sveltejs/kit/commit/e3c9073a8b43f1dd4aa871639b61cb974a1f110e)]:
  - @sveltejs/adapter-netlify@1.0.0-next.60
  - @sveltejs/adapter-vercel@1.0.0-next.54

## 1.0.0-next.45

### Patch Changes

- Updated dependencies [[`c660143a`](https://github.com/sveltejs/kit/commit/c660143ad2b90ea3a1ae18247c553da2538750a0)]:
  - @sveltejs/adapter-netlify@1.0.0-next.59
  - @sveltejs/adapter-vercel@1.0.0-next.54

## 1.0.0-next.44

### Patch Changes

- Updated dependencies [[`a452bd83`](https://github.com/sveltejs/kit/commit/a452bd83ac5feb27040a1cb364395c9ae5c04107)]:
  - @sveltejs/adapter-vercel@1.0.0-next.53

## 1.0.0-next.43

### Patch Changes

- Updated dependencies [[`0efa319d`](https://github.com/sveltejs/kit/commit/0efa319d0a03c180a66845d1a4933589084ddb48), [`3d34924c`](https://github.com/sveltejs/kit/commit/3d34924c3f3c1af75c326c6d92cdbfb263f0492a), [`e685c5ae`](https://github.com/sveltejs/kit/commit/e685c5aecdefbc57fcbec5624ed43fd7dd01a037)]:
  - @sveltejs/adapter-netlify@1.0.0-next.58
  - @sveltejs/adapter-vercel@1.0.0-next.52

## 1.0.0-next.42

### Patch Changes

- Updated dependencies [[`7609ad07`](https://github.com/sveltejs/kit/commit/7609ad0759c895600198eaf4345d735c7c6d1166), [`7609ad07`](https://github.com/sveltejs/kit/commit/7609ad0759c895600198eaf4345d735c7c6d1166)]:
  - @sveltejs/adapter-vercel@1.0.0-next.51
  - @sveltejs/adapter-netlify@1.0.0-next.57

## 1.0.0-next.41

### Patch Changes

- Updated dependencies [[`3b83249b`](https://github.com/sveltejs/kit/commit/3b83249ba22353ccfe592d265d2c3b8b71c2c224)]:
  - @sveltejs/adapter-netlify@1.0.0-next.57
  - @sveltejs/adapter-vercel@1.0.0-next.50

## 1.0.0-next.40

### Patch Changes

- Updated dependencies [[`f9c30302`](https://github.com/sveltejs/kit/commit/f9c30302d8639983ea2e13bf532f34dbaa78d199)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.19
  - @sveltejs/adapter-netlify@1.0.0-next.56
  - @sveltejs/adapter-vercel@1.0.0-next.50

## 1.0.0-next.39

### Patch Changes

- Updated dependencies [[`6821d642`](https://github.com/sveltejs/kit/commit/6821d642478c692ed028e91d8d08c9754aa1db2f)]:
  - @sveltejs/adapter-vercel@1.0.0-next.50
  - @sveltejs/adapter-netlify@1.0.0-next.55

## 1.0.0-next.38

### Patch Changes

- Updated dependencies [[`40e50322`](https://github.com/sveltejs/kit/commit/40e50322cd4487d818198f879b90166eccd31c78)]:
  - @sveltejs/adapter-netlify@1.0.0-next.55

## 1.0.0-next.37

### Patch Changes

- Updated dependencies [[`f862a784`](https://github.com/sveltejs/kit/commit/f862a7844349ab3a233fdc67e0cc8025fde385c6)]:
  - @sveltejs/adapter-netlify@1.0.0-next.54
  - @sveltejs/adapter-vercel@1.0.0-next.49

## 1.0.0-next.36

### Patch Changes

- Updated dependencies [[`f15af292`](https://github.com/sveltejs/kit/commit/f15af292f5e91dac4cd526f9ad538b5d593505ce), [`e82fe2b5`](https://github.com/sveltejs/kit/commit/e82fe2b519d3dd84aa77cdd62f4b251874019a6b)]:
  - @sveltejs/adapter-vercel@1.0.0-next.49
  - @sveltejs/adapter-netlify@1.0.0-next.53

## 1.0.0-next.35

### Patch Changes

- Updated dependencies [[`467cdb97`](https://github.com/sveltejs/kit/commit/467cdb9713e7d6a3355a35ffb5ee17bcd58a9c30), [`b228fb5b`](https://github.com/sveltejs/kit/commit/b228fb5b119641dca59dcb57d94700ebe3b79155), [`41db4a36`](https://github.com/sveltejs/kit/commit/41db4a36f3673c4b174d872a47afd1efd0db35c4)]:
  - @sveltejs/adapter-vercel@1.0.0-next.48
  - @sveltejs/adapter-cloudflare@1.0.0-next.18
  - @sveltejs/adapter-netlify@1.0.0-next.52

## 1.0.0-next.34

### Patch Changes

- Updated dependencies [[`316943fc`](https://github.com/sveltejs/kit/commit/316943fc2ea3272060636e12eccac430667fc562), [`08bb98c8`](https://github.com/sveltejs/kit/commit/08bb98c8d4f3431bf3e43faeec08ec9669b70e51)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.17
  - @sveltejs/adapter-netlify@1.0.0-next.51
  - @sveltejs/adapter-vercel@1.0.0-next.47

## 1.0.0-next.33

### Patch Changes

- Updated dependencies [[`268ee6b9`](https://github.com/sveltejs/kit/commit/268ee6b921ee9cab9f5995b6c5144b3d903ed02a)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.16
  - @sveltejs/adapter-netlify@1.0.0-next.51
  - @sveltejs/adapter-vercel@1.0.0-next.47

## 1.0.0-next.32

### Patch Changes

- Select adapter immediately ([#4299](https://github.com/sveltejs/kit/pull/4299))
- Updated dependencies []:
  - @sveltejs/adapter-netlify@1.0.0-next.50
  - @sveltejs/adapter-vercel@1.0.0-next.46

## 1.0.0-next.31

### Patch Changes

- Updated dependencies [[`8aa2920b`](https://github.com/sveltejs/kit/commit/8aa2920b9a05ab2907ee2ffbe9f273ab8e2dbc69)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.15
  - @sveltejs/adapter-netlify@1.0.0-next.50
  - @sveltejs/adapter-vercel@1.0.0-next.46

## 1.0.0-next.30

### Patch Changes

- Updated dependencies [[`8c08aa50`](https://github.com/sveltejs/kit/commit/8c08aa505a0b5238cdc2fbe8408b89ff495da1f7)]:
  - @sveltejs/adapter-netlify@1.0.0-next.49
  - @sveltejs/adapter-cloudflare@1.0.0-next.14
  - @sveltejs/adapter-vercel@1.0.0-next.45

## 1.0.0-next.29

### Patch Changes

- Updated dependencies [[`dcb856f8`](https://github.com/sveltejs/kit/commit/dcb856f89ccc5c823fa604fb20e75d88323f83ca)]:
  - @sveltejs/adapter-netlify@1.0.0-next.48
  - @sveltejs/adapter-vercel@1.0.0-next.45
  - @sveltejs/adapter-cloudflare@1.0.0-next.14

## 1.0.0-next.28

### Patch Changes

- Updated dependencies [[`c1bf43e4`](https://github.com/sveltejs/kit/commit/c1bf43e4cc34f565089d82f8579e46ea12ae618e)]:
  - @sveltejs/adapter-netlify@1.0.0-next.47
  - @sveltejs/adapter-cloudflare@1.0.0-next.14
  - @sveltejs/adapter-vercel@1.0.0-next.44

## 1.0.0-next.27

### Patch Changes

- Bumping versions again ([#4090](https://github.com/sveltejs/kit/pull/4090))
- Updated dependencies [[`69401762`](https://github.com/sveltejs/kit/commit/694017624ec8f1abaad7ebefb867bb065f7adf05)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.14

## 1.0.0-next.26

### Patch Changes

- Attempt to force @next version bump ([#4088](https://github.com/sveltejs/kit/pull/4088))
- Updated dependencies [[`46f44a61`](https://github.com/sveltejs/kit/commit/46f44a61624bed525e393e669da9b7db566a1e18)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.13

## 1.0.0-next.25

### Patch Changes

- Attempt to bump @next version of adapter-auto ([#4082](https://github.com/sveltejs/kit/pull/4082))

## 1.0.0-next.24

### Patch Changes

- Updated dependencies [[`f223f91a`](https://github.com/sveltejs/kit/commit/f223f91ab8346fb8fc376393603956e72baa6369)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.12
  - @sveltejs/adapter-netlify@1.0.0-next.46
  - @sveltejs/adapter-vercel@1.0.0-next.44

## 1.0.0-next.23

### Patch Changes

- Updated dependencies [[`9ee49342`](https://github.com/sveltejs/kit/commit/9ee493426a5571b20d5d84eb59b4b7ded9f3438d)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.11
  - @sveltejs/adapter-netlify@1.0.0-next.45
  - @sveltejs/adapter-vercel@1.0.0-next.43

## 1.0.0-next.22

### Patch Changes

- Updated dependencies [[`b05c9f13`](https://github.com/sveltejs/kit/commit/b05c9f13ec4b61053962b99a62794ee3831bf345)]:
  - @sveltejs/adapter-vercel@1.0.0-next.43

## 1.0.0-next.21

### Patch Changes

- Updated dependencies [[`68fd6843`](https://github.com/sveltejs/kit/commit/68fd684344a0650420a5b9bffa1c91333dcbaa98)]:
  - @sveltejs/adapter-vercel@1.0.0-next.42
  - @sveltejs/adapter-cloudflare@1.0.0-next.10
  - @sveltejs/adapter-netlify@1.0.0-next.45

## 1.0.0-next.20

### Patch Changes

- fix links pointing to multi-page docs ([#3815](https://github.com/sveltejs/kit/pull/3815))
- Updated dependencies []:
  - @sveltejs/adapter-cloudflare@1.0.0-next.10
  - @sveltejs/adapter-netlify@1.0.0-next.45
  - @sveltejs/adapter-vercel@1.0.0-next.41

## 1.0.0-next.19

### Patch Changes

- Updated dependencies [[`b33f75a4`](https://github.com/sveltejs/kit/commit/b33f75a4edc49d345baf3f6a5bd232232223dcc5)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.10
  - @sveltejs/adapter-netlify@1.0.0-next.45
  - @sveltejs/adapter-vercel@1.0.0-next.41

## 1.0.0-next.18

### Patch Changes

- Updated dependencies [[`48f48162`](https://github.com/sveltejs/kit/commit/48f481626908377aa156a4cc4e177d2d7d663c81)]:
  - @sveltejs/adapter-vercel@1.0.0-next.40
  - @sveltejs/adapter-cloudflare@1.0.0-next.9
  - @sveltejs/adapter-netlify@1.0.0-next.44

## 1.0.0-next.17

### Patch Changes

- Updated dependencies [[`667bc815`](https://github.com/sveltejs/kit/commit/667bc8152d094c4537cfc3329dba7c6bb4b9eac1)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.9
  - @sveltejs/adapter-netlify@1.0.0-next.44
  - @sveltejs/adapter-vercel@1.0.0-next.39

## 1.0.0-next.16

### Patch Changes

- Updated dependencies [[`90664c9d`](https://github.com/sveltejs/kit/commit/90664c9dd9749086ac0b34aa2acd625174af80cf)]:
  - @sveltejs/adapter-netlify@1.0.0-next.44
  - @sveltejs/adapter-cloudflare@1.0.0-next.8
  - @sveltejs/adapter-vercel@1.0.0-next.39

## 1.0.0-next.15

### Patch Changes

- Updated dependencies [[`1795843a`](https://github.com/sveltejs/kit/commit/1795843ac8551cc06009bd5868c7ef2a65c00200)]:
  - @sveltejs/adapter-netlify@1.0.0-next.43

## 1.0.0-next.14

### Patch Changes

- Updated dependencies [[`4d58e10c`](https://github.com/sveltejs/kit/commit/4d58e10c36cab47d40c161a87c82512bebeb6b90)]:
  - @sveltejs/adapter-netlify@1.0.0-next.42
  - @sveltejs/adapter-cloudflare@1.0.0-next.8
  - @sveltejs/adapter-vercel@1.0.0-next.39

## 1.0.0-next.13

### Patch Changes

- Updated dependencies [[`ee906a3b`](https://github.com/sveltejs/kit/commit/ee906a3b2b103e4523eb1b6bb13f04d03eb35238)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.8
  - @sveltejs/adapter-netlify@1.0.0-next.41
  - @sveltejs/adapter-vercel@1.0.0-next.39

## 1.0.0-next.12

### Patch Changes

- Updated dependencies [[`49114b9a`](https://github.com/sveltejs/kit/commit/49114b9a37e93335b027865e68fa4d58a0a7a2e5)]:
  - @sveltejs/adapter-netlify@1.0.0-next.40
  - @sveltejs/adapter-vercel@1.0.0-next.38
  - @sveltejs/adapter-cloudflare@1.0.0-next.7

## 1.0.0-next.11

### Patch Changes

- Allow `__fetchPolyfill()` to run several times ([#3377](https://github.com/sveltejs/kit/pull/3377))
- Updated dependencies [[`7569bb27`](https://github.com/sveltejs/kit/commit/7569bb27a640c2bbff6ac02a4c44fdf456bdc227)]:
  - @sveltejs/adapter-netlify@1.0.0-next.39
  - @sveltejs/adapter-vercel@1.0.0-next.37

## 1.0.0-next.10

### Patch Changes

- Updated dependencies [[`e100b426`](https://github.com/sveltejs/kit/commit/e100b4269f159016d7235869d002b8a623d8066b)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.7
  - @sveltejs/adapter-netlify@1.0.0-next.38
  - @sveltejs/adapter-vercel@1.0.0-next.36

## 1.0.0-next.9

### Patch Changes

- Updated dependencies [[`0f6196fd`](https://github.com/sveltejs/kit/commit/0f6196fd52d59b20df661743dee274e0040813b8)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.6

## 1.0.0-next.8

### Patch Changes

- Updated dependencies [[`a34370c1`](https://github.com/sveltejs/kit/commit/a34370c14af0179b0194deae3050330379cf138d)]:
  - @sveltejs/adapter-vercel@1.0.0-next.35
  - @sveltejs/adapter-cloudflare@1.0.0-next.5
  - @sveltejs/adapter-netlify@1.0.0-next.37

## 1.0.0-next.7

### Patch Changes

- Updated dependencies [[`a1c02e15`](https://github.com/sveltejs/kit/commit/a1c02e158ae324953c1588aefeae35eee23280bf)]:
  - @sveltejs/adapter-vercel@1.0.0-next.34

## 1.0.0-next.6

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Updated dependencies [[`ecb423b5`](https://github.com/sveltejs/kit/commit/ecb423b54d459be8c0693c723799be4171369afd), [`ecb423b5`](https://github.com/sveltejs/kit/commit/ecb423b54d459be8c0693c723799be4171369afd), [`c096899f`](https://github.com/sveltejs/kit/commit/c096899f12c96de34811b6f9ebfc1601d39daa2e), [`ecb423b5`](https://github.com/sveltejs/kit/commit/ecb423b54d459be8c0693c723799be4171369afd), [`ecb423b5`](https://github.com/sveltejs/kit/commit/ecb423b54d459be8c0693c723799be4171369afd)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.5
  - @sveltejs/adapter-netlify@1.0.0-next.37
  - @sveltejs/adapter-vercel@1.0.0-next.33

## 1.0.0-next.5

### Patch Changes

- Updated dependencies [[`ad321f8d`](https://github.com/sveltejs/kit/commit/ad321f8d7dadf3f5b874d5aa434776a968e1bc8b)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.4
  - @sveltejs/adapter-netlify@1.0.0-next.36
  - @sveltejs/adapter-vercel@1.0.0-next.32

## 1.0.0-next.4

### Patch Changes

- Updated dependencies [[`318072b7`](https://github.com/sveltejs/kit/commit/318072b786fe018507ae13df6da2f0bb693587e8)]:
  - @sveltejs/adapter-cloudflare@1.0.0-next.3
  - @sveltejs/adapter-netlify@1.0.0-next.36
  - @sveltejs/adapter-vercel@1.0.0-next.32

## 1.0.0-next.3

### Patch Changes

- Remove ANSI codes ([#2897](https://github.com/sveltejs/kit/pull/2897))

* Fix platform detection order ([#2897](https://github.com/sveltejs/kit/pull/2897))

## 1.0.0-next.2

### Patch Changes

- Add missing file to adapter-auto package ([#2891](https://github.com/sveltejs/kit/pull/2891))

## 1.0.0-next.1

### Patch Changes

- Force republish ([#2885](https://github.com/sveltejs/kit/pull/2885))

## 1.0.0-next.0

### Patch Changes

- Add adapter-auto ([#2867](https://github.com/sveltejs/kit/pull/2867))

'''
'''--- packages/adapter-auto/README.md ---
# adapter-auto

Automatically chooses the SvelteKit adapter for your current environment, if possible.

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-auto)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-auto/CHANGELOG.md).

'''
'''--- packages/adapter-cloudflare-workers/CHANGELOG.md ---
# @sveltejs/adapter-cloudflare-workers

## 2.6.0
### Minor Changes

- chore: upgrade esbuild to 0.24.0 ([#12270](https://github.com/sveltejs/kit/pull/12270))

### Patch Changes

- Updated dependencies [[`d030f4bb285e70844d09b3f0c87809bae43014b8`](https://github.com/sveltejs/kit/commit/d030f4bb285e70844d09b3f0c87809bae43014b8), [`67dd214863cbc5852eb0e8512efbb7bad5358e8a`](https://github.com/sveltejs/kit/commit/67dd214863cbc5852eb0e8512efbb7bad5358e8a)]:
  - @sveltejs/kit@2.9.0

## 2.5.6
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 2.5.5
### Patch Changes

- fix: correctly handle relative paths when fetching assets on the server ([#12113](https://github.com/sveltejs/kit/pull/12113))

- Updated dependencies [[`df48fc6ede3859beabaae9fd7c6f722215bb8a42`](https://github.com/sveltejs/kit/commit/df48fc6ede3859beabaae9fd7c6f722215bb8a42), [`5780deba8e3ebd0e2b0abea029068ad0c6daf6ad`](https://github.com/sveltejs/kit/commit/5780deba8e3ebd0e2b0abea029068ad0c6daf6ad), [`6f9aefdb8699fc126d76a88471602cb9a80822eb`](https://github.com/sveltejs/kit/commit/6f9aefdb8699fc126d76a88471602cb9a80822eb), [`8aa95b4b3431e79f62f580abdcdcb157b4de86cd`](https://github.com/sveltejs/kit/commit/8aa95b4b3431e79f62f580abdcdcb157b4de86cd)]:
  - @sveltejs/kit@2.7.0

## 2.5.4
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 2.5.3
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 2.5.2
### Patch Changes

- fix: correctly return static assets if base path is set ([#12075](https://github.com/sveltejs/kit/pull/12075))

## 2.5.1
### Patch Changes

- fix: copy `.eot`, `.otf`, `.ttf`, `.woff`, and `woff2` font files when bundling ([#12439](https://github.com/sveltejs/kit/pull/12439))

## 2.5.0
### Minor Changes

- chore(deps): upgrade to esbuild 0.21 ([#12415](https://github.com/sveltejs/kit/pull/12415))

### Patch Changes

- Updated dependencies [[`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4), [`5645614f497931f587b7cb8b3c885fce892a6a72`](https://github.com/sveltejs/kit/commit/5645614f497931f587b7cb8b3c885fce892a6a72), [`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4)]:
  - @sveltejs/kit@2.5.18

## 2.4.1

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 2.4.0

### Minor Changes

- chore(deps): upgrade esbuild ([#12118](https://github.com/sveltejs/kit/pull/12118))

### Patch Changes

- Updated dependencies [[`bbab296f6fcc05af6b999182798bcdedabbaa4c9`](https://github.com/sveltejs/kit/commit/bbab296f6fcc05af6b999182798bcdedabbaa4c9)]:
  - @sveltejs/kit@2.5.6

## 2.3.0

### Minor Changes

- feat: support platform emulation configuration via the `platformProxy` adapter option ([#12011](https://github.com/sveltejs/kit/pull/12011))

## 2.2.1

### Patch Changes

- fix: add `workerd` to esbuild conditions ([#12069](https://github.com/sveltejs/kit/pull/12069))

## 2.2.0

### Minor Changes

- feat: emulate Cloudflare Workers bindings and incoming request properties in `event.platform` for `dev` and `preview` ([#11974](https://github.com/sveltejs/kit/pull/11974))

### Patch Changes

- Updated dependencies [[`4562275ed42964148df03c79434172024897c08c`](https://github.com/sveltejs/kit/commit/4562275ed42964148df03c79434172024897c08c)]:
  - @sveltejs/kit@2.5.4

## 2.1.0

### Minor Changes

- feat: more helpful errors when using incompatible Node modules ([#11673](https://github.com/sveltejs/kit/pull/11673))

- feat: support compatible node modules without prefixes ([#11672](https://github.com/sveltejs/kit/pull/11672))

- feat: Add Node.js compatibility ([#10544](https://github.com/sveltejs/kit/pull/10544))

### Patch Changes

- Updated dependencies [[`288f731c8a5b20cadb9e219f9583f3f16bf8c7b8`](https://github.com/sveltejs/kit/commit/288f731c8a5b20cadb9e219f9583f3f16bf8c7b8)]:
  - @sveltejs/kit@2.4.0

## 2.0.3

### Patch Changes

- chore: upgrade esbuild to 0.19.11 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 2.0.2

### Patch Changes

- fix: serve static files in `_app` from function, if not already handled ([#11593](https://github.com/sveltejs/kit/pull/11593))

- Updated dependencies [[`553e14c8320ad9c6ebb3c554c35f1482755c9555`](https://github.com/sveltejs/kit/commit/553e14c8320ad9c6ebb3c554c35f1482755c9555), [`48576de0dc8b1fbbab7954113004540ea4e76935`](https://github.com/sveltejs/kit/commit/48576de0dc8b1fbbab7954113004540ea4e76935)]:
  - @sveltejs/kit@2.3.2

## 2.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 2.0.0

### Major Changes

- breaking: require SvelteKit 2 ([#11316](https://github.com/sveltejs/kit/pull/11316))

- chore: upgrade esbuild ([#11122](https://github.com/sveltejs/kit/pull/11122))

### Patch Changes

- fix: declare the adapter plugin options as optional ([#11246](https://github.com/sveltejs/kit/pull/11246))

## 1.2.3

### Patch Changes

- fix: correctly map prerendered pages when base path is set ([#11245](https://github.com/sveltejs/kit/pull/11245))

- Updated dependencies [[`bd383f576`](https://github.com/sveltejs/kit/commit/bd383f576592948a2a96b357118cdc7598a8b61c), [`b6a0be712`](https://github.com/sveltejs/kit/commit/b6a0be712644bca4bbd7bec194c1bff682e39d71), [`ded16305b`](https://github.com/sveltejs/kit/commit/ded16305b4c180a697c457ca1b2bec249b4b38fb), [`15422d21d`](https://github.com/sveltejs/kit/commit/15422d21d08a1484f92490da5dd4b77ca7332c23)]:
  - @sveltejs/kit@1.28.0

## 1.2.2

### Patch Changes

- fix: retain URL query string for trailing slash redirects to prerendered pages ([#11142](https://github.com/sveltejs/kit/pull/11142))

- Updated dependencies [[`a7f8bdcfa`](https://github.com/sveltejs/kit/commit/a7f8bdcfabce5cda85dd073a21d0afb6138a7a08), [`a4d91304e`](https://github.com/sveltejs/kit/commit/a4d91304eebc08bf2e748d83a46d3548a546e3ab)]:
  - @sveltejs/kit@1.27.7

## 1.2.1

### Patch Changes

- fix: correctly check url pathnames for trailing slashes ([#10968](https://github.com/sveltejs/kit/pull/10968))

## 1.2.0

### Minor Changes

- feat: add cloudflare's `request.cf` object to the `event.platform` property ([#10873](https://github.com/sveltejs/kit/pull/10873))

## 1.1.4

### Patch Changes

- fix: mark `cloudflare:` packages as external ([#10404](https://github.com/sveltejs/kit/pull/10404))

- Updated dependencies [[`0f0049810`](https://github.com/sveltejs/kit/commit/0f00498100361ef0a4ea8b0b4e8465e442fa22a6), [`6f36aefe1`](https://github.com/sveltejs/kit/commit/6f36aefe13bf55cfaef14166c60ecee989061ddd)]:
  - @sveltejs/kit@1.22.4

## 1.1.3

### Patch Changes

- chore: upgrade to esbuild 0.18.11 ([#10330](https://github.com/sveltejs/kit/pull/10330))

- Updated dependencies [[`23d1df702`](https://github.com/sveltejs/kit/commit/23d1df702f0fd77983040404352d8d83fd1dd8a1), [`486a971fe`](https://github.com/sveltejs/kit/commit/486a971fe7c375aae1585f1fa2505e28f86f4b8e)]:
  - @sveltejs/kit@1.22.2

## 1.1.2

### Patch Changes

- fix: Copy .wasm files during build ([#9940](https://github.com/sveltejs/kit/pull/9940))

- Updated dependencies [[`50acb22ca`](https://github.com/sveltejs/kit/commit/50acb22caf2901283e044cdfda36db6f07b3e0ae), [`2e6da9496`](https://github.com/sveltejs/kit/commit/2e6da9496bdace2c65040b9d1845c44801ca868c), [`a81106b3a`](https://github.com/sveltejs/kit/commit/a81106b3a817829c41e048207d6253e63988c58c), [`a6338a0b1`](https://github.com/sveltejs/kit/commit/a6338a0b124f54bda7ba3fe64be1d6173e118d00), [`4a85b7f08`](https://github.com/sveltejs/kit/commit/4a85b7f0820d35c7830c00afe1df3c94fcbf8c3d), [`26d2b7f8f`](https://github.com/sveltejs/kit/commit/26d2b7f8f5ca29c60ef61b936ff86deaeb1636ce), [`bc70b4e63`](https://github.com/sveltejs/kit/commit/bc70b4e636fcbd9593356996bf737e014ff8c238), [`ab9f57721`](https://github.com/sveltejs/kit/commit/ab9f57721fca146af7c4eb41f4875fafa5dfc0d2)]:
  - @sveltejs/kit@1.17.0

## 1.1.1

### Patch Changes

- chore: update all dependencies with minor version bumps ([#9761](https://github.com/sveltejs/kit/pull/9761))

## 1.1.0

### Minor Changes

- feat: use `es2022` target ([#9293](https://github.com/sveltejs/kit/pull/9293))

### Patch Changes

- Updated dependencies [[`2b647fd8`](https://github.com/sveltejs/kit/commit/2b647fd85be028bc5775894567ee8b13f91411a7), [`fbe4fe76`](https://github.com/sveltejs/kit/commit/fbe4fe768140abac09bd66edd12c77787cafc2c5), [`744dc81c`](https://github.com/sveltejs/kit/commit/744dc81c6b0d8cade087df733c6d3d3f1281e68c)]:
  - @sveltejs/kit@1.10.0

## 1.0.6

### Patch Changes

- feat: expose `App.Platform` interface automatically ([#8531](https://github.com/sveltejs/kit/pull/8531))

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

- fix: amend `App.Platform` ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.5

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.0.4

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.3

### Patch Changes

- fix: don't load ambient worker types ([#8483](https://github.com/sveltejs/kit/pull/8483))

## 1.0.2

### Patch Changes

- docs: add note about inability to access file system at runtime ([#8441](https://github.com/sveltejs/kit/pull/8441))

- Updated dependencies [[`9c01c32e`](https://github.com/sveltejs/kit/commit/9c01c32ef72bbed630fadcb8283f8f8533ced5e1), [`b6ca02a6`](https://github.com/sveltejs/kit/commit/b6ca02a684dbf13a3138b552e2d2be64697f2254), [`130abe43`](https://github.com/sveltejs/kit/commit/130abe43cef2cfbaf922aa16b20cbd4332a07c15), [`c4137536`](https://github.com/sveltejs/kit/commit/c4137536f2c6572eaeec1a82ccea0852f5be6b98), [`40464efa`](https://github.com/sveltejs/kit/commit/40464efab172a17f0b637d7dadea30d77ef1ed10), [`ce028470`](https://github.com/sveltejs/kit/commit/ce0284708184198efdd30f3ff72fd579cef830b4)]:
  - @sveltejs/kit@1.0.12

## 1.0.1

### Patch Changes

- chore: update @cloudflare/kv-asset-handler ([`30e1130e`](https://github.com/sveltejs/kit/commit/30e1130ef84e56a77be5cb1136d5c53edef6e5f9))
- Updated dependencies [[`fab0de4f`](https://github.com/sveltejs/kit/commit/fab0de4f06ac5b1e9b049e106889b193975c1c29), [`89b8d94b`](https://github.com/sveltejs/kit/commit/89b8d94b1b20d586e1ca525c30d07587c3f2d8f2)]:
  - @sveltejs/kit@1.0.2

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.65

### Patch Changes

- breaking: remove warnings/errors about removed/changed APIs ([#8019](https://github.com/sveltejs/kit/pull/8019))
- Updated dependencies [[`f42604a2`](https://github.com/sveltejs/kit/commit/f42604a2b4c04026d3d8bad95807720b79529539)]:
  - @sveltejs/kit@1.0.0-next.589

## 1.0.0-next.64

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.63

### Patch Changes

- fix: revert platform change from browser to neutral ([#8122](https://github.com/sveltejs/kit/pull/8122))

## 1.0.0-next.62

### Patch Changes

- fix: set esbuild platform to neutral ([#8083](https://github.com/sveltejs/kit/pull/8083))

## 1.0.0-next.61

### Patch Changes

- update esbuild to ^0.16.3 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.60

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.59

### Patch Changes

- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.58

### Patch Changes

- Add config option to set custom `wrangler.toml` file name ([#7104](https://github.com/sveltejs/kit/pull/7104))

## 1.0.0-next.57

### Patch Changes

- Include ambient.d.ts files in adapter packages. ([#6917](https://github.com/sveltejs/kit/pull/6917))

## 1.0.0-next.56

### Patch Changes

- chore: bump esbuild ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 1.0.0-next.55

### Patch Changes

- Update to esbuild 0.15 ([#6740](https://github.com/sveltejs/kit/pull/6740))

## 1.0.0-next.54

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.53

### Patch Changes

- expose caches on platform ([#5887](https://github.com/sveltejs/kit/pull/5887))

## 1.0.0-next.52

### Patch Changes

- Initialise `env` ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.51

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.50

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.49

### Patch Changes

- breaking: Don't pass arbitrary options to esbuild ([#4639](https://github.com/sveltejs/kit/pull/4639))

## 1.0.0-next.48

### Patch Changes

- Expose App interfaces ([#5386](https://github.com/sveltejs/kit/pull/5386))

## 1.0.0-next.47

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.46

### Patch Changes

- Generate sourcemaps for server-side functions when bundling with esbuild ([#5258](https://github.com/sveltejs/kit/pull/5258))

## 1.0.0-next.45

### Patch Changes

- Simplify example wrangler.toml, and fix outdated README ([#5187](https://github.com/sveltejs/kit/pull/5187))

## 1.0.0-next.44

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.43

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.42

### Patch Changes

- only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.41

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.40

### Patch Changes

- breaking: support Wrangler 2, drop Wrangler 1 ([#4887](https://github.com/sveltejs/kit/pull/4887))

## 1.0.0-next.39

### Patch Changes

- breaking: Remove try-catch around server.respond ([#4738](https://github.com/sveltejs/kit/pull/4738))

## 1.0.0-next.38

### Patch Changes

- - Fix an issue related to prerendered pages incorrectly resolving in @sveltejs/adapter-cloudflare-workers ([#4626](https://github.com/sveltejs/kit/pull/4626))

## 1.0.0-next.37

### Patch Changes

- Breaking: refactor implementation from "Service Worker" pattern to "Module Worker" used in adapter-cloudflare ([#4276](https://github.com/sveltejs/kit/pull/4276))

  #### add the following to your wrangler.toml

  ```toml
  		[build.upload]
  		format = "modules"
  		main = "./worker.mjs"
  ```

## 1.0.0-next.36

### Patch Changes

- Provide getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.35

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.34

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))

## 1.0.0-next.33

### Patch Changes

- revert change to Cloudflare ES target version ([#3847](https://github.com/sveltejs/kit/pull/3847))

## 1.0.0-next.32

### Patch Changes

- Fix Cloudflare adapter targets ([#3827](https://github.com/sveltejs/kit/pull/3827))

## 1.0.0-next.31

### Patch Changes

- update to Vite 2.8 and esbuild 0.14 ([#3791](https://github.com/sveltejs/kit/pull/3791))

## 1.0.0-next.30

### Patch Changes

- Breaking: change app.render signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.29

### Patch Changes

- Add immutable cache headers to generated assets ([#3222](https://github.com/sveltejs/kit/pull/3222))

## 1.0.0-next.28

### Patch Changes

- use path/posix to resolve relative paths for esmodules ([#3212](https://github.com/sveltejs/kit/pull/3212))

## 1.0.0-next.27

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Remove esbuild options ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Update adapters to provide app.render with a url ([#3133](https://github.com/sveltejs/kit/pull/3133))

## 1.0.0-next.26

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.25

### Patch Changes

- chore: upgrade `@cloudflare/kv-asset-handler` ([#2650](https://github.com/sveltejs/kit/pull/2650))

## 1.0.0-next.24

### Patch Changes

- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))

## 1.0.0-next.23

### Patch Changes

- update to vite 2.6.0 and esbuild 0.13 ([#2522](https://github.com/sveltejs/kit/pull/2522))

## 1.0.0-next.22

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.21

### Patch Changes

- chore: export package.json from adapters ([#2351](https://github.com/sveltejs/kit/pull/2351))

## 1.0.0-next.20

### Patch Changes

- Support assigning multiple values to a header ([#2313](https://github.com/sveltejs/kit/pull/2313))

## 1.0.0-next.19

### Patch Changes

- Ensure the raw body is an Uint8Array before passing it to request handlers ([#2215](https://github.com/sveltejs/kit/pull/2215))

## 1.0.0-next.18

### Patch Changes

- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))

## 1.0.0-next.17

### Patch Changes

- e9f78999: fix: include esbuild config in adapter type definition ([#1954](https://github.com/sveltejs/kit/pull/1954))

## 1.0.0-next.16

### Patch Changes

- e6995797: feat(adapters): expose esbuild configuration ([#1914](https://github.com/sveltejs/kit/pull/1914))

## 1.0.0-next.15

### Patch Changes

- 4720b67: Default body parsing to binary ([#1890](https://github.com/sveltejs/kit/pull/1890))

## 1.0.0-next.14

### Patch Changes

- 7faf52f: Update and consolidate checks for binary body types ([#1687](https://github.com/sveltejs/kit/pull/1687))

## 1.0.0-next.13

### Patch Changes

- 9f0c54a: Externalize app initialization to adapters ([#1804](https://github.com/sveltejs/kit/pull/1804))

## 1.0.0-next.12

### Patch Changes

- c51ab7d: Upgrade esbuild to ^0.12.5 ([#1627](https://github.com/sveltejs/kit/pull/1627))

## 1.0.0-next.11

### Patch Changes

- edc307d: Remove peerDependencies due to pnpm bug ([#1621](https://github.com/sveltejs/kit/pull/1621))
- 2636e68: Attempt to fix peerDependencies specification ([#1620](https://github.com/sveltejs/kit/pull/1620))

## 1.0.0-next.10

### Patch Changes

- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))
- Updated dependencies [6372690]
- Updated dependencies [c3d36a3]
- Updated dependencies [bf77940]
- Updated dependencies [2172469]
- Updated dependencies [028abd9]
  - @sveltejs/kit@1.0.0-next.110

## 1.0.0-next.9

### Patch Changes

- 71e293d: change toml parser to support dotted keys and other language features added after the TOML v0.4.0 spec ([#1509](https://github.com/sveltejs/kit/pull/1509))
- dca4946: Make kit a peerDependency of the adapters ([#1505](https://github.com/sveltejs/kit/pull/1505))
- Updated dependencies [261ee1c]
- Updated dependencies [ec156c6]
- Updated dependencies [586785d]
  - @sveltejs/kit@1.0.0-next.109

## 1.0.0-next.8

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))

## 1.0.0-next.7

### Patch Changes

- 11e7840: Ensure rawBody is a string or Uint8Array ([#1382](https://github.com/sveltejs/kit/pull/1382))

## 0.0.2-next.6

### Patch Changes

- c6fde99: Convert to ESM ([#1323](https://github.com/sveltejs/kit/pull/1323))

## 0.0.2-next.5

### Patch Changes

- 9e67505: Add es2020 target to esbuild function to solve Unexpected character '#' error ([#1287](https://github.com/sveltejs/kit/pull/1287))

## 0.0.2-next.4

### Patch Changes

- 2e72a94: Add type declarations ([#1230](https://github.com/sveltejs/kit/pull/1230))

## 0.0.2-next.3

### Patch Changes

- b372d61: Generate required package.json ([#1116](https://github.com/sveltejs/kit/pull/1116))

## 0.0.2-next.2

### Patch Changes

- 1237eb3: Pass rawBody to SvelteKit, bundle worker with esbuild ([#1109](https://github.com/sveltejs/kit/pull/1109))

## 0.0.2-next.1

### Patch Changes

- 4325b39: Aligns request/response API of cloudflare-workers adapter with others ([#946](https://github.com/sveltejs/kit/pull/946))

## 0.0.2-next.0

### Patch Changes

- e890031: Fix dev/prod deps (oops) ([#749](https://github.com/sveltejs/kit/pull/749))

'''
'''--- packages/adapter-cloudflare-workers/README.md ---
# adapter-cloudflare-workers

SvelteKit adapter that creates a Cloudflare Workers site using a function for dynamic server rendering.

**Requires [Wrangler v2](https://developers.cloudflare.com/workers/wrangler/get-started/).** Wrangler v1 is no longer supported.

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-cloudflare-workers)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-cloudflare-workers/CHANGELOG.md).

'''
'''--- packages/adapter-cloudflare/CHANGELOG.md ---
# @sveltejs/adapter-cloudflare

## 4.8.0
### Minor Changes

- chore: upgrade esbuild to 0.24.0 ([#12270](https://github.com/sveltejs/kit/pull/12270))

### Patch Changes

- Updated dependencies [[`d030f4bb285e70844d09b3f0c87809bae43014b8`](https://github.com/sveltejs/kit/commit/d030f4bb285e70844d09b3f0c87809bae43014b8), [`67dd214863cbc5852eb0e8512efbb7bad5358e8a`](https://github.com/sveltejs/kit/commit/67dd214863cbc5852eb0e8512efbb7bad5358e8a)]:
  - @sveltejs/kit@2.9.0

## 4.7.4
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 4.7.3
### Patch Changes

- fix: correctly handle relative paths when fetching assets on the server ([#12113](https://github.com/sveltejs/kit/pull/12113))

- Updated dependencies [[`df48fc6ede3859beabaae9fd7c6f722215bb8a42`](https://github.com/sveltejs/kit/commit/df48fc6ede3859beabaae9fd7c6f722215bb8a42), [`5780deba8e3ebd0e2b0abea029068ad0c6daf6ad`](https://github.com/sveltejs/kit/commit/5780deba8e3ebd0e2b0abea029068ad0c6daf6ad), [`6f9aefdb8699fc126d76a88471602cb9a80822eb`](https://github.com/sveltejs/kit/commit/6f9aefdb8699fc126d76a88471602cb9a80822eb), [`8aa95b4b3431e79f62f580abdcdcb157b4de86cd`](https://github.com/sveltejs/kit/commit/8aa95b4b3431e79f62f580abdcdcb157b4de86cd)]:
  - @sveltejs/kit@2.7.0

## 4.7.2
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 4.7.1
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 4.7.0
### Minor Changes

- feat: generate static `_redirects` for Cloudflare Pages ([#12199](https://github.com/sveltejs/kit/pull/12199))

### Patch Changes

- fix: correctly return static assets if base path is set ([#12075](https://github.com/sveltejs/kit/pull/12075))

## 4.6.1
### Patch Changes

- fix: copy `.eot`, `.otf`, `.ttf`, `.woff`, and `woff2` font files when bundling ([#12439](https://github.com/sveltejs/kit/pull/12439))

## 4.6.0
### Minor Changes

- chore(deps): upgrade to esbuild 0.21 ([#12415](https://github.com/sveltejs/kit/pull/12415))

### Patch Changes

- Updated dependencies [[`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4), [`5645614f497931f587b7cb8b3c885fce892a6a72`](https://github.com/sveltejs/kit/commit/5645614f497931f587b7cb8b3c885fce892a6a72), [`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4)]:
  - @sveltejs/kit@2.5.18

## 4.5.0

### Minor Changes

- feat: validate that no `_routes.json` is present to avoid overwriting it ([#12360](https://github.com/sveltejs/kit/pull/12360))

### Patch Changes

- Updated dependencies [[`121836fcbf6c615fd18c79a12203613ddbe49acf`](https://github.com/sveltejs/kit/commit/121836fcbf6c615fd18c79a12203613ddbe49acf)]:
  - @sveltejs/kit@2.5.17

## 4.4.1

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 4.4.0

### Minor Changes

- chore(deps): upgrade esbuild ([#12118](https://github.com/sveltejs/kit/pull/12118))

### Patch Changes

- Updated dependencies [[`bbab296f6fcc05af6b999182798bcdedabbaa4c9`](https://github.com/sveltejs/kit/commit/bbab296f6fcc05af6b999182798bcdedabbaa4c9)]:
  - @sveltejs/kit@2.5.6

## 4.3.0

### Minor Changes

- feat: support platform emulation configuration via the `platformProxy` adapter option ([#12011](https://github.com/sveltejs/kit/pull/12011))

## 4.2.1

### Patch Changes

- fix: add `workerd` to esbuild conditions ([#12069](https://github.com/sveltejs/kit/pull/12069))

## 4.2.0

### Minor Changes

- feat: emulate Cloudflare Workers bindings and incoming request properties in `event.platform` for `dev` and `preview` ([#11974](https://github.com/sveltejs/kit/pull/11974))

### Patch Changes

- Updated dependencies [[`4562275ed42964148df03c79434172024897c08c`](https://github.com/sveltejs/kit/commit/4562275ed42964148df03c79434172024897c08c)]:
  - @sveltejs/kit@2.5.4

## 4.1.0

### Minor Changes

- feat: more helpful errors when using incompatible Node modules ([#11673](https://github.com/sveltejs/kit/pull/11673))

- feat: support compatible node modules without prefixes ([#11672](https://github.com/sveltejs/kit/pull/11672))

- feat: Add Node.js compatibility ([#10544](https://github.com/sveltejs/kit/pull/10544))

### Patch Changes

- Updated dependencies [[`288f731c8a5b20cadb9e219f9583f3f16bf8c7b8`](https://github.com/sveltejs/kit/commit/288f731c8a5b20cadb9e219f9583f3f16bf8c7b8)]:
  - @sveltejs/kit@2.4.0

## 4.0.2

### Patch Changes

- chore(deps): update dependency worktop to v0.8.0-next.18 ([#11618](https://github.com/sveltejs/kit/pull/11618))

## 4.0.1

### Patch Changes

- chore: upgrade esbuild to 0.19.11 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 4.0.0

### Major Changes

- breaking: generate plaintext 404.html instead of SPA-style fallback page ([#11596](https://github.com/sveltejs/kit/pull/11596))

### Patch Changes

- Updated dependencies [[`2137717ea8592c310ada93490feabbd9eea125ea`](https://github.com/sveltejs/kit/commit/2137717ea8592c310ada93490feabbd9eea125ea)]:
  - @sveltejs/kit@2.3.3

## 3.0.2

### Patch Changes

- fix: serve static files in `_app` from function, if not already handled ([#11593](https://github.com/sveltejs/kit/pull/11593))

- Updated dependencies [[`553e14c8320ad9c6ebb3c554c35f1482755c9555`](https://github.com/sveltejs/kit/commit/553e14c8320ad9c6ebb3c554c35f1482755c9555), [`48576de0dc8b1fbbab7954113004540ea4e76935`](https://github.com/sveltejs/kit/commit/48576de0dc8b1fbbab7954113004540ea4e76935)]:
  - @sveltejs/kit@2.3.2

## 3.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 3.0.0

### Major Changes

- breaking: require SvelteKit 2 ([#11316](https://github.com/sveltejs/kit/pull/11316))

- chore: upgrade esbuild ([#11122](https://github.com/sveltejs/kit/pull/11122))

## 2.3.4

### Patch Changes

- fix: retain URL query string for trailing slash redirects to prerendered pages ([#11142](https://github.com/sveltejs/kit/pull/11142))

- Updated dependencies [[`a7f8bdcfa`](https://github.com/sveltejs/kit/commit/a7f8bdcfabce5cda85dd073a21d0afb6138a7a08), [`a4d91304e`](https://github.com/sveltejs/kit/commit/a4d91304eebc08bf2e748d83a46d3548a546e3ab)]:
  - @sveltejs/kit@1.27.7

## 2.3.3

### Patch Changes

- fix: correctly include `config.kit.paths.base` ([#10604](https://github.com/sveltejs/kit/pull/10604))

- Updated dependencies [[`7c37a2fb3`](https://github.com/sveltejs/kit/commit/7c37a2fb3bff0f47f817bc8049b454abe591b8a0), [`998fe2f19`](https://github.com/sveltejs/kit/commit/998fe2f19833df4ffc08f29e924cc8e1591f7734), [`23721d1fb`](https://github.com/sveltejs/kit/commit/23721d1fbed04083069f07c068289282819ff4cb), [`32afba695`](https://github.com/sveltejs/kit/commit/32afba695088b946aefe96da75b36de9b0667fbe)]:
  - @sveltejs/kit@1.23.0

## 2.3.2

### Patch Changes

- fix: mark `cloudflare:` packages as external ([#10404](https://github.com/sveltejs/kit/pull/10404))

- Updated dependencies [[`0f0049810`](https://github.com/sveltejs/kit/commit/0f00498100361ef0a4ea8b0b4e8465e442fa22a6), [`6f36aefe1`](https://github.com/sveltejs/kit/commit/6f36aefe13bf55cfaef14166c60ecee989061ddd)]:
  - @sveltejs/kit@1.22.4

## 2.3.1

### Patch Changes

- chore: upgrade to esbuild 0.18.11 ([#10330](https://github.com/sveltejs/kit/pull/10330))

- Updated dependencies [[`23d1df702`](https://github.com/sveltejs/kit/commit/23d1df702f0fd77983040404352d8d83fd1dd8a1), [`486a971fe`](https://github.com/sveltejs/kit/commit/486a971fe7c375aae1585f1fa2505e28f86f4b8e)]:
  - @sveltejs/kit@1.22.2

## 2.3.0

### Minor Changes

- feat: add cloudflare's `request.cf` object to the `event.platform` property ([#9978](https://github.com/sveltejs/kit/pull/9978))

### Patch Changes

- Updated dependencies [[`4aa976e50`](https://github.com/sveltejs/kit/commit/4aa976e5018664ee333629c5f2f6edacab9d868a), [`c1d34584f`](https://github.com/sveltejs/kit/commit/c1d34584f2404b9c80a547c8138264cac2a813b6), [`1c0423b65`](https://github.com/sveltejs/kit/commit/1c0423b655b7d5909e405d9d15025dc75e71a04f), [`7499d8f31`](https://github.com/sveltejs/kit/commit/7499d8f31195473d2c955f1280e097ac95995efa), [`81af6baf9`](https://github.com/sveltejs/kit/commit/81af6baf9b6f6e8f14212958eb393677db09320a), [`86dd16cc1`](https://github.com/sveltejs/kit/commit/86dd16cc10c35c4b723a4e7f77e654452aa0965e), [`195e9ac22`](https://github.com/sveltejs/kit/commit/195e9ac2233776ecf1aff7dadbadd7226f68e8dd)]:
  - @sveltejs/kit@1.19.0

## 2.2.4

### Patch Changes

- fix: require explicit cache-control header for caching ([#9885](https://github.com/sveltejs/kit/pull/9885))

## 2.2.3

### Patch Changes

- fix: Copy .wasm files during build ([#9909](https://github.com/sveltejs/kit/pull/9909))

- Updated dependencies [[`50acb22ca`](https://github.com/sveltejs/kit/commit/50acb22caf2901283e044cdfda36db6f07b3e0ae), [`2e6da9496`](https://github.com/sveltejs/kit/commit/2e6da9496bdace2c65040b9d1845c44801ca868c), [`a81106b3a`](https://github.com/sveltejs/kit/commit/a81106b3a817829c41e048207d6253e63988c58c), [`a6338a0b1`](https://github.com/sveltejs/kit/commit/a6338a0b124f54bda7ba3fe64be1d6173e118d00), [`4a85b7f08`](https://github.com/sveltejs/kit/commit/4a85b7f0820d35c7830c00afe1df3c94fcbf8c3d), [`26d2b7f8f`](https://github.com/sveltejs/kit/commit/26d2b7f8f5ca29c60ef61b936ff86deaeb1636ce), [`bc70b4e63`](https://github.com/sveltejs/kit/commit/bc70b4e636fcbd9593356996bf737e014ff8c238), [`ab9f57721`](https://github.com/sveltejs/kit/commit/ab9f57721fca146af7c4eb41f4875fafa5dfc0d2)]:
  - @sveltejs/kit@1.17.0

## 2.2.2

### Patch Changes

- fix: respect response status code for caching in `adapter-cloudflare` ([#9820](https://github.com/sveltejs/kit/pull/9820))

## 2.2.1

### Patch Changes

- chore: update all dependencies with minor version bumps ([#9761](https://github.com/sveltejs/kit/pull/9761))

## 2.2.0

### Minor Changes

- feat: generate `404.html` ([#9294](https://github.com/sveltejs/kit/pull/9294))

- feat: use `es2022` target ([#9293](https://github.com/sveltejs/kit/pull/9293))

### Patch Changes

- Updated dependencies [[`2b647fd8`](https://github.com/sveltejs/kit/commit/2b647fd85be028bc5775894567ee8b13f91411a7), [`fbe4fe76`](https://github.com/sveltejs/kit/commit/fbe4fe768140abac09bd66edd12c77787cafc2c5), [`744dc81c`](https://github.com/sveltejs/kit/commit/744dc81c6b0d8cade087df733c6d3d3f1281e68c)]:
  - @sveltejs/kit@1.10.0

## 2.1.0

### Minor Changes

- feat: allow custom `include` and `exclude` rules in `_routes.json` ([#9111](https://github.com/sveltejs/kit/pull/9111))

## 2.0.2

### Patch Changes

- fix: exclude `_headers` and `_redirects` files from Cloudflare Pages static request list ([#9042](https://github.com/sveltejs/kit/pull/9042))

- fix: remove redundant cloudflare worker static asset serving ([#9040](https://github.com/sveltejs/kit/pull/9040))

- Updated dependencies [[`19c0e62a`](https://github.com/sveltejs/kit/commit/19c0e62a6bd281e656061b453973c35fa2dd9d3d)]:
  - @sveltejs/kit@1.5.7

## 2.0.1

### Patch Changes

- fix: correctly check URL pathname with Cloudflare adapter ([#8733](https://github.com/sveltejs/kit/pull/8733))

- Updated dependencies [[`eba8fb09`](https://github.com/sveltejs/kit/commit/eba8fb0929b35edea1ca7867b816abd184d8f8f7), [`c14f3aeb`](https://github.com/sveltejs/kit/commit/c14f3aeb32f3e78c8454e9b89f85a0650b7683c4)]:
  - @sveltejs/kit@1.3.6

## 2.0.0

### Major Changes

- breaking: append `_headers` instead of overwriting ([#8693](https://github.com/sveltejs/kit/pull/8693))

## 1.1.0

### Minor Changes

- feat: include as many static assets as possible in exclude list ([#8422](https://github.com/sveltejs/kit/pull/8422))

### Patch Changes

- Updated dependencies [[`06a56ae5`](https://github.com/sveltejs/kit/commit/06a56ae587795113b17fec559ab49c93f40861e8), [`06a56ae5`](https://github.com/sveltejs/kit/commit/06a56ae587795113b17fec559ab49c93f40861e8), [`2726e7c2`](https://github.com/sveltejs/kit/commit/2726e7c2d6d086e6200f9edecbeecf0d38eef873)]:
  - @sveltejs/kit@1.2.0

## 1.0.4

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.3

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.2

### Patch Changes

- fix: don't load ambient worker types ([#8483](https://github.com/sveltejs/kit/pull/8483))

## 1.0.1

### Patch Changes

- docs: add note about inability to access file system at runtime ([#8441](https://github.com/sveltejs/kit/pull/8441))

- Updated dependencies [[`9c01c32e`](https://github.com/sveltejs/kit/commit/9c01c32ef72bbed630fadcb8283f8f8533ced5e1), [`b6ca02a6`](https://github.com/sveltejs/kit/commit/b6ca02a684dbf13a3138b552e2d2be64697f2254), [`130abe43`](https://github.com/sveltejs/kit/commit/130abe43cef2cfbaf922aa16b20cbd4332a07c15), [`c4137536`](https://github.com/sveltejs/kit/commit/c4137536f2c6572eaeec1a82ccea0852f5be6b98), [`40464efa`](https://github.com/sveltejs/kit/commit/40464efab172a17f0b637d7dadea30d77ef1ed10), [`ce028470`](https://github.com/sveltejs/kit/commit/ce0284708184198efdd30f3ff72fd579cef830b4)]:
  - @sveltejs/kit@1.0.12

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.45

### Patch Changes

- breaking: remove warnings/errors about removed/changed APIs ([#8019](https://github.com/sveltejs/kit/pull/8019))
- Updated dependencies [[`f42604a2`](https://github.com/sveltejs/kit/commit/f42604a2b4c04026d3d8bad95807720b79529539)]:
  - @sveltejs/kit@1.0.0-next.589

## 1.0.0-next.44

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.43

### Patch Changes

- fix: revert platform change from browser to neutral ([#8122](https://github.com/sveltejs/kit/pull/8122))

## 1.0.0-next.42

### Patch Changes

- fix: set esbuild platform to neutral ([#8083](https://github.com/sveltejs/kit/pull/8083))

## 1.0.0-next.41

### Patch Changes

- update esbuild to ^0.16.3 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.40

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.39

### Patch Changes

- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.38

### Patch Changes

- Ensure all excluded paths in `_routes.json` start with / ([#6952](https://github.com/sveltejs/kit/pull/6952))

## 1.0.0-next.37

### Patch Changes

- Support Cloudflare Pages `_routes.json` specification ([#6530](https://github.com/sveltejs/kit/pull/6530))

## 1.0.0-next.36

### Patch Changes

- Include ambient.d.ts files in adapter packages. ([#6917](https://github.com/sveltejs/kit/pull/6917))

## 1.0.0-next.35

### Patch Changes

- fix: return 404 instead of 200 for missing assets ([#6879](https://github.com/sveltejs/kit/pull/6879))

## 1.0.0-next.34

### Patch Changes

- chore: bump esbuild ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 1.0.0-next.33

### Patch Changes

- Update to esbuild 0.15 ([#6740](https://github.com/sveltejs/kit/pull/6740))

## 1.0.0-next.32

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.31

### Patch Changes

- Initialise `env` ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.30

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.29

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.28

### Patch Changes

- breaking: Don't pass arbitrary options to esbuild ([#4639](https://github.com/sveltejs/kit/pull/4639))

## 1.0.0-next.27

### Patch Changes

- Expose App interfaces ([#5386](https://github.com/sveltejs/kit/pull/5386))

## 1.0.0-next.26

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.25

### Patch Changes

- Expose Cloudflare Worker Cache API through `caches` in Platform ([#5081](https://github.com/sveltejs/kit/pull/5081))

## 1.0.0-next.24

### Patch Changes

- Generate sourcemaps for server-side functions when bundling with esbuild ([#5258](https://github.com/sveltejs/kit/pull/5258))

## 1.0.0-next.23

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.22

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.21

### Patch Changes

- only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.20

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.19

### Patch Changes

- breaking: Remove try-catch around server.respond ([#4738](https://github.com/sveltejs/kit/pull/4738))

## 1.0.0-next.18

### Patch Changes

- chore: more restrictive cache lookup & save conditions ([#4669](https://github.com/sveltejs/kit/pull/4669))

## 1.0.0-next.17

### Patch Changes

- Check for Cache match sooner; use `worktop` for types & Cache operations ([#4453](https://github.com/sveltejs/kit/pull/4453))
- Add cloudflare cache to store responses with a cache header. ([#4412](https://github.com/sveltejs/kit/pull/4412))

## 1.0.0-next.16

### Patch Changes

- Provide getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.15

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.14

### Patch Changes

- Bumping versions again ([#4090](https://github.com/sveltejs/kit/pull/4090))

## 1.0.0-next.13

### Patch Changes

- Attempt to force @next version bump ([#4088](https://github.com/sveltejs/kit/pull/4088))

## 1.0.0-next.12

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))

## 1.0.0-next.11

### Patch Changes

- Add `context` to `event.platform` object ([#3868](https://github.com/sveltejs/kit/pull/3868))

## 1.0.0-next.10

### Patch Changes

- update to Vite 2.8 and esbuild 0.14 ([#3791](https://github.com/sveltejs/kit/pull/3791))

## 1.0.0-next.9

### Patch Changes

- Pass `env` object to SvelteKit via `platform` ([#3429](https://github.com/sveltejs/kit/pull/3429))

## 1.0.0-next.8

### Patch Changes

- Breaking: change app.render signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.7

### Patch Changes

- Add immutable cache headers to generated assets ([#3222](https://github.com/sveltejs/kit/pull/3222))

## 1.0.0-next.6

### Patch Changes

- use posix to resolve relative path ([#3214](https://github.com/sveltejs/kit/pull/3214))

## 1.0.0-next.5

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Remove esbuild options ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Update adapters to provide app.render with a url ([#3133](https://github.com/sveltejs/kit/pull/3133))

## 1.0.0-next.4

### Patch Changes

- Updated Cloudflare adapter to allow static files with spaces (eg. "Example File.pdf") to be accessed. ([#3047](https://github.com/sveltejs/kit/pull/3047))

## 1.0.0-next.3

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.2

### Patch Changes

- Allow `npm publish` to succeed via `publishConfig.access` config ([#2834](https://github.com/sveltejs/kit/pull/2834))

## 1.0.0-next.1

### Patch Changes

- Add new `adapter-cloudflare` package for Cloudflare Pages with Workers integration ([#2815](https://github.com/sveltejs/kit/pull/2815))

## 1.0.0-next.0

- Initial release

'''
'''--- packages/adapter-cloudflare/README.md ---
# adapter-cloudflare

[Adapter](https://svelte.dev/docs/kit/building-your-app) for building SvelteKit applications on [Cloudflare Pages](https://developers.cloudflare.com/pages/) with [Workers integration](https://developers.cloudflare.com/pages/platform/functions).

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-cloudflare)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-cloudflare/CHANGELOG.md).

'''
'''--- packages/adapter-netlify/CHANGELOG.md ---
# @sveltejs/adapter-netlify

## 4.4.0
### Minor Changes

- chore: upgrade esbuild to 0.24.0 ([#12270](https://github.com/sveltejs/kit/pull/12270))

### Patch Changes

- Updated dependencies [[`d030f4bb285e70844d09b3f0c87809bae43014b8`](https://github.com/sveltejs/kit/commit/d030f4bb285e70844d09b3f0c87809bae43014b8), [`67dd214863cbc5852eb0e8512efbb7bad5358e8a`](https://github.com/sveltejs/kit/commit/67dd214863cbc5852eb0e8512efbb7bad5358e8a)]:
  - @sveltejs/kit@2.9.0

## 4.3.6
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 4.3.5
### Patch Changes

- fix: correctly handle relative paths when fetching assets on the server ([#12113](https://github.com/sveltejs/kit/pull/12113))

- Updated dependencies [[`df48fc6ede3859beabaae9fd7c6f722215bb8a42`](https://github.com/sveltejs/kit/commit/df48fc6ede3859beabaae9fd7c6f722215bb8a42), [`5780deba8e3ebd0e2b0abea029068ad0c6daf6ad`](https://github.com/sveltejs/kit/commit/5780deba8e3ebd0e2b0abea029068ad0c6daf6ad), [`6f9aefdb8699fc126d76a88471602cb9a80822eb`](https://github.com/sveltejs/kit/commit/6f9aefdb8699fc126d76a88471602cb9a80822eb), [`8aa95b4b3431e79f62f580abdcdcb157b4de86cd`](https://github.com/sveltejs/kit/commit/8aa95b4b3431e79f62f580abdcdcb157b4de86cd)]:
  - @sveltejs/kit@2.7.0

## 4.3.4
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

- Updated dependencies [[`e798ef718f163bed4f93e1918bd8294f765376ad`](https://github.com/sveltejs/kit/commit/e798ef718f163bed4f93e1918bd8294f765376ad)]:
  - @sveltejs/kit@2.5.28

## 4.3.3
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 4.3.2
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 4.3.1
### Patch Changes

- fix: copy `.eot`, `.otf`, `.ttf`, `.woff`, and `woff2` font files when bundling ([#12439](https://github.com/sveltejs/kit/pull/12439))

## 4.3.0
### Minor Changes

- chore(deps): upgrade to esbuild 0.21 ([#12415](https://github.com/sveltejs/kit/pull/12415))

### Patch Changes

- Updated dependencies [[`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4), [`5645614f497931f587b7cb8b3c885fce892a6a72`](https://github.com/sveltejs/kit/commit/5645614f497931f587b7cb8b3c885fce892a6a72), [`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4)]:
  - @sveltejs/kit@2.5.18

## 4.2.1

### Patch Changes

- chore: update to @rollup/plugin-commonjs@26 ([#12326](https://github.com/sveltejs/kit/pull/12326))

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 4.2.0

### Minor Changes

- chore(deps): upgrade esbuild ([#12118](https://github.com/sveltejs/kit/pull/12118))

### Patch Changes

- Updated dependencies [[`bbab296f6fcc05af6b999182798bcdedabbaa4c9`](https://github.com/sveltejs/kit/commit/bbab296f6fcc05af6b999182798bcdedabbaa4c9)]:
  - @sveltejs/kit@2.5.6

## 4.1.0

### Minor Changes

- feat: allow Node.js built-in modules when targeting edge functions ([#11675](https://github.com/sveltejs/kit/pull/11675))

### Patch Changes

- Updated dependencies [[`36dc54ac740b8b4c6a2b904a1d0aadd8923a875c`](https://github.com/sveltejs/kit/commit/36dc54ac740b8b4c6a2b904a1d0aadd8923a875c), [`5dae3676b8cc6f8ee0def57340e6a6e591bafecd`](https://github.com/sveltejs/kit/commit/5dae3676b8cc6f8ee0def57340e6a6e591bafecd), [`ada595908b5501b8f4ac30c89c0d6314f364fde3`](https://github.com/sveltejs/kit/commit/ada595908b5501b8f4ac30c89c0d6314f364fde3), [`e228f8997840b89c6248e1c5df6f3108008a06be`](https://github.com/sveltejs/kit/commit/e228f8997840b89c6248e1c5df6f3108008a06be)]:
  - @sveltejs/kit@2.4.1

## 4.0.0

### Major Changes

- breaking: update peer dependency on `@sveltejs/kit` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Minor Changes

- feat: support `read` from `$app/server` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Patch Changes

- Updated dependencies [[`288f731c8a5b20cadb9e219f9583f3f16bf8c7b8`](https://github.com/sveltejs/kit/commit/288f731c8a5b20cadb9e219f9583f3f16bf8c7b8)]:
  - @sveltejs/kit@2.4.0

## 3.0.2

### Patch Changes

- chore: upgrade esbuild to 0.19.11 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 3.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 3.0.0

### Major Changes

- breaking: require SvelteKit 2 ([#11316](https://github.com/sveltejs/kit/pull/11316))

- chore: upgrade esbuild ([#11122](https://github.com/sveltejs/kit/pull/11122))

## 2.0.8

### Patch Changes

- chore: upgrade to esbuild 0.18.11 ([#10330](https://github.com/sveltejs/kit/pull/10330))

- Updated dependencies [[`23d1df702`](https://github.com/sveltejs/kit/commit/23d1df702f0fd77983040404352d8d83fd1dd8a1), [`486a971fe`](https://github.com/sveltejs/kit/commit/486a971fe7c375aae1585f1fa2505e28f86f4b8e)]:
  - @sveltejs/kit@1.22.2

## 2.0.7

### Patch Changes

- chore: update all dependencies with minor version bumps ([#9761](https://github.com/sveltejs/kit/pull/9761))

## 2.0.6

### Patch Changes

- docs: remove comment discourage direct use of adapters ([#9344](https://github.com/sveltejs/kit/pull/9344))

- Updated dependencies [[`b575287d`](https://github.com/sveltejs/kit/commit/b575287d063562868d7726f6451352aa43a63453), [`8114c658`](https://github.com/sveltejs/kit/commit/8114c658c0bc053198ff76704c002cfeb8225e2a), [`620f5605`](https://github.com/sveltejs/kit/commit/620f56058de0993e776c146db4c19fca97b9cb39), [`6a91e887`](https://github.com/sveltejs/kit/commit/6a91e887ee4c1bef8aabfafbf1ab6079113c2832), [`1c32723a`](https://github.com/sveltejs/kit/commit/1c32723a52beca0c5aa895b1114341da78d92eaf), [`0f863bbc`](https://github.com/sveltejs/kit/commit/0f863bbc957ab2ed37b04ebd839fc864b945034d), [`78b4a1bb`](https://github.com/sveltejs/kit/commit/78b4a1bb5e1ae11a894d70a0a28cc344ea0b1284), [`66b2f4ef`](https://github.com/sveltejs/kit/commit/66b2f4ef03a5dd60da2757edde4effcfdf3183cf), [`5dada256`](https://github.com/sveltejs/kit/commit/5dada256dc05674a18946f8f19db1f25ba91aeaf), [`a71b5e69`](https://github.com/sveltejs/kit/commit/a71b5e69ef37ce46e8e8590d537036cb7e267d51), [`daad7e48`](https://github.com/sveltejs/kit/commit/daad7e48b175245cbb7efd0e255263bfb52a5ee6), [`18d330b1`](https://github.com/sveltejs/kit/commit/18d330b16330d76c4b2991839c6b4462d5a4163f), [`18d7e81a`](https://github.com/sveltejs/kit/commit/18d7e81a9892e718c3cd07b2366a60f2e09561ab)]:
  - @sveltejs/kit@1.11.0

## 2.0.5

### Patch Changes

- chore: support newest version of undici ([#9005](https://github.com/sveltejs/kit/pull/9005))

- Updated dependencies [[`6cdf54d1`](https://github.com/sveltejs/kit/commit/6cdf54d1f3561348d87f35ddc8330081919eb839)]:
  - @sveltejs/kit@1.7.1

## 2.0.4

### Patch Changes

- fix: Root route data endpoint redirect when using split routes ([#9006](https://github.com/sveltejs/kit/pull/9006))

- Updated dependencies [[`74cfa8d5`](https://github.com/sveltejs/kit/commit/74cfa8d5f1f13f81759e20e90f4ff86a4f96040d), [`bfa2b6ec`](https://github.com/sveltejs/kit/commit/bfa2b6ec88a6d522d87c924d7c466c01e142e66e)]:
  - @sveltejs/kit@1.5.6

## 2.0.3

### Patch Changes

- chore: simplify functions-internal cleanup ([#8953](https://github.com/sveltejs/kit/pull/8953))

- fix: correctly compare routes when generating split functions ([#8952](https://github.com/sveltejs/kit/pull/8952))

- Updated dependencies [[`0abb8ebf`](https://github.com/sveltejs/kit/commit/0abb8ebffc6121f81c2bbfa0a0f68866d4cc1627), [`bef54f63`](https://github.com/sveltejs/kit/commit/bef54f63d2315066d30e8f1bcf471ddf2bd72c35), [`51cd6e64`](https://github.com/sveltejs/kit/commit/51cd6e643178e3a113fc2c3e8a63755bcbfe902d), [`930c8e4e`](https://github.com/sveltejs/kit/commit/930c8e4ee2e3046ed1b622777dafa23029a19fe5), [`ee8066fc`](https://github.com/sveltejs/kit/commit/ee8066fcb29ed1e7e3ab513cabb7997e38c984f2), [`49d2ec62`](https://github.com/sveltejs/kit/commit/49d2ec62e6385694f11701bf2fa411d07449344c), [`eb943565`](https://github.com/sveltejs/kit/commit/eb943565a4324dbed3da5a581924ca91a24366de)]:
  - @sveltejs/kit@1.5.3

## 2.0.2

### Patch Changes

- fix: preserve functions-internal folder so that auto-generated functions are not removed when ntl build is run ([#8899](https://github.com/sveltejs/kit/pull/8899))

- Updated dependencies [[`1960296d`](https://github.com/sveltejs/kit/commit/1960296da62fdd4ad8e8bb7286940b98fbe8db0f), [`1beb19cb`](https://github.com/sveltejs/kit/commit/1beb19cb487bd6d719048f0feedcb2fbee91a005), [`b915dfe9`](https://github.com/sveltejs/kit/commit/b915dfe9d16a930246a469c9aea8c1a84e5157ba), [`a402d50b`](https://github.com/sveltejs/kit/commit/a402d50b33eba2a937d09e635275c319061ce678)]:
  - @sveltejs/kit@1.5.1

## 2.0.1

### Patch Changes

- chore: throw helpful migration error ([#8915](https://github.com/sveltejs/kit/pull/8915))

## 2.0.0

### Major Changes

- breaking: bump `@sveltejs/kit` peer dependency ([#8740](https://github.com/sveltejs/kit/pull/8740))

### Patch Changes

- Updated dependencies [[`c7648f66`](https://github.com/sveltejs/kit/commit/c7648f6608a413e2654625cbd30f890d2148cf13), [`63613bf1`](https://github.com/sveltejs/kit/commit/63613bf194c18ce50e111585ad770fc93f9e43c7), [`d1f7655e`](https://github.com/sveltejs/kit/commit/d1f7655efdff70d91f94fe0cb0de50ed2511b5e5)]:
  - @sveltejs/kit@1.5.0

## 1.0.5

### Patch Changes

- chore: update link to docs for missing netlify.toml warning ([#8673](https://github.com/sveltejs/kit/pull/8673))

- Updated dependencies [[`24d2efe4`](https://github.com/sveltejs/kit/commit/24d2efe4e5b641b9caacf21ba77a42f812b3b120)]:
  - @sveltejs/kit@1.2.4

## 1.0.4

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.3

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.0.2

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.1

### Patch Changes

- docs: add note about inability to access file system at runtime ([#8441](https://github.com/sveltejs/kit/pull/8441))

- Updated dependencies [[`9c01c32e`](https://github.com/sveltejs/kit/commit/9c01c32ef72bbed630fadcb8283f8f8533ced5e1), [`b6ca02a6`](https://github.com/sveltejs/kit/commit/b6ca02a684dbf13a3138b552e2d2be64697f2254), [`130abe43`](https://github.com/sveltejs/kit/commit/130abe43cef2cfbaf922aa16b20cbd4332a07c15), [`c4137536`](https://github.com/sveltejs/kit/commit/c4137536f2c6572eaeec1a82ccea0852f5be6b98), [`40464efa`](https://github.com/sveltejs/kit/commit/40464efab172a17f0b637d7dadea30d77ef1ed10), [`ce028470`](https://github.com/sveltejs/kit/commit/ce0284708184198efdd30f3ff72fd579cef830b4)]:
  - @sveltejs/kit@1.0.12

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.88

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.87

### Patch Changes

- fix: revert platform change from browser to neutral ([#8122](https://github.com/sveltejs/kit/pull/8122))

## 1.0.0-next.86

### Patch Changes

- fix: set esbuild platform to neutral ([#8083](https://github.com/sveltejs/kit/pull/8083))

## 1.0.0-next.85

### Patch Changes

- update esbuild to ^0.16.3 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.84

### Patch Changes

- Add information about edge functions and `event.platform` ([#7498](https://github.com/sveltejs/kit/pull/7498))

## 1.0.0-next.83

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.82

### Patch Changes

- Drop CJS version of adapter-netlify ([#7401](https://github.com/sveltejs/kit/pull/7401))

## 1.0.0-next.81

### Patch Changes

- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.80

### Patch Changes

- Transfer server data as devalue-encoded JSON ([#7177](https://github.com/sveltejs/kit/pull/7177))

## 1.0.0-next.79

### Patch Changes

- fix: clear out build directory when running `adapter-netlify` ([#7159](https://github.com/sveltejs/kit/pull/7159))

## 1.0.0-next.78

### Patch Changes

- chore: bump esbuild ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 1.0.0-next.77

### Patch Changes

- Update to esbuild 0.15 ([#6740](https://github.com/sveltejs/kit/pull/6740))
- feat: only generate ESM functions ([#6760](https://github.com/sveltejs/kit/pull/6760))

## 1.0.0-next.76

### Patch Changes

- Update adapter to only glob files ([#6492](https://github.com/sveltejs/kit/pull/6492))

## 1.0.0-next.75

### Patch Changes

- Use devalue to serialize server-only `load` return values ([#6318](https://github.com/sveltejs/kit/pull/6318))

## 1.0.0-next.74

### Patch Changes

- Don't use top-level-await, as it is not supported right now ([#6360](https://github.com/sveltejs/kit/pull/6360))

## 1.0.0-next.73

### Patch Changes

- Run `server.init()` for edge functions ([#6327](https://github.com/sveltejs/kit/pull/6327))

## 1.0.0-next.72

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.71

### Patch Changes

- Initialise `env` ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.70

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.69

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.68

### Patch Changes

- feat: get client IP from Context object rather than the request header ([#5473](https://github.com/sveltejs/kit/pull/5473))

## 1.0.0-next.67

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.66

### Patch Changes

- Generate sourcemaps for server-side functions when bundling with esbuild ([#5258](https://github.com/sveltejs/kit/pull/5258))

## 1.0.0-next.65

### Patch Changes

- fix: add redirects for routes containing `__data.json` suffix ([#5180](https://github.com/sveltejs/kit/pull/5180))

## 1.0.0-next.64

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.63

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.62

### Patch Changes

- only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.61

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.60

### Patch Changes

- Encode binary responses as base64 ([#5048](https://github.com/sveltejs/kit/pull/5048))

## 1.0.0-next.59

### Patch Changes

- breaking: replace @sveltejs/kit/install-fetch with @sveltejs/kit/node/polyfills ([#4934](https://github.com/sveltejs/kit/pull/4934))

## 1.0.0-next.58

### Patch Changes

- docs: explain how to change node version ([#4921](https://github.com/sveltejs/kit/pull/4921))

## 1.0.0-next.57

### Patch Changes

- Copy existing `_redirects` file before appending function redirects ([#4890](https://github.com/sveltejs/kit/pull/4890))

## 1.0.0-next.56

### Patch Changes

- breaking: Remove try-catch around server.respond ([#4738](https://github.com/sveltejs/kit/pull/4738))

## 1.0.0-next.55

### Patch Changes

- Fix adapter-netlify edge functions ([#4702](https://github.com/sveltejs/kit/pull/4702))

## 1.0.0-next.54

### Patch Changes

- Ensure tmp dir is created ([#4694](https://github.com/sveltejs/kit/pull/4694))

## 1.0.0-next.53

### Patch Changes

- Ensure build directory exists before writing \_redirects ([#4676](https://github.com/sveltejs/kit/pull/4676))

## 1.0.0-next.52

### Patch Changes

- Adds support for Netlify Edge Functions ([#4657](https://github.com/sveltejs/kit/pull/4657))

## 1.0.0-next.51

### Patch Changes

- Provide getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.50

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.49

### Patch Changes

- Add Netlify Functions context as `event.platform.context` ([#4145](https://github.com/sveltejs/kit/pull/4145))

## 1.0.0-next.48

### Patch Changes

- Rename `__fetch_polyfill` to `installFetch` ([#4111](https://github.com/sveltejs/kit/pull/4111))

## 1.0.0-next.47

### Patch Changes

- Fix incorrect set-cookie header handling on adapter-netlify ([#4096](https://github.com/sveltejs/kit/pull/4096))

## 1.0.0-next.46

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))

## 1.0.0-next.45

### Patch Changes

- update to Vite 2.8 and esbuild 0.14 ([#3791](https://github.com/sveltejs/kit/pull/3791))

## 1.0.0-next.44

### Patch Changes

- Fix string replacement in CJS builds ([#3546](https://github.com/sveltejs/kit/pull/3546))

## 1.0.0-next.43

### Patch Changes

- Bump version to trigger rebuild with set-cookie support ([#3529](https://github.com/sveltejs/kit/pull/3529))

## 1.0.0-next.42

### Patch Changes

- Avoid setting the body of the request when the request method is GET or HEAD ([#3459](https://github.com/sveltejs/kit/pull/3459))

## 1.0.0-next.41

### Patch Changes

- Breaking: change app.render signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.40

### Patch Changes

- Polyfill fetch before running any app code ([#3400](https://github.com/sveltejs/kit/pull/3400))

## 1.0.0-next.39

### Patch Changes

- Allow `__fetchPolyfill()` to run several times ([#3377](https://github.com/sveltejs/kit/pull/3377))

## 1.0.0-next.38

### Patch Changes

- Add immutable cache headers to generated assets ([#3222](https://github.com/sveltejs/kit/pull/3222))

## 1.0.0-next.37

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Update adapters to provide app.render with a url ([#3133](https://github.com/sveltejs/kit/pull/3133))
- Add experimental function splitting ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Don't bundle final output ([#2931](https://github.com/sveltejs/kit/pull/2931))

## 1.0.0-next.36

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.35

### Patch Changes

- fix: adapter-netlify: handle undefined body ([#2682](https://github.com/sveltejs/kit/pull/2682))

## 1.0.0-next.34

### Patch Changes

- fix: encode UInt8Array response bodies as base64 ([#2630](https://github.com/sveltejs/kit/pull/2630))

## 1.0.0-next.33

### Patch Changes

- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))

## 1.0.0-next.32

### Patch Changes

- update to vite 2.6.0 and esbuild 0.13 ([#2522](https://github.com/sveltejs/kit/pull/2522))

## 1.0.0-next.31

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.30

### Patch Changes

- chore: export package.json from adapters ([#2351](https://github.com/sveltejs/kit/pull/2351))

## 1.0.0-next.29

### Patch Changes

- Deploy generated Netlify entrypoint to the internal functions directory. This allows it to co-exist with other Netlify functions. ([#2113](https://github.com/sveltejs/kit/pull/2113))

## 1.0.0-next.28

### Patch Changes

- Ensure the raw body is an Uint8Array before passing it to request handlers ([#2215](https://github.com/sveltejs/kit/pull/2215))

## 1.0.0-next.27

### Patch Changes

- 94b34fa6: [breaking] standardize final output dir as /build (vs /.svelte-kit) ([#2109](https://github.com/sveltejs/kit/pull/2109))

## 1.0.0-next.26

### Patch Changes

- 4cb4e749: update build output locations ([#2058](https://github.com/sveltejs/kit/pull/2058))
- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))

## 1.0.0-next.25

### Patch Changes

- e9f78999: fix: include esbuild config in adapter type definition ([#1954](https://github.com/sveltejs/kit/pull/1954))

## 1.0.0-next.24

### Patch Changes

- e6995797: feat(adapters): expose esbuild configuration ([#1914](https://github.com/sveltejs/kit/pull/1914))

## 1.0.0-next.23

### Patch Changes

- 67ca3a39: return the correct headers ([#1913](https://github.com/sveltejs/kit/pull/1913))

## 1.0.0-next.22

### Patch Changes

- 9461178: Use multivalue headers to set multiple cookies ([#1906](https://github.com/sveltejs/kit/pull/1906))

## 1.0.0-next.21

### Patch Changes

- 4720b67: Default body parsing to binary ([#1890](https://github.com/sveltejs/kit/pull/1890))

## 1.0.0-next.20

### Patch Changes

- 7faf52f: Update and consolidate checks for binary body types ([#1687](https://github.com/sveltejs/kit/pull/1687))

## 1.0.0-next.19

### Patch Changes

- 2ac5781: Use esbuild inject API to insert shims ([#1822](https://github.com/sveltejs/kit/pull/1822))

## 1.0.0-next.18

### Patch Changes

- 9f0c54a: Externalize app initialization to adapters ([#1804](https://github.com/sveltejs/kit/pull/1804))

## 1.0.0-next.17

### Patch Changes

- c51ab7d: Upgrade esbuild to ^0.12.5 ([#1627](https://github.com/sveltejs/kit/pull/1627))

## 1.0.0-next.16

### Patch Changes

- edc307d: Remove peerDependencies due to pnpm bug ([#1621](https://github.com/sveltejs/kit/pull/1621))
- 2636e68: Attempt to fix peerDependencies specification ([#1620](https://github.com/sveltejs/kit/pull/1620))
- 3b988a4: Allow `_redirects` to be placed in root directory ([#1586](https://github.com/sveltejs/kit/pull/1586))

## 1.0.0-next.15

### Patch Changes

- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))
- Updated dependencies [6372690]
- Updated dependencies [c3d36a3]
- Updated dependencies [bf77940]
- Updated dependencies [2172469]
- Updated dependencies [028abd9]
  - @sveltejs/kit@1.0.0-next.110

## 1.0.0-next.14

### Patch Changes

- f59530f: Allow custom redirects for Netlify Adapter
- 71e293d: change toml parser to support dotted keys and other language features added after the TOML v0.4.0 spec ([#1509](https://github.com/sveltejs/kit/pull/1509))
- 1ba1784: Prevent adapter from splitting query params if they contain commas ([#1467](https://github.com/sveltejs/kit/pull/1467))
- dca4946: Make kit a peerDependency of the adapters ([#1505](https://github.com/sveltejs/kit/pull/1505))
- Updated dependencies [261ee1c]
- Updated dependencies [ec156c6]
- Updated dependencies [586785d]
  - @sveltejs/kit@1.0.0-next.109

## 1.0.0-next.13

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))
- Updated dependencies [dad93fc]
- Updated dependencies [37fc04f]
  - @sveltejs/kit@1.0.0-next.108

## 1.0.0-next.12

### Patch Changes

- 11e7840: Ensure rawBody is a string or Uint8Array ([#1382](https://github.com/sveltejs/kit/pull/1382))
- Updated dependencies [11e7840]
- Updated dependencies [11e7840]
- Updated dependencies [9e20873]
- Updated dependencies [2562ca0]
  - @sveltejs/kit@1.0.0-next.103

## 1.0.0-next.11

### Patch Changes

- c6fde99: Convert to ESM ([#1323](https://github.com/sveltejs/kit/pull/1323))
- Updated dependencies [694f5de]
- Updated dependencies [0befffb]
- Updated dependencies [c6fde99]
  - @sveltejs/kit@1.0.0-next.97

## 1.0.0-next.10

### Patch Changes

- 2e72a94: Add type declarations ([#1230](https://github.com/sveltejs/kit/pull/1230))
- Updated dependencies [82955ec]
  - @sveltejs/kit@1.0.0-next.91

## 1.0.0-next.9

### Patch Changes

- d3cb858: Convert body to string, unless type is octet-stream ([#1121](https://github.com/sveltejs/kit/pull/1121))
- Updated dependencies [4af45e1]
  - @sveltejs/kit@1.0.0-next.82

## 1.0.0-next.8

### Patch Changes

- 1237eb3: Fix dependencies ([#1109](https://github.com/sveltejs/kit/pull/1109))
- 1237eb3: Pass rawBody from netlify adapter ([#1109](https://github.com/sveltejs/kit/pull/1109))
- Updated dependencies [1237eb3]
- Updated dependencies [1237eb3]
  - @sveltejs/kit@1.0.0-next.81

## 1.0.0-next.7

### Patch Changes

- 0db2cf7: Fix serverless function ([#1102](https://github.com/sveltejs/kit/pull/1102))

## 1.0.0-next.6

### Patch Changes

- 7a4b351: Bundle serverless functions with esbuild ([#1091](https://github.com/sveltejs/kit/pull/1091))

## 1.0.0-next.5

### Patch Changes

- 6e27880: Move server-side fetch to adapters instead of build step ([#1066](https://github.com/sveltejs/kit/pull/1066))

## 1.0.0-next.4

### Patch Changes

- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 1.0.0-next.3

### Patch Changes

- f35a5cd: Change adapter signature ([#505](https://github.com/sveltejs/kit/pull/505))

## 1.0.0-next.2

### Patch Changes

- 512b8c9: adapter-netlify: Use CJS entrypoint ([#485](https://github.com/sveltejs/kit/pull/485))

## 1.0.0-next.1

### Patch Changes

- Fix adapters and convert to ES modules

## 0.0.13

### Patch Changes

- Add svelte-kit start command

## 0.0.12

### Patch Changes

- b475ed4: Overhaul adapter API - fixes #166 ([#180](https://github.com/sveltejs/kit/pull/180))

## 0.0.11

### Patch Changes

- 67eaeea: Move app-utils stuff into subpackages

## 0.0.10

### Patch Changes

- Use setup

## 0.0.9

### Patch Changes

- 0320208: Rename 'server route' to 'endpoint'
- 5ca907c: Use shared mkdirp helper

## 0.0.8

### Patch Changes

- various

'''
'''--- packages/adapter-netlify/README.md ---
# adapter-netlify

A SvelteKit adapter that creates a Netlify app.

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-netlify)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-netlify/CHANGELOG.md).

'''
'''--- packages/adapter-node/CHANGELOG.md ---
# @sveltejs/adapter-node

## 5.2.9
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 5.2.8
### Patch Changes

- chore: upgrade @rollup/plugin-commonjs to 28.0.1 ([#12817](https://github.com/sveltejs/kit/pull/12817))

## 5.2.7
### Patch Changes

- chore: upgrade to sirv 3.0 ([#12796](https://github.com/sveltejs/kit/pull/12796))

- Updated dependencies [[`dbc9c9486f962af7dbd9123d12d8a6829700d00f`](https://github.com/sveltejs/kit/commit/dbc9c9486f962af7dbd9123d12d8a6829700d00f), [`96642d234d1f5e961e919da725a1f6188e8aba2c`](https://github.com/sveltejs/kit/commit/96642d234d1f5e961e919da725a1f6188e8aba2c)]:
  - @sveltejs/kit@2.7.1

## 5.2.6
### Patch Changes

- fix: use `node:` imports to support Deno ([#12785](https://github.com/sveltejs/kit/pull/12785))

## 5.2.5
### Patch Changes

- chore: upgrade rollup plugins ([#12706](https://github.com/sveltejs/kit/pull/12706))

- Updated dependencies [[`a233f53f28fcb4c3ea63d2faf156fba09a18456c`](https://github.com/sveltejs/kit/commit/a233f53f28fcb4c3ea63d2faf156fba09a18456c), [`5b40b04608023a3fcb6c601a5f2d36485ce07196`](https://github.com/sveltejs/kit/commit/5b40b04608023a3fcb6c601a5f2d36485ce07196)]:
  - @sveltejs/kit@2.6.0

## 5.2.4
### Patch Changes

- chore: upgrade polka to 1.0.0-next.28 ([#12693](https://github.com/sveltejs/kit/pull/12693))

## 5.2.3
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

- Updated dependencies [[`e798ef718f163bed4f93e1918bd8294f765376ad`](https://github.com/sveltejs/kit/commit/e798ef718f163bed4f93e1918bd8294f765376ad)]:
  - @sveltejs/kit@2.5.28

## 5.2.2
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 5.2.1
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 5.2.0

### Minor Changes

- feat: add unit suffixes to the `BODY_SIZE_LIMIT` environment variable ([#11680](https://github.com/sveltejs/kit/pull/11680))

### Patch Changes

- Updated dependencies [[`121836fcbf6c615fd18c79a12203613ddbe49acf`](https://github.com/sveltejs/kit/commit/121836fcbf6c615fd18c79a12203613ddbe49acf)]:
  - @sveltejs/kit@2.5.17

## 5.1.1

### Patch Changes

- fix: do not create more than one shutdown timeout ([#12359](https://github.com/sveltejs/kit/pull/12359))

- Updated dependencies [[`835ebf6ce9979203992cca30f434b3785afae818`](https://github.com/sveltejs/kit/commit/835ebf6ce9979203992cca30f434b3785afae818)]:
  - @sveltejs/kit@2.5.16

## 5.1.0

### Minor Changes

- feat: add shutdown event ([#12153](https://github.com/sveltejs/kit/pull/12153))

### Patch Changes

- fix: close keep-alive connections as soon as possible during graceful shutdown rather than accepting new requests ([#12153](https://github.com/sveltejs/kit/pull/12153))

## 5.0.2

### Patch Changes

- chore: update to @rollup/plugin-commonjs@26 ([#12326](https://github.com/sveltejs/kit/pull/12326))

- chore(deps): update dependency @rollup/plugin-commonjs to v26 ([`9aa59db67080248eb22fd227e7a491102b011c47`](https://github.com/sveltejs/kit/commit/9aa59db67080248eb22fd227e7a491102b011c47))

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 5.0.1

### Patch Changes

- fix: regression preventing built application from starting ([#11960](https://github.com/sveltejs/kit/pull/11960))

## 5.0.0

### Major Changes

- breaking: add graceful shutdown ([#11653](https://github.com/sveltejs/kit/pull/11653))

- breaking: change default value of `precompress` option to true to serve precompressed assets by default ([#11945](https://github.com/sveltejs/kit/pull/11945))

### Minor Changes

- feat: add systemd socket activation ([#11653](https://github.com/sveltejs/kit/pull/11653))

### Patch Changes

- Updated dependencies [[`873a09eac86817d1cbb53bf3f9c8842d7346d20d`](https://github.com/sveltejs/kit/commit/873a09eac86817d1cbb53bf3f9c8842d7346d20d), [`30c78f223a4f9e6c4547d087338a8b8cc477ba55`](https://github.com/sveltejs/kit/commit/30c78f223a4f9e6c4547d087338a8b8cc477ba55)]:
  - @sveltejs/kit@2.5.3

## 4.0.1

### Patch Changes

- fix: return 400 response if request construction fails ([#11713](https://github.com/sveltejs/kit/pull/11713))

- Updated dependencies [[`f56781fa47a0f958b228e4a51bb3cbf173854f12`](https://github.com/sveltejs/kit/commit/f56781fa47a0f958b228e4a51bb3cbf173854f12)]:
  - @sveltejs/kit@2.4.3

## 4.0.0

### Major Changes

- breaking: update peer dependency on `@sveltejs/kit` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Minor Changes

- feat: support `read` from `$app/server` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Patch Changes

- Updated dependencies [[`288f731c8a5b20cadb9e219f9583f3f16bf8c7b8`](https://github.com/sveltejs/kit/commit/288f731c8a5b20cadb9e219f9583f3f16bf8c7b8)]:
  - @sveltejs/kit@2.4.0

## 3.0.3

### Patch Changes

- fix: return 400 response if request construction fails

## 3.0.2

### Patch Changes

- fix: return 400 response if request construction fails

## 3.0.1

### Patch Changes

- chore: upgrade rollup to 4.9.5 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 3.0.0

### Major Changes

- breaking: allow any numeric value for `BODY_SIZE_LIMIT`, and interpret literally. Use `Infinity` rather than `0` for unrestricted body sizes ([#11589](https://github.com/sveltejs/kit/pull/11589))

## 2.1.2

### Patch Changes

- fix: return 400 response if request construction fails

## 2.1.1

### Patch Changes

- fix: correctly handle BODY_SIZE_LIMIT=0 ([#11574](https://github.com/sveltejs/kit/pull/11574))

## 2.1.0

### Minor Changes

- feat: add `PORT_HEADER` env var for reverse proxies with non-standard ports ([#11249](https://github.com/sveltejs/kit/pull/11249))

### Patch Changes

- Updated dependencies [[`9556abae4ba28c02ba468735beb9eb868876a9a1`](https://github.com/sveltejs/kit/commit/9556abae4ba28c02ba468735beb9eb868876a9a1), [`8468af597c6240f7a3687ef1ed3873990b944f8c`](https://github.com/sveltejs/kit/commit/8468af597c6240f7a3687ef1ed3873990b944f8c)]:
  - @sveltejs/kit@2.1.1

## 2.0.2

### Patch Changes

- fix: upgrade `sirv` and `mrmime` to modernize javascript mime type ([#11419](https://github.com/sveltejs/kit/pull/11419))

- Updated dependencies [[`b999cfdea24e72043505e032ed9d621590896263`](https://github.com/sveltejs/kit/commit/b999cfdea24e72043505e032ed9d621590896263), [`2a091dcbbdf7d2a70a38316638e16761bd1b9b59`](https://github.com/sveltejs/kit/commit/2a091dcbbdf7d2a70a38316638e16761bd1b9b59)]:
  - @sveltejs/kit@2.0.5

## 2.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 2.0.0

### Major Changes

- breaking: require SvelteKit 2 peer dependency ([#11289](https://github.com/sveltejs/kit/pull/11289))

- breaking: remove polyfill option. fetch APIs will now always come from the platform being used. File and crypto APIs will be polyfilled if not available ([#11172](https://github.com/sveltejs/kit/pull/11172))

- chore: upgrade rollup ([#11122](https://github.com/sveltejs/kit/pull/11122))

## 1.3.1

### Patch Changes

- fix: build output stuck on top level await ([#10314](https://github.com/sveltejs/kit/pull/10314))

- Updated dependencies [[`c1ad5b2f8`](https://github.com/sveltejs/kit/commit/c1ad5b2f84762a34adb327a0e309792603b405b3), [`67a0d869b`](https://github.com/sveltejs/kit/commit/67a0d869b3221925c3f456127205a4aee0b28e85), [`4d7f38fa1`](https://github.com/sveltejs/kit/commit/4d7f38fa18c75991bca3f723cdc50d8a67036f83), [`42c9b935e`](https://github.com/sveltejs/kit/commit/42c9b935e49fbbeff7065d1b2a31986c0b814956), [`42c9b935e`](https://github.com/sveltejs/kit/commit/42c9b935e49fbbeff7065d1b2a31986c0b814956)]:
  - @sveltejs/kit@1.22.0

## 1.3.0

### Minor Changes

- chore: remove build step for adapter node ([#10041](https://github.com/sveltejs/kit/pull/10041))

- feat: load sourcemaps so that they can be merged to point to original sourcefiles ([#10041](https://github.com/sveltejs/kit/pull/10041))

### Patch Changes

- fix: do not crash server if specified `ADDRESS_HEADER` is missing from a request ([#10285](https://github.com/sveltejs/kit/pull/10285))

## 1.2.4

### Patch Changes

- chore: update all dependencies with minor version bumps ([#9761](https://github.com/sveltejs/kit/pull/9761))

## 1.2.3

### Patch Changes

- fix: only send cache header when static resource is 200 ([#9394](https://github.com/sveltejs/kit/pull/9394))

- Updated dependencies [[`385bd49e`](https://github.com/sveltejs/kit/commit/385bd49efb6890078dcdb523fdf5b621fe1c3e72), [`29ffc785`](https://github.com/sveltejs/kit/commit/29ffc78560a99ce387b10a24f48b7f01205f51e7), [`d257d37d`](https://github.com/sveltejs/kit/commit/d257d37d3cac94f30befa9fe38c2987f84fb551a), [`c45c35e7`](https://github.com/sveltejs/kit/commit/c45c35e7b40837cd1bea3fc26cfb831478e03c00), [`75e2c6f7`](https://github.com/sveltejs/kit/commit/75e2c6f7c8376685317b669767c7767fd21670eb), [`1c085780`](https://github.com/sveltejs/kit/commit/1c08578031395377a98b365a27eb9587594dd06e)]:
  - @sveltejs/kit@1.12.0

## 1.2.2

### Patch Changes

- fix: add `BODY_SIZE_LIMIT` to the list of recognized env variables ([#9326](https://github.com/sveltejs/kit/pull/9326))

- Updated dependencies [[`b575287d`](https://github.com/sveltejs/kit/commit/b575287d063562868d7726f6451352aa43a63453), [`8114c658`](https://github.com/sveltejs/kit/commit/8114c658c0bc053198ff76704c002cfeb8225e2a), [`620f5605`](https://github.com/sveltejs/kit/commit/620f56058de0993e776c146db4c19fca97b9cb39), [`6a91e887`](https://github.com/sveltejs/kit/commit/6a91e887ee4c1bef8aabfafbf1ab6079113c2832), [`1c32723a`](https://github.com/sveltejs/kit/commit/1c32723a52beca0c5aa895b1114341da78d92eaf), [`0f863bbc`](https://github.com/sveltejs/kit/commit/0f863bbc957ab2ed37b04ebd839fc864b945034d), [`78b4a1bb`](https://github.com/sveltejs/kit/commit/78b4a1bb5e1ae11a894d70a0a28cc344ea0b1284), [`66b2f4ef`](https://github.com/sveltejs/kit/commit/66b2f4ef03a5dd60da2757edde4effcfdf3183cf), [`5dada256`](https://github.com/sveltejs/kit/commit/5dada256dc05674a18946f8f19db1f25ba91aeaf), [`a71b5e69`](https://github.com/sveltejs/kit/commit/a71b5e69ef37ce46e8e8590d537036cb7e267d51), [`daad7e48`](https://github.com/sveltejs/kit/commit/daad7e48b175245cbb7efd0e255263bfb52a5ee6), [`18d330b1`](https://github.com/sveltejs/kit/commit/18d330b16330d76c4b2991839c6b4462d5a4163f), [`18d7e81a`](https://github.com/sveltejs/kit/commit/18d7e81a9892e718c3cd07b2366a60f2e09561ab)]:
  - @sveltejs/kit@1.11.0

## 1.2.1

### Patch Changes

- fix: use `node` export condition when bundling ([#9276](https://github.com/sveltejs/kit/pull/9276))

- Updated dependencies [[`1e2c8269`](https://github.com/sveltejs/kit/commit/1e2c82697d501c88c6027722ea9b106e09a0eb6d)]:
  - @sveltejs/kit@1.9.3

## 1.2.0

### Minor Changes

- add polyfill option ([#8991](https://github.com/sveltejs/kit/pull/8991))

### Patch Changes

- Updated dependencies [[`74cfa8d5`](https://github.com/sveltejs/kit/commit/74cfa8d5f1f13f81759e20e90f4ff86a4f96040d), [`bfa2b6ec`](https://github.com/sveltejs/kit/commit/bfa2b6ec88a6d522d87c924d7c466c01e142e66e)]:
  - @sveltejs/kit@1.5.6

## 1.1.8

### Patch Changes

- fix: use `strictRequires: true` when bundling output ([#8958](https://github.com/sveltejs/kit/pull/8958))

- Updated dependencies [[`0abb8ebf`](https://github.com/sveltejs/kit/commit/0abb8ebffc6121f81c2bbfa0a0f68866d4cc1627), [`bef54f63`](https://github.com/sveltejs/kit/commit/bef54f63d2315066d30e8f1bcf471ddf2bd72c35), [`51cd6e64`](https://github.com/sveltejs/kit/commit/51cd6e643178e3a113fc2c3e8a63755bcbfe902d), [`930c8e4e`](https://github.com/sveltejs/kit/commit/930c8e4ee2e3046ed1b622777dafa23029a19fe5), [`ee8066fc`](https://github.com/sveltejs/kit/commit/ee8066fcb29ed1e7e3ab513cabb7997e38c984f2), [`49d2ec62`](https://github.com/sveltejs/kit/commit/49d2ec62e6385694f11701bf2fa411d07449344c), [`eb943565`](https://github.com/sveltejs/kit/commit/eb943565a4324dbed3da5a581924ca91a24366de)]:
  - @sveltejs/kit@1.5.3

## 1.1.7

### Patch Changes

- fix: make serve_prerendered middleware work with node http server ([#8890](https://github.com/sveltejs/kit/pull/8890))

- Updated dependencies [[`c7648f66`](https://github.com/sveltejs/kit/commit/c7648f6608a413e2654625cbd30f890d2148cf13), [`63613bf1`](https://github.com/sveltejs/kit/commit/63613bf194c18ce50e111585ad770fc93f9e43c7), [`d1f7655e`](https://github.com/sveltejs/kit/commit/d1f7655efdff70d91f94fe0cb0de50ed2511b5e5)]:
  - @sveltejs/kit@1.5.0

## 1.1.6

### Patch Changes

- fix: correctly redirect trailing slashes for `adapter-node` ([#8857](https://github.com/sveltejs/kit/pull/8857))

## 1.1.5

### Patch Changes

- docs: fix link in README ([#8854](https://github.com/sveltejs/kit/pull/8854))

- Updated dependencies [[`7cdb7a65`](https://github.com/sveltejs/kit/commit/7cdb7a65819342c6d334c79defc697d531d5cbf4)]:
  - @sveltejs/kit@1.3.10

## 1.1.4

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.1.3

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.1.2

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.1.1

### Patch Changes

- docs: add info about custom cleanup before server exits ([#8455](https://github.com/sveltejs/kit/pull/8455))

- Updated dependencies [[`9c01c32e`](https://github.com/sveltejs/kit/commit/9c01c32ef72bbed630fadcb8283f8f8533ced5e1), [`b6ca02a6`](https://github.com/sveltejs/kit/commit/b6ca02a684dbf13a3138b552e2d2be64697f2254), [`130abe43`](https://github.com/sveltejs/kit/commit/130abe43cef2cfbaf922aa16b20cbd4332a07c15), [`c4137536`](https://github.com/sveltejs/kit/commit/c4137536f2c6572eaeec1a82ccea0852f5be6b98), [`40464efa`](https://github.com/sveltejs/kit/commit/40464efab172a17f0b637d7dadea30d77ef1ed10), [`ce028470`](https://github.com/sveltejs/kit/commit/ce0284708184198efdd30f3ff72fd579cef830b4)]:
  - @sveltejs/kit@1.0.12

## 1.1.0

### Minor Changes

- feat: add original request object as `event.platform.req` ([#8171](https://github.com/sveltejs/kit/pull/8171))

### Patch Changes

- Updated dependencies [[`5426901a`](https://github.com/sveltejs/kit/commit/5426901a710f5e412bd8d3bf2c78bd9df283b2a2)]:
  - @sveltejs/kit@1.0.5

## 1.0.1

### Patch Changes

- chore: update dependency @rollup/plugin-json to v6 ([#8204](https://github.com/sveltejs/kit/pull/8204))
  - Note: plugin-json v6 fails your build for parse errors that only logged a warning with v5. We consider this a bugfix as only healthy input should result in a successful build.
- chore(deps): update dependency @rollup/plugin-commonjs to v24 ([#8216](https://github.com/sveltejs/kit/pull/8216))
- Updated dependencies [[`fab0de4f`](https://github.com/sveltejs/kit/commit/fab0de4f06ac5b1e9b049e106889b193975c1c29), [`89b8d94b`](https://github.com/sveltejs/kit/commit/89b8d94b1b20d586e1ca525c30d07587c3f2d8f2)]:
  - @sveltejs/kit@1.0.2

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.106

### Patch Changes

- breaking: remove warnings/errors about removed/changed APIs ([#8019](https://github.com/sveltejs/kit/pull/8019))
- Updated dependencies [[`f42604a2`](https://github.com/sveltejs/kit/commit/f42604a2b4c04026d3d8bad95807720b79529539)]:
  - @sveltejs/kit@1.0.0-next.589

## 1.0.0-next.105

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.104

### Patch Changes

- update rollup to ^3.7.0 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.103

### Patch Changes

- Update docs with example of loading environment variables ([#8020](https://github.com/sveltejs/kit/pull/8020))

## 1.0.0-next.102

### Patch Changes

- docs: update reference to `getClientAddress()` ([#7907](https://github.com/sveltejs/kit/pull/7907))

## 1.0.0-next.101

### Patch Changes

- Update docs ([#7744](https://github.com/sveltejs/kit/pull/7744))

## 1.0.0-next.100

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.99

### Patch Changes

- fix: take into account deep exports for external packages ([#7311](https://github.com/sveltejs/kit/pull/7311))

## 1.0.0-next.98

### Patch Changes

- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.97

### Patch Changes

- chore: update dependency @rollup/plugin-json to v5 ([#7204](https://github.com/sveltejs/kit/pull/7204))

## 1.0.0-next.96

### Patch Changes

- Disable builtin modules warning ([#7031](https://github.com/sveltejs/kit/pull/7031))

## 1.0.0-next.95

### Patch Changes

- Redact error message if `getRequest` fails ([#6936](https://github.com/sveltejs/kit/pull/6936))

## 1.0.0-next.94

### Patch Changes

- Add missing Rollup dependency ([#6927](https://github.com/sveltejs/kit/pull/6927))

## 1.0.0-next.93

### Patch Changes

- Bundle with rollup instead of esbuild ([#6896](https://github.com/sveltejs/kit/pull/6896))

## 1.0.0-next.92

### Patch Changes

- chore: bump esbuild ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 1.0.0-next.91

### Patch Changes

- Allow streaming when `BODY_SIZE_LIMIT` is set ([#6702](https://github.com/sveltejs/kit/pull/6702))

## 1.0.0-next.90

### Patch Changes

- Update to esbuild 0.15 ([#6740](https://github.com/sveltejs/kit/pull/6740))
- Improve performance by compressing in parallel ([#6710](https://github.com/sveltejs/kit/pull/6710))

## 1.0.0-next.89

### Patch Changes

- breaking: request creation cleanup ([#6681](https://github.com/sveltejs/kit/pull/6681))
- breaking: limit adapter-node request size ([#6684](https://github.com/sveltejs/kit/pull/6684))

## 1.0.0-next.88

### Patch Changes

- Bundle non-production dependencies with esbuild ([#6372](https://github.com/sveltejs/kit/pull/6372))

## 1.0.0-next.87

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.86

### Patch Changes

- Move `compress` logic to `Builder` API ([#5822](https://github.com/sveltejs/kit/pull/5822))

## 1.0.0-next.85

### Patch Changes

- Initialise `env` ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.84

### Patch Changes

- Set Vite's publicDir and correctly serve public assets earlier in pipeline ([#5686](https://github.com/sveltejs/kit/pull/5686))

## 1.0.0-next.83

### Patch Changes

- set Vite's `publicDir` option ([#5648](https://github.com/sveltejs/kit/pull/5648))

## 1.0.0-next.82

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.81

### Patch Changes

- breaking: remove compression middleware from adapter-node output server ([#5506](https://github.com/sveltejs/kit/pull/5506))

## 1.0.0-next.80

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.79

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.78

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.77

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.76

### Patch Changes

- only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.75

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.74

### Patch Changes

- breaking: replace @sveltejs/kit/install-fetch with @sveltejs/kit/node/polyfills ([#4934](https://github.com/sveltejs/kit/pull/4934))

## 1.0.0-next.73

### Patch Changes

- breaking: rename `xForwardedForIndex` to `XFF_DEPTH` and make it an environment variable ([#4332](https://github.com/sveltejs/kit/pull/4332))
- breaking: Replace `options.env` with `options.envPrefix` ([#4360](https://github.com/sveltejs/kit/pull/4360))

## 1.0.0-next.72

### Patch Changes

- Provide getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.71

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.70

### Patch Changes

- Rename `__fetch_polyfill` to `installFetch` ([#4111](https://github.com/sveltejs/kit/pull/4111))

## 1.0.0-next.69

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))

## 1.0.0-next.68

### Patch Changes

- `precompress` option also compress wasm files ([#3812](https://github.com/sveltejs/kit/pull/3812))

## 1.0.0-next.67

### Patch Changes

- Bump version to trigger rebuild with set-cookie support ([#3529](https://github.com/sveltejs/kit/pull/3529))

## 1.0.0-next.66

### Patch Changes

- fix usage of `ORIGIN` environment variable ([#3448](https://github.com/sveltejs/kit/pull/3448))

## 1.0.0-next.65

### Patch Changes

- fix: rename `BASE` to `ORIGIN` and fix config handling ([#3423](https://github.com/sveltejs/kit/pull/3423))

## 1.0.0-next.64

### Patch Changes

- breaking: change app.render signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))
- breaking: Remove protocol/host configuration options from Kit to adapter-node ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.63

### Patch Changes

- Polyfill fetch before running any app code ([#3400](https://github.com/sveltejs/kit/pull/3400))

## 1.0.0-next.62

### Patch Changes

- Allow `__fetchPolyfill()` to run several times ([#3377](https://github.com/sveltejs/kit/pull/3377))

## 1.0.0-next.61

### Patch Changes

- chore: update dependency sirv to v2 ([#3263](https://github.com/sveltejs/kit/pull/3263))

## 1.0.0-next.60

### Patch Changes

- Don't cache non-hashed static assets in adapter-node ([#3193](https://github.com/sveltejs/kit/pull/3193))
- Only set cache-control: immutable when appropriate ([#3196](https://github.com/sveltejs/kit/pull/3196))

## 1.0.0-next.59

### Patch Changes

- Fix types ([#3181](https://github.com/sveltejs/kit/pull/3181))
- Check if directory exists, before compressing ([#3179](https://github.com/sveltejs/kit/pull/3179))

## 1.0.0-next.58

### Patch Changes

- fix: only add handlers for directories that exist ([#3148](https://github.com/sveltejs/kit/pull/3148))

## 1.0.0-next.57

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Update adapters to provide app.render with a url ([#3133](https://github.com/sveltejs/kit/pull/3133))
- Don't bundle final output ([#2931](https://github.com/sveltejs/kit/pull/2931))

## 1.0.0-next.56

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.55

### Patch Changes

- breaking: drop Node 12 support ([#2604](https://github.com/sveltejs/kit/pull/2604))

## 1.0.0-next.54

### Patch Changes

- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))

## 1.0.0-next.53

### Patch Changes

- Don't crash when receiving malformed URLs ([#2533](https://github.com/sveltejs/kit/pull/2533))

## 1.0.0-next.52

### Patch Changes

- update to vite 2.6.0 and esbuild 0.13 ([#2522](https://github.com/sveltejs/kit/pull/2522))

## 1.0.0-next.51

### Patch Changes

- fix: regression where builds not using `entryPoint` stopped having `middlewares.js` external ([#2484](https://github.com/sveltejs/kit/pull/2484))

## 1.0.0-next.50

### Patch Changes

- fix: Correctly treat `middlewares.js` as external when using `entryPoint` option ([#2482](https://github.com/sveltejs/kit/pull/2482))

## 1.0.0-next.49

### Patch Changes

- update dependencies ([#2447](https://github.com/sveltejs/kit/pull/2447))

## 1.0.0-next.48

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.47

### Patch Changes

- feat: add entryPoint option for custom servers ([#2414](https://github.com/sveltejs/kit/pull/2414))

## 1.0.0-next.46

### Patch Changes

- Clear output directory before adapting ([#2388](https://github.com/sveltejs/kit/pull/2388))

## 1.0.0-next.45

### Patch Changes

- chore: export package.json from adapters ([#2351](https://github.com/sveltejs/kit/pull/2351))

## 1.0.0-next.44

### Patch Changes

- feat: expose handler to allow use in custom server

## 1.0.0-next.43

### Patch Changes

- fix: provide default port only if path not provided ([#2244](https://github.com/sveltejs/kit/pull/2244))

## 1.0.0-next.42

### Patch Changes

- fix: bump polka and sirv again to address unicode handling bug

## 1.0.0-next.41

### Patch Changes

- fix: upgrade polka and sirv. fixes handling of URLs with unicode characters ([#2191](https://github.com/sveltejs/kit/pull/2191))

## 1.0.0-next.40

### Patch Changes

- fix: handle paths consistently between dev and various production adapters ([#2171](https://github.com/sveltejs/kit/pull/2171))

* [feat] allow node adapter to configure listen path ([#2048](https://github.com/sveltejs/kit/pull/2048))

## 1.0.0-next.39

### Patch Changes

- 94b34fa6: [breaking] standardize final output dir as /build (vs /.svelte-kit) ([#2109](https://github.com/sveltejs/kit/pull/2109))

## 1.0.0-next.38

### Patch Changes

- a12beb04: [fix] update broken file path ([#2096](https://github.com/sveltejs/kit/pull/2096))

## 1.0.0-next.37

### Patch Changes

- b3e7c8b3: [chore] update build output location ([#2082](https://github.com/sveltejs/kit/pull/2082))

## 1.0.0-next.36

### Patch Changes

- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))

## 1.0.0-next.35

### Patch Changes

- e9f78999: fix: include esbuild config in adapter type definition ([#1954](https://github.com/sveltejs/kit/pull/1954))

## 1.0.0-next.34

### Patch Changes

- e6995797: feat(adapters): expose esbuild configuration ([#1914](https://github.com/sveltejs/kit/pull/1914))

## 1.0.0-next.33

### Patch Changes

- 463199c: Handle Uint8Array bodies from endpoints ([#1875](https://github.com/sveltejs/kit/pull/1875))
- 0db0889: log both host and port ([#1877](https://github.com/sveltejs/kit/pull/1877))

## 1.0.0-next.32

### Patch Changes

- 2ac5781: Use esbuild inject API to insert shims ([#1822](https://github.com/sveltejs/kit/pull/1822))

## 1.0.0-next.31

### Patch Changes

- c639586: Check if '[out]/prerendered' exists, before precompressing ([#1806](https://github.com/sveltejs/kit/pull/1806))

## 1.0.0-next.30

### Patch Changes

- 9f0c54a: Externalize app initialization to adapters ([#1804](https://github.com/sveltejs/kit/pull/1804))

## 1.0.0-next.29

### Patch Changes

- aa5cf15: Fix regression caused by writing `env.js` to the wrong path ([#1756](https://github.com/sveltejs/kit/pull/1756))

## 1.0.0-next.28

### Patch Changes

- 1c8bdba: Allow the environment variables containing the host and port to serve on to be customised ([#1754](https://github.com/sveltejs/kit/pull/1754))

## 1.0.0-next.27

### Patch Changes

- 926481f: precompress assets and prerendered pages (html,js,json,css,svg,xml) ([#1693](https://github.com/sveltejs/kit/pull/1693))
- 318cdd7: Only cache files in config.kit.appDir ([#1416](https://github.com/sveltejs/kit/pull/1416))

## 1.0.0-next.26

### Patch Changes

- 9a7195b: Allow sirv to looks for precompiled gzip and brotli files by default ([#1672](https://github.com/sveltejs/kit/pull/1672))
- 53f3322: Fix build when using TypeScript and there is a `tsconfig.json` with `target: 'es2019'` or earlier ([#1675](https://github.com/sveltejs/kit/pull/1675))

## 1.0.0-next.25

### Patch Changes

- 0b780a6: Bundle server-side app during adapt phase ([#1648](https://github.com/sveltejs/kit/pull/1648))

## 1.0.0-next.24

### Patch Changes

- edc307d: Remove peerDependencies due to pnpm bug ([#1621](https://github.com/sveltejs/kit/pull/1621))
- 2636e68: Attempt to fix peerDependencies specification ([#1620](https://github.com/sveltejs/kit/pull/1620))

## 1.0.0-next.23

### Patch Changes

- c3d36a3: ensure `content-length` limit respected; handle `getRawBody` error(s) ([#1528](https://github.com/sveltejs/kit/pull/1528))
- bf77940: bump `polka` and `sirv` dependency versions ([#1548](https://github.com/sveltejs/kit/pull/1548))
- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))
- Updated dependencies [6372690]
- Updated dependencies [c3d36a3]
- Updated dependencies [bf77940]
- Updated dependencies [2172469]
- Updated dependencies [028abd9]
  - @sveltejs/kit@1.0.0-next.110

## 1.0.0-next.22

### Patch Changes

- dca4946: Make kit a peerDependency of the adapters ([#1505](https://github.com/sveltejs/kit/pull/1505))
- Updated dependencies [261ee1c]
- Updated dependencies [ec156c6]
- Updated dependencies [586785d]
  - @sveltejs/kit@1.0.0-next.109

## 1.0.0-next.21

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))

## 1.0.0-next.20

### Patch Changes

- 9b448a6: Rename @sveltejs/kit/http to @sveltejs/kit/node ([#1391](https://github.com/sveltejs/kit/pull/1391))

## 1.0.0-next.19

### Patch Changes

- 0e09581: Make host configurable via process.env.HOST ([#1366](https://github.com/sveltejs/kit/pull/1366))

## 1.0.0-next.18

### Patch Changes

- c6fde99: Convert to ESM ([#1323](https://github.com/sveltejs/kit/pull/1323))

## 1.0.0-next.17

### Patch Changes

- 2e72a94: Add type declarations ([#1230](https://github.com/sveltejs/kit/pull/1230))

## 1.0.0-next.16

### Patch Changes

- 1237eb3: Use getRawBody ([#1109](https://github.com/sveltejs/kit/pull/1109))

## 1.0.0-next.15

### Patch Changes

- 7a4b351: Use install-fetch helper ([#1091](https://github.com/sveltejs/kit/pull/1091))

## 1.0.0-next.14

### Patch Changes

- 8e61e84: Include missing entrypoint ([#1071](https://github.com/sveltejs/kit/pull/1071))

## 1.0.0-next.13

### Patch Changes

- 6e27880: Move server-side fetch to adapters instead of build step ([#1066](https://github.com/sveltejs/kit/pull/1066))

## 1.0.0-next.12

### Patch Changes

- feb2db7: Fix fatal error when trying to parse URLs of incoming requests ([#802](https://github.com/sveltejs/kit/pull/802))

## 1.0.0-next.11

### Patch Changes

- ca33a35: Fix adapter-vercel query parsing and update adapter-node's ([#774](https://github.com/sveltejs/kit/pull/774))

## 1.0.0-next.10

### Patch Changes

- 8024178: remove @sveltejs/app-utils ([#600](https://github.com/sveltejs/kit/pull/600))

## 1.0.0-next.9

### Patch Changes

- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 1.0.0-next.8

### Patch Changes

- 9212aa5: Add options to adapter-node, and add adapter types ([#531](https://github.com/sveltejs/kit/pull/531))

## 1.0.0-next.7

### Patch Changes

- f35a5cd: Change adapter signature ([#505](https://github.com/sveltejs/kit/pull/505))

## 1.0.0-next.6

### Patch Changes

- c3cf3f3: Bump deps ([#492](https://github.com/sveltejs/kit/pull/492))

## 1.0.0-next.5

### Patch Changes

- 222fe9d: Compress adapter-node responses ([#367](https://github.com/sveltejs/kit/pull/367))

## 1.0.0-next.4

### Patch Changes

- Make adapter node work under esm

## 1.0.0-next.3

### Patch Changes

- ab2367d: Convert to ESM ([#387](https://github.com/sveltejs/kit/pull/387))

## 1.0.0-next.2

### Patch Changes

- Fix adapters and convert to ES modules

## 1.0.0-next.1

### Patch Changes

- 13e8fa3: Make adapter-node work

## 0.0.18

### Patch Changes

- b3ac507: Add missing pkg.files

## 0.0.17

### Patch Changes

- Add svelte-kit start command

## 0.0.16

### Patch Changes

- Make paths and target configurable

## 0.0.15

### Patch Changes

- b475ed4: Overhaul adapter API - fixes #166 ([#180](https://github.com/sveltejs/kit/pull/180))
- Updated dependencies [b475ed4]
  - @sveltejs/app-utils@0.0.18

## 0.0.14

### Patch Changes

- Updated dependencies [3bdf33b]
  - @sveltejs/app-utils@0.0.17

## 0.0.13

### Patch Changes

- 67eaeea: Move app-utils stuff into subpackages
- Updated dependencies [67eaeea]
  - @sveltejs/app-utils@0.0.16

## 0.0.12

### Patch Changes

- a163000: Parse body on incoming requests
- Updated dependencies [a163000]
  - @sveltejs/app-utils@0.0.15

## 0.0.11

### Patch Changes

- Use setup module
- Updated dependencies [undefined]
- Updated dependencies [undefined]
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.14

## 0.0.10

### Patch Changes

- Updated dependencies [undefined]
- Updated dependencies [96c06d8]
  - @sveltejs/app-utils@0.0.13

## 0.0.9

### Patch Changes

- 0320208: Rename 'server route' to 'endpoint'
- 026acd2: Accommodate missing build/prerendered directory
- 8b63057: Let sirv add must-revalidate
- Updated dependencies [0320208]
- Updated dependencies [5ca907c]
  - @sveltejs/app-utils@0.0.12

## 0.0.8

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.11

## 0.0.7

### Patch Changes

- 19323e9: Fix prerendering
- Updated dependencies [19323e9]
  - @sveltejs/app-utils@0.0.10

## 0.0.6

### Patch Changes

- Updated dependencies [90a98ae]
  - @sveltejs/app-utils@0.0.9

## 0.0.5

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.8

## 0.0.4

### Patch Changes

- various
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.7

'''
'''--- packages/adapter-node/README.md ---
# @sveltejs/adapter-node

[Adapter](https://svelte.dev/docs/kit/adapters) for SvelteKit apps that generates a standalone Node server.

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-node)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-node/CHANGELOG.md).

## License

[MIT](LICENSE)

'''
'''--- packages/adapter-static/CHANGELOG.md ---
# @sveltejs/adapter-static

## 3.0.6
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 3.0.5
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

- Updated dependencies [[`e798ef718f163bed4f93e1918bd8294f765376ad`](https://github.com/sveltejs/kit/commit/e798ef718f163bed4f93e1918bd8294f765376ad)]:
  - @sveltejs/kit@2.5.28

## 3.0.4
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 3.0.3
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 3.0.2

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 3.0.1

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 3.0.0

### Major Changes

- breaking: update SvelteKit peer dependency to version 2 ([#11277](https://github.com/sveltejs/kit/pull/11277))

## 2.0.3

### Patch Changes

- fix: correctly list dynamic routes in error log ([#10443](https://github.com/sveltejs/kit/pull/10443))

## 2.0.2

### Patch Changes

- fix: update broken link in error message ([`118ce5a0`](https://github.com/sveltejs/kit/commit/118ce5a07a3a984353c3fc858b34c67e9e560fa0))

- Updated dependencies [[`748a8720`](https://github.com/sveltejs/kit/commit/748a8720fea8ea938576041207b81e19bb8f7dff)]:
  - @sveltejs/kit@1.15.3

## 2.0.1

### Patch Changes

- fix: generate fallback page before compressing ([#8972](https://github.com/sveltejs/kit/pull/8972))

- Updated dependencies [[`0abb8ebf`](https://github.com/sveltejs/kit/commit/0abb8ebffc6121f81c2bbfa0a0f68866d4cc1627), [`bef54f63`](https://github.com/sveltejs/kit/commit/bef54f63d2315066d30e8f1bcf471ddf2bd72c35), [`51cd6e64`](https://github.com/sveltejs/kit/commit/51cd6e643178e3a113fc2c3e8a63755bcbfe902d), [`930c8e4e`](https://github.com/sveltejs/kit/commit/930c8e4ee2e3046ed1b622777dafa23029a19fe5), [`ee8066fc`](https://github.com/sveltejs/kit/commit/ee8066fcb29ed1e7e3ab513cabb7997e38c984f2), [`49d2ec62`](https://github.com/sveltejs/kit/commit/49d2ec62e6385694f11701bf2fa411d07449344c), [`eb943565`](https://github.com/sveltejs/kit/commit/eb943565a4324dbed3da5a581924ca91a24366de)]:
  - @sveltejs/kit@1.5.3

## 2.0.0

### Major Changes

- breaking: bump `@sveltejs/kit` peer dependency ([#8740](https://github.com/sveltejs/kit/pull/8740))

### Patch Changes

- Updated dependencies [[`c7648f66`](https://github.com/sveltejs/kit/commit/c7648f6608a413e2654625cbd30f890d2148cf13), [`63613bf1`](https://github.com/sveltejs/kit/commit/63613bf194c18ce50e111585ad770fc93f9e43c7), [`d1f7655e`](https://github.com/sveltejs/kit/commit/d1f7655efdff70d91f94fe0cb0de50ed2511b5e5)]:
  - @sveltejs/kit@1.5.0

## 1.0.6

### Patch Changes

- docs: fix link in README ([#8854](https://github.com/sveltejs/kit/pull/8854))

- Updated dependencies [[`7cdb7a65`](https://github.com/sveltejs/kit/commit/7cdb7a65819342c6d334c79defc697d531d5cbf4)]:
  - @sveltejs/kit@1.3.10

## 1.0.5

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.4

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.0.3

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.2

### Patch Changes

- docs: clarify that you can build SPAs with adapter-static ([#8502](https://github.com/sveltejs/kit/pull/8502))

## 1.0.1

### Patch Changes

- fix: match `adapter-vercel` logic for serving prerendered content ([#8332](https://github.com/sveltejs/kit/pull/8332))

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.50

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.49

### Patch Changes

- breaking: replace automatic fallback generation with `builder.generateFallback(fallback)` ([#8013](https://github.com/sveltejs/kit/pull/8013))

## 1.0.0-next.48

### Patch Changes

- Update README ([#7480](https://github.com/sveltejs/kit/pull/7480))

## 1.0.0-next.47

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.46

### Patch Changes

- Make options object optional ([#7341](https://github.com/sveltejs/kit/pull/7341))

## 1.0.0-next.45

### Patch Changes

- feat: more info about prerendering errors, add strict option to adapter-static ([#7264](https://github.com/sveltejs/kit/pull/7264))

## 1.0.0-next.44

### Patch Changes

- fix error message ([#7108](https://github.com/sveltejs/kit/pull/7108))

## 1.0.0-next.43

### Patch Changes

- Improve performance by compressing in parallel ([#6710](https://github.com/sveltejs/kit/pull/6710))

## 1.0.0-next.42

### Patch Changes

- docs: more specific error message when prerendering fails ([#6577](https://github.com/sveltejs/kit/pull/6577))

## 1.0.0-next.41

### Patch Changes

- Better error when encountering not-fully-prerenderable routes ([#6474](https://github.com/sveltejs/kit/pull/6474))

## 1.0.0-next.40

### Patch Changes

- breaking: require all routes to be prerenderable when not using fallback option ([#6392](https://github.com/sveltejs/kit/pull/6392))

## 1.0.0-next.39

### Patch Changes

- Move `compress` logic to `Builder` API ([#5822](https://github.com/sveltejs/kit/pull/5822))

## 1.0.0-next.38

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.37

### Patch Changes

- breaking: Throws when correctly configured to run as a static site of a SPA ([#5562](https://github.com/sveltejs/kit/pull/5562))

## 1.0.0-next.36

### Patch Changes

- Remove ENABLE_VC_BUILD check, use v3 build output API for all apps deployed to Vercel ([#5514](https://github.com/sveltejs/kit/pull/5514))

## 1.0.0-next.35

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.34

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.33

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.32

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.31

### Patch Changes

- Tweak fallback page README ([#4954](https://github.com/sveltejs/kit/pull/4954))

## 1.0.0-next.30

### Patch Changes

- Bump version to trigger README update on npm ([#4875](https://github.com/sveltejs/kit/pull/4875))

## 1.0.0-next.29

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.28

### Patch Changes

- breaking: remove `createIndexFiles` option, derive from `trailingSlash` instead ([#3801](https://github.com/sveltejs/kit/pull/3801))

## 1.0.0-next.27

### Patch Changes

- `precompress` option also compress wasm files ([#3790](https://github.com/sveltejs/kit/pull/3790))

## 1.0.0-next.26

### Patch Changes

- Log adapter-static output directories ([#3274](https://github.com/sveltejs/kit/pull/3274))

## 1.0.0-next.25

### Patch Changes

- chore: update dependency sirv to v2 ([#3263](https://github.com/sveltejs/kit/pull/3263))

## 1.0.0-next.24

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))

## 1.0.0-next.23

### Patch Changes

- add precompress option to adapter-static ([#3079](https://github.com/sveltejs/kit/pull/3079))

## 1.0.0-next.22

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.21

### Patch Changes

- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))

## 1.0.0-next.20

### Patch Changes

- chore: upgrade to Svelte 3.43.0" ([#2474](https://github.com/sveltejs/kit/pull/2474))

## 1.0.0-next.19

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.18

### Patch Changes

- chore: export package.json from adapters ([#2351](https://github.com/sveltejs/kit/pull/2351))

## 1.0.0-next.17

### Patch Changes

- Clear output before adapting ([#2260](https://github.com/sveltejs/kit/pull/2260))

## 1.0.0-next.16

### Patch Changes

- 94b34fa6: [breaking] standardize final output dir as /build (vs /.svelte-kit) ([#2109](https://github.com/sveltejs/kit/pull/2109))

## 1.0.0-next.15

### Patch Changes

- b3e7c8b3: [chore] update build output location ([#2082](https://github.com/sveltejs/kit/pull/2082))

## 1.0.0-next.14

### Patch Changes

- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))

## 1.0.0-next.13

### Patch Changes

- edc307d: Remove peerDependencies due to pnpm bug ([#1621](https://github.com/sveltejs/kit/pull/1621))
- 2636e68: Attempt to fix peerDependencies specification ([#1620](https://github.com/sveltejs/kit/pull/1620))

## 1.0.0-next.12

### Patch Changes

- bf77940: bump `polka` and `sirv` dependency versions ([#1548](https://github.com/sveltejs/kit/pull/1548))
- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))
- Updated dependencies [6372690]
- Updated dependencies [c3d36a3]
- Updated dependencies [bf77940]
- Updated dependencies [2172469]
- Updated dependencies [028abd9]
  - @sveltejs/kit@1.0.0-next.110

## 1.0.0-next.11

### Patch Changes

- dca4946: Make kit a peerDependency of the adapters ([#1505](https://github.com/sveltejs/kit/pull/1505))
- Updated dependencies [261ee1c]
- Updated dependencies [ec156c6]
- Updated dependencies [586785d]
  - @sveltejs/kit@1.0.0-next.109

## 1.0.0-next.10

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))

## 1.0.0-next.9

### Patch Changes

- d871213: Remove Vite dependency from apps ([#1374](https://github.com/sveltejs/kit/pull/1374))

## 1.0.0-next.8

### Patch Changes

- c6fde99: Convert to ESM ([#1323](https://github.com/sveltejs/kit/pull/1323))

## 1.0.0-next.7

### Patch Changes

- 2e72a94: Add type declarations ([#1230](https://github.com/sveltejs/kit/pull/1230))

## 1.0.0-next.6

### Patch Changes

- 6f2b4a6: Remove references to npm start ([#1196](https://github.com/sveltejs/kit/pull/1196))

## 1.0.0-next.5

### Patch Changes

- 4131467: Prerender fallback page for SPAs ([#1181](https://github.com/sveltejs/kit/pull/1181))

## 1.0.0-next.4

### Patch Changes

- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 1.0.0-next.3

### Patch Changes

- f35a5cd: Change adapter signature ([#505](https://github.com/sveltejs/kit/pull/505))

## 1.0.0-next.2

### Patch Changes

- Fix adapters and convert to ES modules

## 1.0.0-next.1

### Patch Changes

- Support options

## 0.0.17

### Patch Changes

- Add svelte-kit start command

## 0.0.16

### Patch Changes

- Remove unnecessary prepublish script

## 0.0.15

### Patch Changes

- b475ed4: Overhaul adapter API - fixes #166 ([#180](https://github.com/sveltejs/kit/pull/180))

## 0.0.14

### Patch Changes

- Updated dependencies [3bdf33b]
  - @sveltejs/app-utils@0.0.17

## 0.0.13

### Patch Changes

- 67eaeea: Move app-utils stuff into subpackages
- Updated dependencies [67eaeea]
  - @sveltejs/app-utils@0.0.16

## 0.0.12

### Patch Changes

- Updated dependencies [a163000]
  - @sveltejs/app-utils@0.0.15

## 0.0.11

### Patch Changes

- Updated dependencies [undefined]
- Updated dependencies [undefined]
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.14

## 0.0.10

### Patch Changes

- Updated dependencies [undefined]
- Updated dependencies [96c06d8]
  - @sveltejs/app-utils@0.0.13

## 0.0.9

### Patch Changes

- Updated dependencies [0320208]
- Updated dependencies [5ca907c]
  - @sveltejs/app-utils@0.0.12

## 0.0.8

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.11

## 0.0.7

### Patch Changes

- Updated dependencies [19323e9]
  - @sveltejs/app-utils@0.0.10

## 0.0.6

### Patch Changes

- Updated dependencies [90a98ae]
  - @sveltejs/app-utils@0.0.9

## 0.0.5

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.8

## 0.0.4

### Patch Changes

- various
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.7

'''
'''--- packages/adapter-static/README.md ---
# @sveltejs/adapter-static

[Adapter](https://svelte.dev/docs/kit/adapters) for SvelteKit apps that prerenders your entire site as a collection of static files. It's also possible to create an SPA with it by specifying a fallback page which renders an empty shell. If you'd like to prerender only some pages and not create an SPA for those left out, you will need to use a different adapter together with [the `prerender` option](https://svelte.dev/docs/kit/page-options#prerender).

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-static)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-static/CHANGELOG.md).

## License

[MIT](LICENSE)

'''
'''--- packages/adapter-static/test/apps/spa/README.md ---
# create-svelte

Everything you need to build a Svelte project, powered by [`create-svelte`](https://github.com/sveltejs/kit/tree/main/packages/create-svelte);

## Creating a project

If you're seeing this, you've probably already done this step. Congrats!

```bash
# create a new project in the current directory
npm init svelte

# create a new project in my-app
npm init svelte my-app
```

## Developing

Once you've created a project and installed dependencies with `npm install` (or `pnpm install` or `yarn`), start a development server:

```bash
npm run dev

# or start the server and open the app in a new browser tab
npm run dev -- --open
```

## Building

Before creating a production version of your app, install an [adapter](https://svelte.dev/docs/kit/adapters) for your target environment. Then:

```bash
npm run build
```

> You can preview the built app with `npm run preview`, regardless of whether you installed an adapter. This should _not_ be used to serve your app in production.

'''
'''--- packages/adapter-vercel/CHANGELOG.md ---
# @sveltejs/adapter-vercel

## 5.5.0
### Minor Changes

- chore: upgrade esbuild to 0.24.0 ([#12270](https://github.com/sveltejs/kit/pull/12270))

### Patch Changes

- Updated dependencies [[`d030f4bb285e70844d09b3f0c87809bae43014b8`](https://github.com/sveltejs/kit/commit/d030f4bb285e70844d09b3f0c87809bae43014b8), [`67dd214863cbc5852eb0e8512efbb7bad5358e8a`](https://github.com/sveltejs/kit/commit/67dd214863cbc5852eb0e8512efbb7bad5358e8a)]:
  - @sveltejs/kit@2.9.0

## 5.4.8
### Patch Changes

- chore: support building with Node 22 ([#13043](https://github.com/sveltejs/kit/pull/13043))

- Updated dependencies [[`570562b74d9e9f295d9b617478088a650f51e96b`](https://github.com/sveltejs/kit/commit/570562b74d9e9f295d9b617478088a650f51e96b), [`1358cccd52190df3c74bdd8970dbfb06ffc4ec72`](https://github.com/sveltejs/kit/commit/1358cccd52190df3c74bdd8970dbfb06ffc4ec72)]:
  - @sveltejs/kit@2.8.2

## 5.4.7
### Patch Changes

- fix: disregard presence/absence of trailing slash in prerendered redirect ([#12966](https://github.com/sveltejs/kit/pull/12966))

- Updated dependencies [[`92b2686314a7dbebee1761c3da7719d599f003c7`](https://github.com/sveltejs/kit/commit/92b2686314a7dbebee1761c3da7719d599f003c7)]:
  - @sveltejs/kit@2.8.0

## 5.4.6
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 5.4.5
### Patch Changes

- fix: updated `@default` annotation for runtime ([#12717](https://github.com/sveltejs/kit/pull/12717))

- Updated dependencies [[`3591411e880ed5337123c66365433afe8c2f747b`](https://github.com/sveltejs/kit/commit/3591411e880ed5337123c66365433afe8c2f747b), [`2292170ecba27c70600fae0c2adc473ac9d938e8`](https://github.com/sveltejs/kit/commit/2292170ecba27c70600fae0c2adc473ac9d938e8), [`809983f377f0b18c4651a8a4f3af7b69c0df20ab`](https://github.com/sveltejs/kit/commit/809983f377f0b18c4651a8a4f3af7b69c0df20ab)]:
  - @sveltejs/kit@2.6.3

## 5.4.4
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

- Updated dependencies [[`e798ef718f163bed4f93e1918bd8294f765376ad`](https://github.com/sveltejs/kit/commit/e798ef718f163bed4f93e1918bd8294f765376ad)]:
  - @sveltejs/kit@2.5.28

## 5.4.3
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 5.4.2
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 5.4.1
### Patch Changes

- fix: copy `.eot`, `.otf`, `.ttf`, `.woff`, and `woff2` font files when bundling ([#12439](https://github.com/sveltejs/kit/pull/12439))

## 5.4.0
### Minor Changes

- chore(deps): upgrade to esbuild 0.21 ([#12415](https://github.com/sveltejs/kit/pull/12415))

### Patch Changes

- Updated dependencies [[`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4), [`5645614f497931f587b7cb8b3c885fce892a6a72`](https://github.com/sveltejs/kit/commit/5645614f497931f587b7cb8b3c885fce892a6a72), [`84298477a014ec471839adf7a4448d91bc7949e4`](https://github.com/sveltejs/kit/commit/84298477a014ec471839adf7a4448d91bc7949e4)]:
  - @sveltejs/kit@2.5.18

## 5.3.2

### Patch Changes

- fix: remove `images` from route-level config ([#12280](https://github.com/sveltejs/kit/pull/12280))

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 5.3.1

### Patch Changes

- chore(deps): upgrade to `@vercel/nft` version 0.27.1 ([#12274](https://github.com/sveltejs/kit/pull/12274))

## 5.3.0

### Minor Changes

- chore(deps): upgrade esbuild ([#12118](https://github.com/sveltejs/kit/pull/12118))

### Patch Changes

- Updated dependencies [[`bbab296f6fcc05af6b999182798bcdedabbaa4c9`](https://github.com/sveltejs/kit/commit/bbab296f6fcc05af6b999182798bcdedabbaa4c9)]:
  - @sveltejs/kit@2.5.6

## 5.2.0

### Minor Changes

- feat: add framework metadata in Vercel build output files ([#11800](https://github.com/sveltejs/kit/pull/11800))

- feat: implement version skew protection ([#11987](https://github.com/sveltejs/kit/pull/11987))

## 5.1.1

### Patch Changes

- fix: handle optional and rest routes for incremental static regeneration (ISR) correctly ([#11928](https://github.com/sveltejs/kit/pull/11928))

## 5.1.0

### Minor Changes

- feat: allow compatible subset of Node.js built-in modules when targeting edge functions ([#11675](https://github.com/sveltejs/kit/pull/11675))

### Patch Changes

- Updated dependencies [[`36dc54ac740b8b4c6a2b904a1d0aadd8923a875c`](https://github.com/sveltejs/kit/commit/36dc54ac740b8b4c6a2b904a1d0aadd8923a875c), [`5dae3676b8cc6f8ee0def57340e6a6e591bafecd`](https://github.com/sveltejs/kit/commit/5dae3676b8cc6f8ee0def57340e6a6e591bafecd), [`ada595908b5501b8f4ac30c89c0d6314f364fde3`](https://github.com/sveltejs/kit/commit/ada595908b5501b8f4ac30c89c0d6314f364fde3), [`e228f8997840b89c6248e1c5df6f3108008a06be`](https://github.com/sveltejs/kit/commit/e228f8997840b89c6248e1c5df6f3108008a06be)]:
  - @sveltejs/kit@2.4.1

## 5.0.0

### Major Changes

- breaking: update peer dependency on `@sveltejs/kit` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Minor Changes

- feat: support `read` from `$app/server` ([#11649](https://github.com/sveltejs/kit/pull/11649))

### Patch Changes

- Updated dependencies [[`288f731c8a5b20cadb9e219f9583f3f16bf8c7b8`](https://github.com/sveltejs/kit/commit/288f731c8a5b20cadb9e219f9583f3f16bf8c7b8)]:
  - @sveltejs/kit@2.4.0

## 4.0.5

### Patch Changes

- chore: upgrade esbuild to 0.19.11 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 4.0.4

### Patch Changes

- fix: update @vercel/nft to 0.26.1 ([#11508](https://github.com/sveltejs/kit/pull/11508))

## 4.0.3

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- Updated dependencies [[`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d), [`16961e8cd3fa6a7f382153b1ff056bc2aae9b31b`](https://github.com/sveltejs/kit/commit/16961e8cd3fa6a7f382153b1ff056bc2aae9b31b), [`197e01f95652f511160f38b37b9da73a124ecd48`](https://github.com/sveltejs/kit/commit/197e01f95652f511160f38b37b9da73a124ecd48), [`102e4a5ae5b29624302163faf5a20c94a64a5b2c`](https://github.com/sveltejs/kit/commit/102e4a5ae5b29624302163faf5a20c94a64a5b2c), [`f8e3d8b9728c9f1ab63389342c31d7246b6f9db6`](https://github.com/sveltejs/kit/commit/f8e3d8b9728c9f1ab63389342c31d7246b6f9db6)]:
  - @sveltejs/kit@2.0.4

## 4.0.2

### Patch Changes

- fix: remove broken node 16 support ([#11328](https://github.com/sveltejs/kit/pull/11328))

## 4.0.1

### Patch Changes

- chore(deps): update `@vercel/nft` ([#11281](https://github.com/sveltejs/kit/pull/11281))

## 4.0.0

### Major Changes

- breaking: require SvelteKit 2 peer dependency ([#11289](https://github.com/sveltejs/kit/pull/11289))

- chore: upgrade esbuild ([#11122](https://github.com/sveltejs/kit/pull/11122))

### Minor Changes

- feat: expose vercel image optimization config in adapter config ([#8667](https://github.com/sveltejs/kit/pull/8667))

## 3.1.0

### Minor Changes

- feat: add support for nodejs20.x ([#11067](https://github.com/sveltejs/kit/pull/11067))

## 3.0.3

### Patch Changes

- chore: upgrade to @vercel/nft version 0.23.0 ([#10445](https://github.com/sveltejs/kit/pull/10445))

- Updated dependencies [[`0f0049810`](https://github.com/sveltejs/kit/commit/0f00498100361ef0a4ea8b0b4e8465e442fa22a6), [`6f36aefe1`](https://github.com/sveltejs/kit/commit/6f36aefe13bf55cfaef14166c60ecee989061ddd)]:
  - @sveltejs/kit@1.22.4

## 3.0.2

### Patch Changes

- chore: upgrade to esbuild 0.18.11 ([#10330](https://github.com/sveltejs/kit/pull/10330))

- Updated dependencies [[`23d1df702`](https://github.com/sveltejs/kit/commit/23d1df702f0fd77983040404352d8d83fd1dd8a1), [`486a971fe`](https://github.com/sveltejs/kit/commit/486a971fe7c375aae1585f1fa2505e28f86f4b8e)]:
  - @sveltejs/kit@1.22.2

## 3.0.1

### Patch Changes

- fix: stop incorrectly warning users that crons don't match paths ([#10074](https://github.com/sveltejs/kit/pull/10074))

- Updated dependencies [[`d4de2049c`](https://github.com/sveltejs/kit/commit/d4de2049cd05c7b32cfbe1b0e63b58f345f13372)]:
  - @sveltejs/kit@1.20.1

## 3.0.0

### Major Changes

- breaking: remove obsolete `envVarsInUse` option ([#9942](https://github.com/sveltejs/kit/pull/9942))

### Patch Changes

- fix: Copy .wasm files during build ([#9944](https://github.com/sveltejs/kit/pull/9944))

- Updated dependencies [[`50acb22ca`](https://github.com/sveltejs/kit/commit/50acb22caf2901283e044cdfda36db6f07b3e0ae), [`2e6da9496`](https://github.com/sveltejs/kit/commit/2e6da9496bdace2c65040b9d1845c44801ca868c), [`a81106b3a`](https://github.com/sveltejs/kit/commit/a81106b3a817829c41e048207d6253e63988c58c), [`a6338a0b1`](https://github.com/sveltejs/kit/commit/a6338a0b124f54bda7ba3fe64be1d6173e118d00), [`4a85b7f08`](https://github.com/sveltejs/kit/commit/4a85b7f0820d35c7830c00afe1df3c94fcbf8c3d), [`26d2b7f8f`](https://github.com/sveltejs/kit/commit/26d2b7f8f5ca29c60ef61b936ff86deaeb1636ce), [`bc70b4e63`](https://github.com/sveltejs/kit/commit/bc70b4e636fcbd9593356996bf737e014ff8c238), [`ab9f57721`](https://github.com/sveltejs/kit/commit/ab9f57721fca146af7c4eb41f4875fafa5dfc0d2)]:
  - @sveltejs/kit@1.17.0

## 2.4.3

### Patch Changes

- chore: update all dependencies with minor version bumps ([#9761](https://github.com/sveltejs/kit/pull/9761))

## 2.4.2

### Patch Changes

- fix: construct correct pathname for isr from route with nested params ([#9470](https://github.com/sveltejs/kit/pull/9470))

- Updated dependencies [[`84a5250d`](https://github.com/sveltejs/kit/commit/84a5250d5fe80a87eb7df5569e76a1dde857aa82), [`95e95828`](https://github.com/sveltejs/kit/commit/95e95828f444a35ca3f71eb1350c6630895c02c9), [`367067f5`](https://github.com/sveltejs/kit/commit/367067f547bb78c61f511e88b9361632862cb4ee), [`e9dd2559`](https://github.com/sveltejs/kit/commit/e9dd2559445958c2fdcb4faa2d94bccac2f1f950), [`ae2f4a8c`](https://github.com/sveltejs/kit/commit/ae2f4a8caacfb671db159f3cdce0894beb485b4f)]:
  - @sveltejs/kit@1.15.7

## 2.4.1

### Patch Changes

- fix: create separate functions for ISR routes ([#9504](https://github.com/sveltejs/kit/pull/9504))

## 2.4.0

### Minor Changes

- feat: warn when prerender setting makes isr config useless ([#9436](https://github.com/sveltejs/kit/pull/9436))

### Patch Changes

- fix: don't show cron warning when everything's valid ([#9436](https://github.com/sveltejs/kit/pull/9436))

- fix: allow to set isr to false to clear isr config in leafs ([#9436](https://github.com/sveltejs/kit/pull/9436))

## 2.3.2

### Patch Changes

- fix: throw error if `isr` is combined with `runtime: 'edge'` ([#9432](https://github.com/sveltejs/kit/pull/9432))

- Updated dependencies [[`385bd49e`](https://github.com/sveltejs/kit/commit/385bd49efb6890078dcdb523fdf5b621fe1c3e72), [`29ffc785`](https://github.com/sveltejs/kit/commit/29ffc78560a99ce387b10a24f48b7f01205f51e7), [`d257d37d`](https://github.com/sveltejs/kit/commit/d257d37d3cac94f30befa9fe38c2987f84fb551a), [`c45c35e7`](https://github.com/sveltejs/kit/commit/c45c35e7b40837cd1bea3fc26cfb831478e03c00), [`75e2c6f7`](https://github.com/sveltejs/kit/commit/75e2c6f7c8376685317b669767c7767fd21670eb), [`1c085780`](https://github.com/sveltejs/kit/commit/1c08578031395377a98b365a27eb9587594dd06e)]:
  - @sveltejs/kit@1.12.0

## 2.3.1

### Patch Changes

- docs: remove comment discourage direct use of adapters ([#9344](https://github.com/sveltejs/kit/pull/9344))

- Updated dependencies [[`b575287d`](https://github.com/sveltejs/kit/commit/b575287d063562868d7726f6451352aa43a63453), [`8114c658`](https://github.com/sveltejs/kit/commit/8114c658c0bc053198ff76704c002cfeb8225e2a), [`620f5605`](https://github.com/sveltejs/kit/commit/620f56058de0993e776c146db4c19fca97b9cb39), [`6a91e887`](https://github.com/sveltejs/kit/commit/6a91e887ee4c1bef8aabfafbf1ab6079113c2832), [`1c32723a`](https://github.com/sveltejs/kit/commit/1c32723a52beca0c5aa895b1114341da78d92eaf), [`0f863bbc`](https://github.com/sveltejs/kit/commit/0f863bbc957ab2ed37b04ebd839fc864b945034d), [`78b4a1bb`](https://github.com/sveltejs/kit/commit/78b4a1bb5e1ae11a894d70a0a28cc344ea0b1284), [`66b2f4ef`](https://github.com/sveltejs/kit/commit/66b2f4ef03a5dd60da2757edde4effcfdf3183cf), [`5dada256`](https://github.com/sveltejs/kit/commit/5dada256dc05674a18946f8f19db1f25ba91aeaf), [`a71b5e69`](https://github.com/sveltejs/kit/commit/a71b5e69ef37ce46e8e8590d537036cb7e267d51), [`daad7e48`](https://github.com/sveltejs/kit/commit/daad7e48b175245cbb7efd0e255263bfb52a5ee6), [`18d330b1`](https://github.com/sveltejs/kit/commit/18d330b16330d76c4b2991839c6b4462d5a4163f), [`18d7e81a`](https://github.com/sveltejs/kit/commit/18d7e81a9892e718c3cd07b2366a60f2e09561ab)]:
  - @sveltejs/kit@1.11.0

## 2.3.0

### Minor Changes

- feat: provide access to request context via `event.platform` ([#9280](https://github.com/sveltejs/kit/pull/9280))

### Patch Changes

- Updated dependencies [[`2b647fd8`](https://github.com/sveltejs/kit/commit/2b647fd85be028bc5775894567ee8b13f91411a7), [`fbe4fe76`](https://github.com/sveltejs/kit/commit/fbe4fe768140abac09bd66edd12c77787cafc2c5), [`744dc81c`](https://github.com/sveltejs/kit/commit/744dc81c6b0d8cade087df733c6d3d3f1281e68c)]:
  - @sveltejs/kit@1.10.0

## 2.2.1

### Patch Changes

- fix: add catch-all route for 404s ([#9265](https://github.com/sveltejs/kit/pull/9265))

## 2.2.0

### Minor Changes

- feat: validate that Vercel cron paths match an API path ([#9145](https://github.com/sveltejs/kit/pull/9145))

## 2.1.1

### Patch Changes

- fix: move catch-all-regex to the end ([#9185](https://github.com/sveltejs/kit/pull/9185))

- fix: temporarily disable streaming when ISR is used ([#9197](https://github.com/sveltejs/kit/pull/9197))

## 2.1.0

### Minor Changes

- feat: enable experimental response streaming ([#9144](https://github.com/sveltejs/kit/pull/9144))

## 2.0.4

### Patch Changes

- fix: add leading / to isr routes ([#9100](https://github.com/sveltejs/kit/pull/9100))

## 2.0.3

### Patch Changes

- fix: get ISR working on Vercel ([#9063](https://github.com/sveltejs/kit/pull/9063))

## 2.0.2

### Patch Changes

- fix: mark `expiration` as required ([#8943](https://github.com/sveltejs/kit/pull/8943))

- Updated dependencies [[`1960296d`](https://github.com/sveltejs/kit/commit/1960296da62fdd4ad8e8bb7286940b98fbe8db0f), [`1beb19cb`](https://github.com/sveltejs/kit/commit/1beb19cb487bd6d719048f0feedcb2fbee91a005), [`b915dfe9`](https://github.com/sveltejs/kit/commit/b915dfe9d16a930246a469c9aea8c1a84e5157ba), [`a402d50b`](https://github.com/sveltejs/kit/commit/a402d50b33eba2a937d09e635275c319061ce678)]:
  - @sveltejs/kit@1.5.1

## 2.0.1

### Patch Changes

- chore: throw helpful migration error ([#8915](https://github.com/sveltejs/kit/pull/8915))

## 2.0.0

### Major Changes

- breaking: bump `@sveltejs/kit` peer dependency ([#8740](https://github.com/sveltejs/kit/pull/8740))

### Minor Changes

- feat: support route-level configuration options ([#8740](https://github.com/sveltejs/kit/pull/8740))

### Patch Changes

- Updated dependencies [[`c7648f66`](https://github.com/sveltejs/kit/commit/c7648f6608a413e2654625cbd30f890d2148cf13), [`63613bf1`](https://github.com/sveltejs/kit/commit/63613bf194c18ce50e111585ad770fc93f9e43c7), [`d1f7655e`](https://github.com/sveltejs/kit/commit/d1f7655efdff70d91f94fe0cb0de50ed2511b5e5)]:
  - @sveltejs/kit@1.5.0

## 1.0.6

### Patch Changes

- fix: add trailing slash -> no trailing slash redirect for prerendered pages ([#8766](https://github.com/sveltejs/kit/pull/8766))

- Updated dependencies [[`438e4318`](https://github.com/sveltejs/kit/commit/438e4318e96f3e192e273b95d20ee8f590e99829)]:
  - @sveltejs/kit@1.3.4

## 1.0.5

### Patch Changes

- docs: move adapter docs to site ([#8531](https://github.com/sveltejs/kit/pull/8531))

## 1.0.4

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.0.3

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.2

### Patch Changes

- docs: add note about inability to access file system at runtime ([#8441](https://github.com/sveltejs/kit/pull/8441))

- Updated dependencies [[`9c01c32e`](https://github.com/sveltejs/kit/commit/9c01c32ef72bbed630fadcb8283f8f8533ced5e1), [`b6ca02a6`](https://github.com/sveltejs/kit/commit/b6ca02a684dbf13a3138b552e2d2be64697f2254), [`130abe43`](https://github.com/sveltejs/kit/commit/130abe43cef2cfbaf922aa16b20cbd4332a07c15), [`c4137536`](https://github.com/sveltejs/kit/commit/c4137536f2c6572eaeec1a82ccea0852f5be6b98), [`40464efa`](https://github.com/sveltejs/kit/commit/40464efab172a17f0b637d7dadea30d77ef1ed10), [`ce028470`](https://github.com/sveltejs/kit/commit/ce0284708184198efdd30f3ff72fd579cef830b4)]:
  - @sveltejs/kit@1.0.12

## 1.0.1

### Patch Changes

- fix: only apply immutable cache-control headers to immutable assets ([#8332](https://github.com/sveltejs/kit/pull/8332))

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.88

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.87

### Patch Changes

- fix: revert platform change from browser to neutral ([#8122](https://github.com/sveltejs/kit/pull/8122))

## 1.0.0-next.86

### Patch Changes

- fix: set esbuild platform to neutral ([#8083](https://github.com/sveltejs/kit/pull/8083))

## 1.0.0-next.85

### Patch Changes

- update esbuild to ^0.16.3 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.84

### Patch Changes

- fix: Write redirects for prerendered pages with trailing slashes ([#7747](https://github.com/sveltejs/kit/pull/7747))

## 1.0.0-next.83

### Patch Changes

- fix: handle root route for split config ([#7741](https://github.com/sveltejs/kit/pull/7741))

## 1.0.0-next.82

### Patch Changes

- Handle redirects inside SvelteKit ([#7719](https://github.com/sveltejs/kit/pull/7719))

## 1.0.0-next.81

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.80

### Patch Changes

- fix: don't fail on unknown error message ([#7312](https://github.com/sveltejs/kit/pull/7312))

## 1.0.0-next.79

### Patch Changes

- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.78

### Patch Changes

- Transfer server data as devalue-encoded JSON ([#7177](https://github.com/sveltejs/kit/pull/7177))

## 1.0.0-next.77

### Patch Changes

- Redact error message if `getRequest` fails ([#6936](https://github.com/sveltejs/kit/pull/6936))

## 1.0.0-next.76

### Patch Changes

- chore: bump esbuild ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 1.0.0-next.75

### Patch Changes

- Ignore warnings when traced file fails to parse ([#6810](https://github.com/sveltejs/kit/pull/6810))

## 1.0.0-next.74

### Patch Changes

- Update to esbuild 0.15 ([#6740](https://github.com/sveltejs/kit/pull/6740))

## 1.0.0-next.73

### Patch Changes

- breaking: request creation cleanup ([#6681](https://github.com/sveltejs/kit/pull/6681))

## 1.0.0-next.72

### Patch Changes

- Fix `global is not defined` runtime error building with `edge: true` option ([#6425](https://github.com/sveltejs/kit/pull/6425))

## 1.0.0-next.71

### Patch Changes

- Use devalue to serialize server-only `load` return values ([#6318](https://github.com/sveltejs/kit/pull/6318))

## 1.0.0-next.70

### Patch Changes

- Don't use top-level-await, as it is not supported right now ([#6360](https://github.com/sveltejs/kit/pull/6360))

## 1.0.0-next.69

### Patch Changes

- Run `server.init()` for edge functions ([#6327](https://github.com/sveltejs/kit/pull/6327))

## 1.0.0-next.68

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.67

### Patch Changes

- Use `platform: 'browser'` for esbuild in Vercel Edge Functions. ([#6109](https://github.com/sveltejs/kit/pull/6109))

## 1.0.0-next.66

### Patch Changes

- Initialise `env` ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.65

### Patch Changes

- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))

## 1.0.0-next.64

### Patch Changes

- Don't remove .vercel/output directory ([#5555](https://github.com/sveltejs/kit/pull/5555))

## 1.0.0-next.63

### Patch Changes

- Print friendlier message if adapter-vercel fails to resolve dependencies ([#5551](https://github.com/sveltejs/kit/pull/5551))

## 1.0.0-next.62

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.61

### Patch Changes

- Remove ENABLE_VC_BUILD check, use v3 build output API for all apps deployed to Vercel ([#5514](https://github.com/sveltejs/kit/pull/5514))

## 1.0.0-next.60

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.59

### Patch Changes

- Add sourcemap generation for the generated functions ([#5197](https://github.com/sveltejs/kit/pull/5197))

## 1.0.0-next.58

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))

## 1.0.0-next.57

### Patch Changes

- Update adapter entrypoint typings to be NodeNext/ESNext-compatible ([#5111](https://github.com/sveltejs/kit/pull/5111))

## 1.0.0-next.56

### Patch Changes

- Use @vercel/nft to include dependencies in lambda without bundling with esbuild, when using v3 build output API ([#4969](https://github.com/sveltejs/kit/pull/4969))

* only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.55

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

## 1.0.0-next.54

### Patch Changes

- breaking: replace @sveltejs/kit/install-fetch with @sveltejs/kit/node/polyfills ([#4934](https://github.com/sveltejs/kit/pull/4934))

## 1.0.0-next.53

### Patch Changes

- Revert to cjs mode when building for lambda ([#4967](https://github.com/sveltejs/kit/pull/4967))

## 1.0.0-next.52

### Patch Changes

- breaking: drop Node 14 support ([#4922](https://github.com/sveltejs/kit/pull/4922))

* Use general purpose Edge Functions instead of piggybacking Middleware for Edge Deployment + fix split mode ([#4883](https://github.com/sveltejs/kit/pull/4883))

## 1.0.0-next.51

### Patch Changes

- Support for Node.js 16 ([#4904](https://github.com/sveltejs/kit/pull/4904))
- The output of serverless now is ESM instead of CJS ([#4904](https://github.com/sveltejs/kit/pull/4904))

## 1.0.0-next.50

### Patch Changes

- Fix `edge: true, split: true` build error for root routes when deploying to Vercel ([#4731](https://github.com/sveltejs/kit/pull/4731))

## 1.0.0-next.49

### Patch Changes

- Remove unused target option from config.json ([#4678](https://github.com/sveltejs/kit/pull/4678))

## 1.0.0-next.48

### Patch Changes

- Support build output API, with edge functions and code-splitting ([#4663](https://github.com/sveltejs/kit/pull/4663))

## 1.0.0-next.47

### Patch Changes

- Provide getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.46

### Patch Changes

- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192)) ([#4229](https://github.com/sveltejs/kit/pull/4229))

## 1.0.0-next.45

### Patch Changes

- Rename `__fetch_polyfill` to `installFetch` ([#4111](https://github.com/sveltejs/kit/pull/4111))

## 1.0.0-next.44

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))

## 1.0.0-next.43

### Patch Changes

- Add prerendered routes to config ([#3822](https://github.com/sveltejs/kit/pull/3822))

## 1.0.0-next.42

### Patch Changes

- Clean URLs and handle trailingSlash configuration ([#3820](https://github.com/sveltejs/kit/pull/3820))

## 1.0.0-next.41

### Patch Changes

- update to Vite 2.8 and esbuild 0.14 ([#3791](https://github.com/sveltejs/kit/pull/3791))

## 1.0.0-next.40

### Patch Changes

- Expose external option ([#3614](https://github.com/sveltejs/kit/pull/3614))

## 1.0.0-next.39

### Patch Changes

- Breaking: change app.render signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.38

### Patch Changes

- Polyfill fetch before running any app code ([#3400](https://github.com/sveltejs/kit/pull/3400))

## 1.0.0-next.37

### Patch Changes

- Allow `__fetchPolyfill()` to run several times ([#3377](https://github.com/sveltejs/kit/pull/3377))

## 1.0.0-next.36

### Patch Changes

- Add immutable cache headers to generated assets ([#3222](https://github.com/sveltejs/kit/pull/3222))

## 1.0.0-next.35

### Patch Changes

- Use path.posix to resolve routes for esmodules ([#3200](https://github.com/sveltejs/kit/pull/3200))

## 1.0.0-next.34

### Patch Changes

- Revert to v1 filesystem API ([#3149](https://github.com/sveltejs/kit/pull/3149))

## 1.0.0-next.33

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Remove esbuild options ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Update adapters to provide app.render with a url ([#3133](https://github.com/sveltejs/kit/pull/3133))

## 1.0.0-next.32

### Patch Changes

- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.31

### Patch Changes

- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))

## 1.0.0-next.30

### Patch Changes

- update to vite 2.6.0 and esbuild 0.13 ([#2522](https://github.com/sveltejs/kit/pull/2522))

## 1.0.0-next.29

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.28

### Patch Changes

- chore: export package.json from adapters ([#2351](https://github.com/sveltejs/kit/pull/2351))

## 1.0.0-next.27

### Patch Changes

- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))

## 1.0.0-next.26

### Patch Changes

- e9f78999: fix: include esbuild config in adapter type definition ([#1954](https://github.com/sveltejs/kit/pull/1954))

## 1.0.0-next.25

### Patch Changes

- e6995797: feat(adapters): expose esbuild configuration ([#1914](https://github.com/sveltejs/kit/pull/1914))

## 1.0.0-next.24

### Patch Changes

- 2ac5781: Use esbuild inject API to insert shims ([#1822](https://github.com/sveltejs/kit/pull/1822))

## 1.0.0-next.23

### Patch Changes

- 9f0c54a: Externalize app initialization to adapters ([#1804](https://github.com/sveltejs/kit/pull/1804))

## 1.0.0-next.22

### Patch Changes

- c51ab7d: Upgrade esbuild to ^0.12.5 ([#1627](https://github.com/sveltejs/kit/pull/1627))

## 1.0.0-next.21

### Patch Changes

- edc307d: Remove peerDependencies due to pnpm bug ([#1621](https://github.com/sveltejs/kit/pull/1621))
- 2636e68: Attempt to fix peerDependencies specification ([#1620](https://github.com/sveltejs/kit/pull/1620))

## 1.0.0-next.20

### Patch Changes

- c3d36a3: ensure `content-length` limit respected; handle `getRawBody` error(s) ([#1528](https://github.com/sveltejs/kit/pull/1528))
- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))
- Updated dependencies [6372690]
- Updated dependencies [c3d36a3]
- Updated dependencies [bf77940]
- Updated dependencies [2172469]
- Updated dependencies [028abd9]
  - @sveltejs/kit@1.0.0-next.110

## 1.0.0-next.19

### Patch Changes

- dca4946: Make kit a peerDependency of the adapters ([#1505](https://github.com/sveltejs/kit/pull/1505))
- Updated dependencies [261ee1c]
- Updated dependencies [ec156c6]
- Updated dependencies [586785d]
  - @sveltejs/kit@1.0.0-next.109

## 1.0.0-next.18

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))
- Updated dependencies [dad93fc]
- Updated dependencies [37fc04f]
  - @sveltejs/kit@1.0.0-next.108

## 1.0.0-next.17

### Patch Changes

- 9b448a6: Rename @sveltejs/kit/http to @sveltejs/kit/node ([#1391](https://github.com/sveltejs/kit/pull/1391))
- Updated dependencies [9b448a6]
  - @sveltejs/kit@1.0.0-next.104

## 1.0.0-next.16

### Patch Changes

- c6fde99: Convert to ESM ([#1323](https://github.com/sveltejs/kit/pull/1323))
- Updated dependencies [694f5de]
- Updated dependencies [0befffb]
- Updated dependencies [c6fde99]
  - @sveltejs/kit@1.0.0-next.97

## 1.0.0-next.15

### Patch Changes

- 2e72a94: Add type declarations ([#1230](https://github.com/sveltejs/kit/pull/1230))
- Updated dependencies [82955ec]
  - @sveltejs/kit@1.0.0-next.91

## 1.0.0-next.14

### Patch Changes

- 59f9277: fix body parsing ([#1146](https://github.com/sveltejs/kit/pull/1146))

## 1.0.0-next.13

### Patch Changes

- 1237eb3: Fix dependencies ([#1109](https://github.com/sveltejs/kit/pull/1109))
- 1237eb3: Use getRawBody in adapter-vercel ([#1109](https://github.com/sveltejs/kit/pull/1109))
- Updated dependencies [1237eb3]
- Updated dependencies [1237eb3]
  - @sveltejs/kit@1.0.0-next.81

## 1.0.0-next.12

### Patch Changes

- 7a4b351: Bundle serverless functions with esbuild ([#1091](https://github.com/sveltejs/kit/pull/1091))

## 1.0.0-next.11

### Patch Changes

- 6e27880: Move server-side fetch to adapters instead of build step ([#1066](https://github.com/sveltejs/kit/pull/1066))

## 1.0.0-next.10

### Patch Changes

- feb2db7: Simplify parsing of URLS of incoming requests ([#802](https://github.com/sveltejs/kit/pull/802))

## 1.0.0-next.9

### Patch Changes

- ca33a35: Fix adapter-vercel query parsing and update adapter-node's ([#774](https://github.com/sveltejs/kit/pull/774))

## 1.0.0-next.8

### Patch Changes

- 8024178: remove @sveltejs/app-utils ([#600](https://github.com/sveltejs/kit/pull/600))

## 1.0.0-next.7

### Patch Changes

- 17e82eb: Fix adapter-vercel imports ([#588](https://github.com/sveltejs/kit/pull/588))

## 1.0.0-next.6

### Patch Changes

- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 1.0.0-next.5

### Patch Changes

- f35a5cd: Change adapter signature ([#505](https://github.com/sveltejs/kit/pull/505))

## 1.0.0-next.4

### Patch Changes

- c3cf3f3: Bump deps ([#492](https://github.com/sveltejs/kit/pull/492))
- d742029: Fix mixed usage of CJS and ESM ([#483](https://github.com/sveltejs/kit/pull/483))
- Updated dependencies [c3cf3f3]
  - @sveltejs/app-utils@1.0.0-next.3

## 1.0.0-next.3

### Patch Changes

- 8123929: Fix adapter-vercel using the wrong directory ([#450](https://github.com/sveltejs/kit/pull/450))
- Updated dependencies [73dd998]
- Updated dependencies [b800049]
  - @sveltejs/app-utils@1.0.0-next.2

## 1.0.0-next.2

### Patch Changes

- Fix adapters and convert to ES modules

## 1.0.0-next.1

### Patch Changes

- Update to new adapter API

## 0.0.3

### Patch Changes

- 67eaeea: Move app-utils stuff into subpackages

## 0.0.2

### Patch Changes

- Use setup

## 0.0.1

### Patch Changes

- 0320208: Rename 'server route' to 'endpoint'
- 5ca907c: Use shared mkdirp helper

'''
'''--- packages/adapter-vercel/README.md ---
# adapter-vercel

A SvelteKit adapter that creates a Vercel app.

## Docs

[Docs](https://svelte.dev/docs/kit/adapter-vercel)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/adapter-vercel/CHANGELOG.md).

'''
'''--- packages/amp/CHANGELOG.md ---
# @sveltejs/amp

## 1.1.4
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

- Updated dependencies [[`dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46`](https://github.com/sveltejs/kit/commit/dcbe4222a194c5f90cfc0fc020cf065f7a4e4c46), [`4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d`](https://github.com/sveltejs/kit/commit/4cdbf76fbbf0c0ce7f574ef69c8daddcf954d39d), [`3a9b78f04786898ca93f6d4b75ab18d26bc45192`](https://github.com/sveltejs/kit/commit/3a9b78f04786898ca93f6d4b75ab18d26bc45192), [`723eb8b31e6a22c82f730c30e485386c8676b746`](https://github.com/sveltejs/kit/commit/723eb8b31e6a22c82f730c30e485386c8676b746), [`8ec471c875345b751344e67580ff1b772ef2735b`](https://github.com/sveltejs/kit/commit/8ec471c875345b751344e67580ff1b772ef2735b)]:
  - @sveltejs/kit@2.7.3

## 1.1.3
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

- Updated dependencies [[`087a43d391fc38b8c008fb39a804dc6988974101`](https://github.com/sveltejs/kit/commit/087a43d391fc38b8c008fb39a804dc6988974101)]:
  - @sveltejs/kit@2.5.22

## 1.1.2
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- Updated dependencies [[`4930a8443caa53bcecee7b690cd28e429b1c8a20`](https://github.com/sveltejs/kit/commit/4930a8443caa53bcecee7b690cd28e429b1c8a20)]:
  - @sveltejs/kit@2.5.21

## 1.1.1

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- Updated dependencies [[`25acb1d9fce998dccd8050b93cf4142c2b082611`](https://github.com/sveltejs/kit/commit/25acb1d9fce998dccd8050b93cf4142c2b082611), [`642c4a4aff4351b786fe6274aa2f0bf7d905faf9`](https://github.com/sveltejs/kit/commit/642c4a4aff4351b786fe6274aa2f0bf7d905faf9), [`0a0e9aa897123ebec50af08e9385b2ca4fc5bb28`](https://github.com/sveltejs/kit/commit/0a0e9aa897123ebec50af08e9385b2ca4fc5bb28)]:
  - @sveltejs/kit@2.5.11

## 1.1.0

### Minor Changes

- feat: allow SvelteKit 2 as peer dependency ([#11233](https://github.com/sveltejs/kit/pull/11233))

## 1.0.2

### Patch Changes

- fix: publish missing files ([#8532](https://github.com/sveltejs/kit/pull/8532))

## 1.0.1

### Patch Changes

- chore: remove superfluous main field from package.json ([#8519](https://github.com/sveltejs/kit/pull/8519))

- Updated dependencies [[`7e2d3405`](https://github.com/sveltejs/kit/commit/7e2d34056e99f371e22406d941b764df365a2649)]:
  - @sveltejs/kit@1.1.1

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.3

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 1.0.0-next.2

### Patch Changes

- Amend boilerplate to match current recommendations ([#7184](https://github.com/sveltejs/kit/pull/7184))

## 1.0.0-next.1

### Patch Changes

- Add types to pkg.exports ([#5045](https://github.com/sveltejs/kit/pull/5045))

'''
'''--- packages/create-svelte/CHANGELOG.md ---
# create-svelte

## 7.0.0
### Major Changes

- breaking: the `create-svelte` package has been replaced by the `sv` package ([#12850](https://github.com/sveltejs/kit/pull/12850))

## 6.4.0
### Minor Changes

- feat: mark scripts in libraries as being side effect free by default ([#12372](https://github.com/sveltejs/kit/pull/12372))

## 6.3.12
### Patch Changes

- chore: update typescript-eslint configs ([#12721](https://github.com/sveltejs/kit/pull/12721))

## 6.3.11
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

## 6.3.10
### Patch Changes

- chore: bump svelte-check to v4 ([#12642](https://github.com/sveltejs/kit/pull/12642))

## 6.3.9
### Patch Changes

- chore: bump publint to v0.2 ([#12602](https://github.com/sveltejs/kit/pull/12602))

## 6.3.8
### Patch Changes

- fix: use `vite-plugin-svelte` v4 pre-release when Svelte 5 is chosen ([#12586](https://github.com/sveltejs/kit/pull/12586))

## 6.3.7
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

## 6.3.6
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

## 6.3.5
### Patch Changes

- chore: upgrade to @fontsource/fira-mono v5 and @neoconfetti/svelte v2 ([#12497](https://github.com/sveltejs/kit/pull/12497))

- chore: upgrade to typescript-eslint 8 final ([#12528](https://github.com/sveltejs/kit/pull/12528))

## 6.3.4
### Patch Changes

- chore: upgrade to vitest 2 ([#12462](https://github.com/sveltejs/kit/pull/12462))

- fix: remove unnecessary `tslib` dependency ([#12453](https://github.com/sveltejs/kit/pull/12453))

- chore: bump @types/eslint to v9 ([#12496](https://github.com/sveltejs/kit/pull/12496))

## 6.3.3
### Patch Changes

- chore: rename styles.css to app.css ([#12426](https://github.com/sveltejs/kit/pull/12426))

## 6.3.2

### Patch Changes

- chore: update text about svelte-add ([#12337](https://github.com/sveltejs/kit/pull/12337))

## 6.3.1

### Patch Changes

- chore: overhaul ignore configs ([#11938](https://github.com/sveltejs/kit/pull/11938))

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

## 6.3.0

### Minor Changes

- feat: upgrade eslint to v9 ([#12268](https://github.com/sveltejs/kit/pull/12268))

## 6.2.1

### Patch Changes

- fix: update default playwright test case for lib-project ([#12261](https://github.com/sveltejs/kit/pull/12261))

## 6.2.0

### Minor Changes

- feat: make TypeScript the default for apps ([#12186](https://github.com/sveltejs/kit/pull/12186))

## 6.1.2

### Patch Changes

- fix: set peerDependencies based on chosen Svelte version ([#12117](https://github.com/sveltejs/kit/pull/12117))

## 6.1.1

### Patch Changes

- fix: go back to eslint 8 until typescript-eslint supports eslint 9 ([#12124](https://github.com/sveltejs/kit/pull/12124))

## 6.1.0

### Minor Changes

- feat: upgrade eslint to v9 ([#12089](https://github.com/sveltejs/kit/pull/12089))

## 6.0.10

### Patch Changes

- docs: update comment about path aliases ([#11788](https://github.com/sveltejs/kit/pull/11788))

## 6.0.9

### Patch Changes

- chore: bump typescript-eslint to v7 ([#11845](https://github.com/sveltejs/kit/pull/11845))

## 6.0.8

### Patch Changes

- chore: upgrade to vite 5.0.11 and vitest 1.2.0 ([#11632](https://github.com/sveltejs/kit/pull/11632))

## 6.0.7

### Patch Changes

- fix: install eslint-plugin-svelte@next for svelte5 ([#11627](https://github.com/sveltejs/kit/pull/11627))

## 6.0.6

### Patch Changes

- fix: set path: '/' in demo ([#11495](https://github.com/sveltejs/kit/pull/11495))

## 6.0.5

### Patch Changes

- fix: set the correct type for the ESLint config object ([#11453](https://github.com/sveltejs/kit/pull/11453))

## 6.0.4

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

## 6.0.3

### Patch Changes

- fix: remove unnecessary @types/cookie package ([#11375](https://github.com/sveltejs/kit/pull/11375))

## 6.0.2

### Patch Changes

- fix: use vitest 1.0 in playwright + vitest template ([#11376](https://github.com/sveltejs/kit/pull/11376))

## 6.0.1

### Patch Changes

- chore: simplify `.prettierignore` ([#11349](https://github.com/sveltejs/kit/pull/11349))

## 6.0.0

### Major Changes

- feat: create projects with SvelteKit 2 ([#11236](https://github.com/sveltejs/kit/pull/11236))

- breaking: require Node 18.13 or newer ([#11172](https://github.com/sveltejs/kit/pull/11172))

### Minor Changes

- feat: update vitest to 1.0 ([#11196](https://github.com/sveltejs/kit/pull/11196))

## 5.3.4

### Patch Changes

- chore: upgrade to prettier 3.1.1 ([#11304](https://github.com/sveltejs/kit/pull/11304))

## 5.3.3

### Patch Changes

- fix: call Svelte 5 an alpha rather than beta ([#11119](https://github.com/sveltejs/kit/pull/11119))

## 5.3.2

### Patch Changes

- chore: add type declaration to `.eslintrc.cjs` files ([#11091](https://github.com/sveltejs/kit/pull/11091))

## 5.3.1

### Patch Changes

- chore: upgrade eslint-config-prettier ([#11037](https://github.com/sveltejs/kit/pull/11037))

## 5.3.0

### Minor Changes

- feat: upgrade to prettier 3 and prettier-plugin-svelte 3 ([#10410](https://github.com/sveltejs/kit/pull/10410))

### Patch Changes

- fix: correctly configure `module` and `noEmit` tsconfig and jsconfig properties ([#11029](https://github.com/sveltejs/kit/pull/11029))

## 5.2.0

### Minor Changes

- feat: add option to try out Svelte 5 beta ([#11026](https://github.com/sveltejs/kit/pull/11026))

## 5.1.1

### Patch Changes

- fix: specified `initial-scale=1` on all viewport meta tags ([#10793](https://github.com/sveltejs/kit/pull/10793))

- feat: make output reflect user's choice of package manager ([#10811](https://github.com/sveltejs/kit/pull/10811))

## 5.1.0

### Minor Changes

- chore: remove `resolution-mode=highest` in template `.npmrc` ([#10635](https://github.com/sveltejs/kit/pull/10635))

### Patch Changes

- feat: improve sverdle reactivity ([#10670](https://github.com/sveltejs/kit/pull/10670))

## 5.0.6

### Patch Changes

- chore: bump typescript-eslint to v6 ([#10371](https://github.com/sveltejs/kit/pull/10371))

## 5.0.5

### Patch Changes

- chore: upgrade `vitest` to 0.34.0 and `@clack/prompts` to 0.7.0 ([#10240](https://github.com/sveltejs/kit/pull/10240))

## 5.0.4

### Patch Changes

- chore: upgrade @fontsource/fira-mono to v5 ([#10445](https://github.com/sveltejs/kit/pull/10445))

- chore: upgrade to vitest 0.33.0 ([#10445](https://github.com/sveltejs/kit/pull/10445))

## 5.0.3

### Patch Changes

- chore: bump Vite and Svelte dependencies ([#10330](https://github.com/sveltejs/kit/pull/10330))

- fix: create lib folder in skeleton project ([#10341](https://github.com/sveltejs/kit/pull/10341))

## 5.0.2

### Patch Changes

- fix: npm test should run unit tests ([#10241](https://github.com/sveltejs/kit/pull/10241))

- chore: upgrade vitest ([#10236](https://github.com/sveltejs/kit/pull/10236))

## 5.0.1

### Patch Changes

- chore: use satisfies keyword in jsdocs, in create-svelte default template ([#10203](https://github.com/sveltejs/kit/pull/10203))

## 5.0.0

### Major Changes

- breaking: install Svelte 4 ([#10217](https://github.com/sveltejs/kit/pull/10217))

## 4.2.0

### Minor Changes

- feat: Add `data-sveltekit-preload-data` to lib template ([#9863](https://github.com/sveltejs/kit/pull/9863))

## 4.1.1

### Patch Changes

- fix: default playwright globs ([#9795](https://github.com/sveltejs/kit/pull/9795))

- fix: remove obsolete `ignorePatterns: ['*.cjs']` from .eslintrc.cjs ([#9797](https://github.com/sveltejs/kit/pull/9797))

## 4.1.0

### Minor Changes

- feat: set `resolution-mode=highest` in generated `.npmrc` ([#9781](https://github.com/sveltejs/kit/pull/9781))

## 4.0.0

### Major Changes

- feat: switch default ESLint plugin from `eslint-plugin-svelte3` to `eslint-plugin-svelte` ([#9749](https://github.com/sveltejs/kit/pull/9749))

## 3.3.1

### Patch Changes

- feat: upgrade to Vite 4.3 for faster build times ([#9737](https://github.com/sveltejs/kit/pull/9737))

- fix: generate tsconfig/jsconfig correctly for library option ([#9712](https://github.com/sveltejs/kit/pull/9712))

## 3.3.0

### Minor Changes

- feat: ignore test files in library skeleton package.json ([#9584](https://github.com/sveltejs/kit/pull/9584))

## 3.2.0

### Minor Changes

- feat: upgrade to TypeScript 5 ([#9435](https://github.com/sveltejs/kit/pull/9435))

### Patch Changes

- chore: upgrade to Vite 4.2 ([#9434](https://github.com/sveltejs/kit/pull/9434))

## 3.1.2

### Patch Changes

- fix: prevent duplicated lines in project creation CLI ([#9346](https://github.com/sveltejs/kit/pull/9346))

## 3.1.1

### Patch Changes

- chore: Add hint for toggling additional options during scaffolding flow. ([#9318](https://github.com/sveltejs/kit/pull/9318))

## 3.1.0

### Minor Changes

- feat: use `@clack/prompts` ([#9219](https://github.com/sveltejs/kit/pull/9219))

## 3.0.4

### Patch Changes

- docs: inform about adapter-auto not supporting all environments ([#9196](https://github.com/sveltejs/kit/pull/9196))

## 3.0.3

### Patch Changes

- chore: enhance library skeleton readme with some library instructions ([#9128](https://github.com/sveltejs/kit/pull/9128))

## 3.0.2

### Patch Changes

- chore: avoid running publint twice in prepublish ([#9126](https://github.com/sveltejs/kit/pull/9126))

- fix: add `dist` to `pkg.files` and `.gitignore` ([#9124](https://github.com/sveltejs/kit/pull/9124))

## 3.0.1

### Patch Changes

- fix: update dependency @sveltejs/package to v2.0.0 ([#9087](https://github.com/sveltejs/kit/pull/9087))

## 3.0.0

### Major Changes

- breaking: update library scaffolding for `@sveltejs/package` version 2 ([#8922](https://github.com/sveltejs/kit/pull/8922))

## 2.3.4

### Patch Changes

- fix: use new locator API to improve demo test ([#8988](https://github.com/sveltejs/kit/pull/8988))

## 2.3.3

### Patch Changes

- chore: bump `@sveltejs/kit` and `@sveltejs/adapter-auto` versions ([#8740](https://github.com/sveltejs/kit/pull/8740))

- fix: adjust vite config type to work with vitest options ([#8871](https://github.com/sveltejs/kit/pull/8871))

## 2.3.2

### Patch Changes

- fix: remove duplicate space around JSDoc comments removed for TypeScript demo app ([#8684](https://github.com/sveltejs/kit/pull/8684))

## 2.3.1

### Patch Changes

- chore: remove obsolete comment from templates ([#8620](https://github.com/sveltejs/kit/pull/8620))

## 2.3.0

### Minor Changes

- fix: adjust `app.d.ts` to diminish confusion about imports ([#8477](https://github.com/sveltejs/kit/pull/8477))

## 2.2.1

### Patch Changes

- fix: note why TypeScript is always installed for library projects and add jsconfig ([#8484](https://github.com/sveltejs/kit/pull/8484))

## 2.2.0

### Minor Changes

- feat: use svelte-check v3 ([#8468](https://github.com/sveltejs/kit/pull/8468))

## 2.1.0

### Minor Changes

- feat: create vite.config.ts for TypeScript projects ([#8258](https://github.com/sveltejs/kit/pull/8258))

## 2.0.2

### Patch Changes

- fix: address flakiness in playwright test ([#8162](https://github.com/sveltejs/kit/pull/8162))

## 2.0.1

### Patch Changes

- chore: no code change, rerelease as 2.0.1 for technical reasons ([#8161](https://github.com/sveltejs/kit/pull/8161))

## 2.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 2.0.0-next.204

### Patch Changes

- feat: remove release candidate banner ([#8109](https://github.com/sveltejs/kit/pull/8109))

## 2.0.0-next.203

### Patch Changes

- chore: add peerDependencies, add more specific next version ([#8141](https://github.com/sveltejs/kit/pull/8141))

## 2.0.0-next.202

### Patch Changes

- feat: vitePreprocess ([#8036](https://github.com/sveltejs/kit/pull/8036))

## 2.0.0-next.201

### Patch Changes

- breaking: upgrade to Vite 4 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 2.0.0-next.200

### Patch Changes

- Use `satisfies` operator ([#7861](https://github.com/sveltejs/kit/pull/7861))

## 2.0.0-next.199

### Patch Changes

- fix: improve Sverdle a11y ([#7960](https://github.com/sveltejs/kit/pull/7960))

## 2.0.0-next.198

### Patch Changes

- Upgrade dependencies in templates ([#7866](https://github.com/sveltejs/kit/pull/7866))

## 2.0.0-next.197

### Patch Changes

- Upgrade dependencies ([#7852](https://github.com/sveltejs/kit/pull/7852))

## 2.0.0-next.196

### Patch Changes

- Update app.d.ts files ([#7003](https://github.com/sveltejs/kit/pull/7003))

## 2.0.0-next.195

### Patch Changes

- breaking: Replace `data-sveltekit-prefetch` with `-preload-code` and `-preload-data` ([#7776](https://github.com/sveltejs/kit/pull/7776))
- Upgrade to Playwright 1.28.1 ([#7696](https://github.com/sveltejs/kit/pull/7696))

## 2.0.0-next.194

### Patch Changes

- fix playwright glob filter ([#7826](https://github.com/sveltejs/kit/pull/7826))

## 2.0.0-next.193

### Patch Changes

- Added the option to add Vitest to new projects ([#5708](https://github.com/sveltejs/kit/pull/5708))

## 2.0.0-next.192

### Patch Changes

- Ignore Vite timestamp files by default in `create-svelte` templates (added to `.gitignore`) ([#7660](https://github.com/sveltejs/kit/pull/7660))

## 2.0.0-next.191

### Patch Changes

- Add `style="display: contents"` to wrapper element by default ([#7652](https://github.com/sveltejs/kit/pull/7652))

## 2.0.0-next.190

### Patch Changes

- fix: remove Sverdle from Stackblitz template ([#7448](https://github.com/sveltejs/kit/pull/7448))

## 2.0.0-next.189

### Patch Changes

- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 2.0.0-next.188

### Patch Changes

- Use aria-current instead of active class in nav ([#7376](https://github.com/sveltejs/kit/pull/7376))

## 2.0.0-next.187

### Patch Changes

- Add missing titles and descriptions to the Sverdle pages ([#7351](https://github.com/sveltejs/kit/pull/7351))
- Use `justify-content: flex-start;` on Sverdle CSS to avoid compatibility issues ([#7352](https://github.com/sveltejs/kit/pull/7352))

## 2.0.0-next.186

### Patch Changes

- feat: add reset option to update method of enhance ([#7326](https://github.com/sveltejs/kit/pull/7326))

## 2.0.0-next.185

### Patch Changes

- Warn user when they accidentally try to publish the `./` directory ([#7280](https://github.com/sveltejs/kit/pull/7280))

## 2.0.0-next.184

### Patch Changes

- fix sverdle guesses incorrectly cleared by form `enhance` ([#7241](https://github.com/sveltejs/kit/pull/7241))

## 2.0.0-next.183

### Patch Changes

- feat: extract and export types from create-svelte ([#7111](https://github.com/sveltejs/kit/pull/7111))

## 2.0.0-next.182

### Patch Changes

- Work around SSR transform bug ([#7088](https://github.com/sveltejs/kit/pull/7088))

## 2.0.0-next.181

### Patch Changes

- Fix template description for SvelteKit demo app ([#7076](https://github.com/sveltejs/kit/pull/7076))

## 2.0.0-next.180

### Patch Changes

- Replace /todos page in demo app with /sverdle ([#6979](https://github.com/sveltejs/kit/pull/6979))

## 2.0.0-next.179

### Patch Changes

- breaking: rename App.PageError to App.Error ([#6963](https://github.com/sveltejs/kit/pull/6963))

## 2.0.0-next.178

### Patch Changes

- fix: prettier not formatting svelte files ([#6866](https://github.com/sveltejs/kit/pull/6866))

## 2.0.0-next.177

### Patch Changes

- chore: bump vite ([#6829](https://github.com/sveltejs/kit/pull/6829))

## 2.0.0-next.176

### Patch Changes

- SvelteKit 1.0 RC ([#6707](https://github.com/sveltejs/kit/pull/6707))

## 2.0.0-next.175

### Patch Changes

- breaking: update use:enhance usage ([#6697](https://github.com/sveltejs/kit/pull/6697))
- breaking: hooks file rename ([#6697](https://github.com/sveltejs/kit/pull/6697))

## 2.0.0-next.174

### Patch Changes

- Remove cookie package from demo app ([#6602](https://github.com/sveltejs/kit/pull/6602))

## 2.0.0-next.173

### Patch Changes

- breaking: Replace `POST`/`PUT`/`PATCH`/`DELETE` in `+page.server.js` with `export const actions` ([#6469](https://github.com/sveltejs/kit/pull/6469))

## 2.0.0-next.172

### Patch Changes

- Bump vite-plugin-svelte and required vite version ([#6583](https://github.com/sveltejs/kit/pull/6583))

## 2.0.0-next.171

### Patch Changes

- Use `invalidateAll()` ([#6493](https://github.com/sveltejs/kit/pull/6493))

## 2.0.0-next.170

### Patch Changes

- reorder create-svelte templates such that library is last ([#6481](https://github.com/sveltejs/kit/pull/6481))

## 2.0.0-next.169

### Patch Changes

- Move `data-sveltekit-prefetch` to `<nav>` element ([#6442](https://github.com/sveltejs/kit/pull/6442))

## 2.0.0-next.168

### Patch Changes

- chore: bump ts version and ensure it works with latest changes ([#6428](https://github.com/sveltejs/kit/pull/6428))

## 2.0.0-next.167

### Patch Changes

- breaking: Replace `sveltekit:*` with valid HTML attributes like `data-sveltekit-*` ([#6170](https://github.com/sveltejs/kit/pull/6170))

## 2.0.0-next.166

### Patch Changes

- Remove App.PrivateEnv and App.PublicEnv placeholders ([#6413](https://github.com/sveltejs/kit/pull/6413))

## 2.0.0-next.165

### Patch Changes

- Update to Vite 3.1.0-beta.1 ([#6407](https://github.com/sveltejs/kit/pull/6407))

## 2.0.0-next.164

### Patch Changes

- breaking: rename `$app/env` to `$app/environment`, to disambiguate with `$env/...` ([#6334](https://github.com/sveltejs/kit/pull/6334))
- Add svelte-kit sync to check scripts in checkjs templates ([#6339](https://github.com/sveltejs/kit/pull/6339))

## 2.0.0-next.163

### Patch Changes

- fix type definition issue that caused a svelte-check error when using TS 4.8 ([#6306](https://github.com/sveltejs/kit/pull/6306))

## 2.0.0-next.162

### Patch Changes

- remove some unused code ([#6287](https://github.com/sveltejs/kit/pull/6287))

## 2.0.0-next.161

### Patch Changes

- feat: add App.PageData type ([#6226](https://github.com/sveltejs/kit/pull/6226))

## 2.0.0-next.160

### Patch Changes

- Create TypeScript/JSDoc/vanilla versions of shared template .ts files ([#6253](https://github.com/sveltejs/kit/pull/6253))
- Create vite.config.ts when creating TypeScript project ([#6253](https://github.com/sveltejs/kit/pull/6253))
- Invalidate data after form submission ([#6254](https://github.com/sveltejs/kit/pull/6254))

## 2.0.0-next.159

### Patch Changes

- Update text referring to route location ([#6134](https://github.com/sveltejs/kit/pull/6134))

## 2.0.0-next.158

### Patch Changes

- Add notes about includes/excludes and path aliases ([#6085](https://github.com/sveltejs/kit/pull/6085))
- setup prettier plugin-search-dirs to enable use with pnpm ([#6101](https://github.com/sveltejs/kit/pull/6101))

## 2.0.0-next.157

### Patch Changes

- Run svelte-kit sync before svelte-check in check scripts ([#6037](https://github.com/sveltejs/kit/pull/6037))

## 2.0.0-next.156

### Patch Changes

- update `app.d.ts` for library skeleton template ([#6020](https://github.com/sveltejs/kit/pull/6020))

## 2.0.0-next.155

### Patch Changes

- make variable names more descriptive ([#5983](https://github.com/sveltejs/kit/pull/5983))

## 2.0.0-next.154

### Patch Changes

- remove session remnants ([#5966](https://github.com/sveltejs/kit/pull/5966))
- remove outdated notes in `api.ts` ([#5964](https://github.com/sveltejs/kit/pull/5964))

## 2.0.0-next.153

### Patch Changes

- Update templates ([#5778](https://github.com/sveltejs/kit/pull/5778))

## 2.0.0-next.152

### Patch Changes

- Use @sveltejs/kit postinstall lifecycle hook to invoke 'svelte-kit sync' instead of prepare in projects created by create-svelte ([#5760](https://github.com/sveltejs/kit/pull/5760))

## 2.0.0-next.151

### Patch Changes

- feat: include reference to `@sveltejs/kit` types in ambient file ([#5745](https://github.com/sveltejs/kit/pull/5745))

## 2.0.0-next.150

### Patch Changes

- Remove initial-scale=1 from meta tags ([#5706](https://github.com/sveltejs/kit/pull/5706))

## 2.0.0-next.149

### Patch Changes

- uppercase handlers ([#5513](https://github.com/sveltejs/kit/pull/5513))

## 2.0.0-next.148

### Patch Changes

- Update dependencies ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 2.0.0-next.147

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 2.0.0-next.146

### Patch Changes

- Add vite.config.js to the create-svelte templates ([#5332](https://github.com/sveltejs/kit/pull/5332))
- breaking: switch to vite CLI for dev, build, and preview commands ([#5332](https://github.com/sveltejs/kit/pull/5332))

## 2.0.0-next.145

### Patch Changes

- fix todos fail to update in demo app ([#5354](https://github.com/sveltejs/kit/pull/5354))

## 2.0.0-next.144

### Patch Changes

- Revert to use ESM eslint config files ([#5293](https://github.com/sveltejs/kit/pull/5293))

## 2.0.0-next.143

### Patch Changes

- Enhance docs on importing types in app.d.ts ([#5280](https://github.com/sveltejs/kit/pull/5280))
- Use ESM eslint config files ([#5263](https://github.com/sveltejs/kit/pull/5263))
- fix formatting for initial package.json ([#5271](https://github.com/sveltejs/kit/pull/5271))

## 2.0.0-next.142

### Patch Changes

- Add descriptions to templates, and make TypeScript options more self-explanatory ([#5221](https://github.com/sveltejs/kit/pull/5221))

## 2.0.0-next.141

### Patch Changes

- fix: use inline element in heading ([#5164](https://github.com/sveltejs/kit/pull/5164))

## 2.0.0-next.140

### Patch Changes

- Use crypto.randomUUID() instead of @lukeed/uuid ([#5042](https://github.com/sveltejs/kit/pull/5042))

## 2.0.0-next.139

### Patch Changes

- correct default package.json format ([#5013](https://github.com/sveltejs/kit/pull/5013))
- breaking: Replace `%svelte.body%` with `%sveltekit.body%`, etc. ([#5016](https://github.com/sveltejs/kit/pull/5016))

## 2.0.0-next.138

### Patch Changes

- Use separate ignore files for prettier and eslint ([#5009](https://github.com/sveltejs/kit/pull/5009))

## 2.0.0-next.137

### Patch Changes

- import generated types from `__types/index.d.ts` file ([#4705](https://github.com/sveltejs/kit/pull/4705))

## 2.0.0-next.136

### Patch Changes

- Add README ([#4951](https://github.com/sveltejs/kit/pull/4951))

## 2.0.0-next.135

### Patch Changes

- remove unnecessary CHANGELOG.md ([#4903](https://github.com/sveltejs/kit/pull/4903))

## 2.0.0-next.134

### Patch Changes

- fix lib, module, and target to not override the tsconfig they generate by default ([#4893](https://github.com/sveltejs/kit/pull/4893))

## 2.0.0-next.133

### Patch Changes

- Bump `eslint` from version 7 to 8 ([#4553](https://github.com/sveltejs/kit/pull/4553))

## 2.0.0-next.132

### Patch Changes

- Remove default `<meta name="description">` and add separate descriptions to each page ([#4686](https://github.com/sveltejs/kit/pull/4686))

## 2.0.0-next.131

### Patch Changes

- Make hooks file comply with TypeScript strictest mode ([#4667](https://github.com/sveltejs/kit/pull/4667))

## 2.0.0-next.130

### Patch Changes

- Ignore .turbo directory when building templates ([#4638](https://github.com/sveltejs/kit/pull/4638))
- Disable type checking by default for non-typescript projects. ([#4621](https://github.com/sveltejs/kit/pull/4621))
- breaking: move non-essential TypeScript compilerOptions into user-editable config ([#4633](https://github.com/sveltejs/kit/pull/4633))

## 2.0.0-next.129

### Patch Changes

- type check exception handling on form action ([#4532](https://github.com/sveltejs/kit/pull/4532))
- Update broken documentation links for `App` namespaces ([#4627](https://github.com/sveltejs/kit/pull/4627))

## 2.0.0-next.128

### Patch Changes

- chore: upgrade to Playwright 1.21.0 ([#4601](https://github.com/sveltejs/kit/pull/4601))

## 2.0.0-next.127

### Patch Changes

- Fix iOS double-tap zoom on counter buttons ([#4390](https://github.com/sveltejs/kit/pull/4390))

## 2.0.0-next.126

### Patch Changes

- fix: use .ts extension for tests when using TypeScript ([#4368](https://github.com/sveltejs/kit/pull/4368))

## 2.0.0-next.125

### Patch Changes

- fix: check for app.d.ts rather than global.d.ts ([#4295](https://github.com/sveltejs/kit/pull/4295))

## 2.0.0-next.124

### Patch Changes

- Add sync CLI command ([#4182](https://github.com/sveltejs/kit/pull/4182))
- Upgrade to TypeScript 4.6 ([#4190](https://github.com/sveltejs/kit/pull/4190))

## 2.0.0-next.123

### Patch Changes

- Extend user tsconfig from generated .svelte-kit/tsconfig.json ([#4118](https://github.com/sveltejs/kit/pull/4118))

## 2.0.0-next.122

### Patch Changes

- remove unnecessary CSS units ([#4115](https://github.com/sveltejs/kit/pull/4115))

## 2.0.0-next.121

### Patch Changes

- Add option to create integration tests with Playwright ([#4056](https://github.com/sveltejs/kit/pull/4056))

## 2.0.0-next.120

### Patch Changes

- fix `@typescript-eslint/no-empty-interface` lint error when starting a new app with eslint ([#4077](https://github.com/sveltejs/kit/pull/4077))

## 2.0.0-next.119

### Patch Changes

- fix: update docs URL for App namespace interfaces ([#4042](https://github.com/sveltejs/kit/pull/4042))

## 2.0.0-next.118

### Patch Changes

- make demo app work without JS ([#3970](https://github.com/sveltejs/kit/pull/3970))

## 2.0.0-next.117

### Patch Changes

- update comment to remove outdated reference ([#3898](https://github.com/sveltejs/kit/pull/3898))

## 2.0.0-next.116

### Patch Changes

- use preserveValueImports flag ([#3064](https://github.com/sveltejs/kit/pull/3064))

## 2.0.0-next.115

### Patch Changes

- fix links pointing to multi-page docs ([#3815](https://github.com/sveltejs/kit/pull/3815))
- upgrade to TypeScript 4.5 ([#3809](https://github.com/sveltejs/kit/pull/3809))

## 2.0.0-next.114

### Patch Changes

- Add App namespace for app-level types ([#3670](https://github.com/sveltejs/kit/pull/3670))
- Remove target option ([#3674](https://github.com/sveltejs/kit/pull/3674))

## 2.0.0-next.113

### Patch Changes

- Bump version ([#3610](https://github.com/sveltejs/kit/pull/3610))

## 2.0.0-next.112

### Patch Changes

- Try this ([#3608](https://github.com/sveltejs/kit/pull/3608))

## 2.0.0-next.111

### Patch Changes

- I think this might be it ([#3606](https://github.com/sveltejs/kit/pull/3606))

## 2.0.0-next.110

### Patch Changes

- And again ([#3604](https://github.com/sveltejs/kit/pull/3604))

## 2.0.0-next.109

### Patch Changes

- Bump version ([#3602](https://github.com/sveltejs/kit/pull/3602))

## 2.0.0-next.108

### Patch Changes

- And again ([#3600](https://github.com/sveltejs/kit/pull/3600))

## 2.0.0-next.107

### Patch Changes

- Trying something ([#3598](https://github.com/sveltejs/kit/pull/3598))

## 2.0.0-next.105

### Patch Changes

- Another meaningless change ([#3596](https://github.com/sveltejs/kit/pull/3596))

## 2.0.0-next.104

### Patch Changes

- typo ([#3593](https://github.com/sveltejs/kit/pull/3593))

## 2.0.0-next.103

### Patch Changes

- Tweak README ([#3591](https://github.com/sveltejs/kit/pull/3591))

## 2.0.0-next.102

### Patch Changes

- Fix typo ([#3583](https://github.com/sveltejs/kit/pull/3583))

## 2.0.0-next.101

### Patch Changes

- bump eslint plugin and parser in template ([#3544](https://github.com/sveltejs/kit/pull/3544))

## 2.0.0-next.100

### Patch Changes

- add ESLint configuration for mixed JS/TS codebase ([#3536](https://github.com/sveltejs/kit/pull/3536))

## 2.0.0-next.99

### Patch Changes

- Respect Ctrl-C when running create-svelte ([#3472](https://github.com/sveltejs/kit/pull/3472))
- Make project name an explicit option' ([#3472](https://github.com/sveltejs/kit/pull/3472))
- Prompt for directory when running create-svelte without argument ([#3472](https://github.com/sveltejs/kit/pull/3472))

## 2.0.0-next.98

### Patch Changes

- Add index.js file to `pkg.files` ([#3445](https://github.com/sveltejs/kit/pull/3445))

## 2.0.0-next.97

### Patch Changes

- Add a programmatic interface to create-svelte ([#3437](https://github.com/sveltejs/kit/pull/3437))

## 2.0.0-next.96

### Patch Changes

- breaking: change app.render signature to (request: Request) => Promise (#3384) ([#3430](https://github.com/sveltejs/kit/pull/3430))

## 2.0.0-next.95

### Patch Changes

- Add methodOverrides to default configs ([#3411](https://github.com/sveltejs/kit/pull/3411))

## 2.0.0-next.94

### Patch Changes

- Add methodOverride option for submitting PUT/PATCH/DELETE/etc with <form> elements ([#2989](https://github.com/sveltejs/kit/pull/2989))

## 2.0.0-next.93

### Patch Changes

- Update template files to include %svelte.assets% ([#3234](https://github.com/sveltejs/kit/pull/3234))

## 2.0.0-next.92

### Patch Changes

- Update template to use new page/request APIs ([#3146](https://github.com/sveltejs/kit/pull/3146))

## 2.0.0-next.91

### Patch Changes

- Make demo app complies with TypeScript strict mode ([#3095](https://github.com/sveltejs/kit/pull/3095))

## 2.0.0-next.90

### Patch Changes

- bump eslint ecmaVersion to 2020 ([#2985](https://github.com/sveltejs/kit/pull/2985))
- include missing .npmrc in templates ([#2990](https://github.com/sveltejs/kit/pull/2990))
- Do not gitignore `.env.example` ([#2926](https://github.com/sveltejs/kit/pull/2926))
- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 2.0.0-next.89

### Patch Changes

- Git ignore files with a .env. prefix ([#2905](https://github.com/sveltejs/kit/pull/2905))

## 2.0.0-next.88

### Patch Changes

- Improve project scaffolding language ([#2895](https://github.com/sveltejs/kit/pull/2895))

## 2.0.0-next.87

### Patch Changes

- Add adapter-auto to template configs ([#2885](https://github.com/sveltejs/kit/pull/2885))

## 2.0.0-next.86

### Patch Changes

- Add adapter-auto ([#2867](https://github.com/sveltejs/kit/pull/2867))
- Add an npm run package command to templates ([#2882](https://github.com/sveltejs/kit/pull/2882))

## 2.0.0-next.85

### Patch Changes

- feat: added .env to gitignore for skeleton and default starters ([#2732](https://github.com/sveltejs/kit/pull/2732))

## 2.0.0-next.84

### Patch Changes

- Add explicit types in `_api.ts` and `form.ts` for TypeScript and ESLint integration example ([#2657](https://github.com/sveltejs/kit/pull/2657))

## 2.0.0-next.83

### Patch Changes

- breaking: drop Node 12 support ([#2604](https://github.com/sveltejs/kit/pull/2604))

## 2.0.0-next.82

### Patch Changes

- chore: upgrade to Svelte 3.43.0" ([#2474](https://github.com/sveltejs/kit/pull/2474))

## 2.0.0-next.81

### Patch Changes

- fix: provide valid value for `letter-spacing` CSS property ([#2437](https://github.com/sveltejs/kit/pull/2437))
- update dependencies ([#2447](https://github.com/sveltejs/kit/pull/2447))

## 2.0.0-next.80

### Patch Changes

- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 2.0.0-next.79

### Patch Changes

- Use the name of folder as name in package.json ([#2415](https://github.com/sveltejs/kit/pull/2415))

## 2.0.0-next.78

### Patch Changes

- Disable delete button while waiting for API response ([#2172](https://github.com/sveltejs/kit/pull/2172))

## 2.0.0-next.77

### Patch Changes

- 94b34fa6: [breaking] standardize final output dir as /build (vs /.svelte-kit) ([#2109](https://github.com/sveltejs/kit/pull/2109))

## 2.0.0-next.76

### Patch Changes

- b9e63381: Add DOM to lib in tsconfig ([#1956](https://github.com/sveltejs/kit/pull/1956))

## 2.0.0-next.75

### Patch Changes

- fe68e13: Simplify component file names ([#1878](https://github.com/sveltejs/kit/pull/1878))

## 2.0.0-next.74

### Patch Changes

- 4c7ccfd: Add \$lib alias to js/tsconfig ([#1860](https://github.com/sveltejs/kit/pull/1860))

## 2.0.0-next.73

### Patch Changes

- 2d2fab1: Add favicon to skeleton template ([#1514](https://github.com/sveltejs/kit/pull/1514))
- 6aa4988: Replace favicon ([#1589](https://github.com/sveltejs/kit/pull/1589))

## 2.0.0-next.72

### Patch Changes

- 1739443: Add svelte-check to TS templates ([#1556](https://github.com/sveltejs/kit/pull/1556))
- 6372690: gitignore package directory ([#1499](https://github.com/sveltejs/kit/pull/1499))
- f211906: Adjust build-template script to include package.json ([#1555](https://github.com/sveltejs/kit/pull/1555))

## 2.0.0-next.71

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))

## 2.0.0-next.70

### Patch Changes

- d871213: Remove Vite dependency from apps ([#1374](https://github.com/sveltejs/kit/pull/1374))

## 2.0.0-next.69

### Patch Changes

- 9cc2508: Ensure template files match Prettier settings ([#1364](https://github.com/sveltejs/kit/pull/1364))
- f5e626d: Reference Vite/Svelte types inside Kit types ([#1319](https://github.com/sveltejs/kit/pull/1319))
- 8a402a9: Exclude deploy artifacts from create-svelte package ([#1363](https://github.com/sveltejs/kit/pull/1363))
- e8bed05: Prompt to npm install before prompting to git init ([#1362](https://github.com/sveltejs/kit/pull/1362))
- 507e2c3: fix: Prettier not formatting .svelte files ([#1360](https://github.com/sveltejs/kit/pull/1360))

## 2.0.0-next.68

### Patch Changes

- 5ed3ed2: Fix usage of request.locals in starter project ([#1344](https://github.com/sveltejs/kit/pull/1344))

## 2.0.0-next.67

### Patch Changes

- d15b48a: Add renamed .svelte -> .svelte-kit directory to ignore files ([#1339](https://github.com/sveltejs/kit/pull/1339))

## 2.0.0-next.66

### Patch Changes

- 1753987: Use request.locals

## 2.0.0-next.65

### Patch Changes

- 0befffb: Rename .svelte to .svelte-kit ([#1321](https://github.com/sveltejs/kit/pull/1321))
- c6fde99: Switch to ESM in config files ([#1323](https://github.com/sveltejs/kit/pull/1323))

## 2.0.0-next.64

### Patch Changes

- 3fb191c: Improved install prompts, turn confirms into toggle ([#1312](https://github.com/sveltejs/kit/pull/1312))

## 2.0.0-next.63

### Patch Changes

- d19f3de: bump minimum required Svelte version ([#1192](https://github.com/sveltejs/kit/pull/1192))

## 2.0.0-next.62

### Patch Changes

- c44f231: Improve a11y on to-do list in template ([#1207](https://github.com/sveltejs/kit/pull/1207))

## 2.0.0-next.61

### Patch Changes

- 82955ec: fix: adapt to svelte ids without ?import in vite 2.2.3

## 2.0.0-next.60

### Patch Changes

- 1b816b2: Update version of eslint-plugin-svelte3 ([#1195](https://github.com/sveltejs/kit/pull/1195))
- 6f2b4a6: Update welcome message ([#1196](https://github.com/sveltejs/kit/pull/1196))
- 6f2b4a6: No adapter by default ([#1196](https://github.com/sveltejs/kit/pull/1196))

## 2.0.0-next.59

### Patch Changes

- a2f3f4b: Rename `start` to `preview` in the CLI and package scripts

## 2.0.0-next.58

### Patch Changes

- 2bf4338: Add .gitignore files to new projects ([#1167](https://github.com/sveltejs/kit/pull/1167))

## 2.0.0-next.57

### Patch Changes

- 4645ad5: Remove obsolete vite.ssr config from template ([#1148](https://github.com/sveltejs/kit/pull/1148))
- 872d734: Hide out-of-view counter from assistive tech ([#1150](https://github.com/sveltejs/kit/pull/1150))

## 2.0.0-next.56

### Patch Changes

- cdf4d5b: Show git init instructions when creating new project
- 112d194: Uppercase method in template ([#1119](https://github.com/sveltejs/kit/pull/1119))

## 2.0.0-next.55

### Patch Changes

- daf6913: Fix bootstrapping command on about page ([#1105](https://github.com/sveltejs/kit/pull/1105))

## 2.0.0-next.54

### Patch Changes

- a84cb88: Fix global.d.ts rename, Windows build issue, missing adapter-node ([#1095](https://github.com/sveltejs/kit/pull/1095))

## 2.0.0-next.53

### Patch Changes

- 27c2e1d: Fix CSS on demo app hero image ([#1088](https://github.com/sveltejs/kit/pull/1088))
- bbeb58f: Include dotfiles when creating new project ([#1084](https://github.com/sveltejs/kit/pull/1084))
- 6a8e73f: Remove large image from create-svelte ([#1085](https://github.com/sveltejs/kit/pull/1085))

## 2.0.0-next.52

### Patch Changes

- f342372: Adding new Hello World templates (default with enhanced style and skeleton) to create-svelte ([#1014](https://github.com/sveltejs/kit/pull/1014))

## 2.0.0-next.51

### Patch Changes

- 4cffc14: add global.d.ts to js version ([#1051](https://github.com/sveltejs/kit/pull/1051))

## 2.0.0-next.50

### Patch Changes

- 3802c64: Fix build so that the package can be automatically published ([#1001](https://github.com/sveltejs/kit/pull/1001))

## 2.0.0-next.49

### Patch Changes

- 3c41d07: Fix preprocess option in template
- 9bb747f: Remove CSS option and simplify ([#989](https://github.com/sveltejs/kit/pull/989))

## 2.0.0-next.48

### Patch Changes

- 4c45784: Add ambient types to published files ([#980](https://github.com/sveltejs/kit/pull/980))

## 2.0.0-next.47

### Patch Changes

- 59a1e06: Add button:focus CSS styles to index page of default app ([#957](https://github.com/sveltejs/kit/pull/957))
- 39b6967: Add ambient type definitions for \$app imports ([#917](https://github.com/sveltejs/kit/pull/917))
- dfbe62b: Add title tag to index page of default app ([#954](https://github.com/sveltejs/kit/pull/954))

## 2.0.0-next.46

### Patch Changes

- 570f90c: Update tsconfig to use module and lib es2020 ([#817](https://github.com/sveltejs/kit/pull/817))
- 8d453c8: Specify minimum Node version number in @sveltejs/kit and add .npmrc to enforce it ([#787](https://github.com/sveltejs/kit/pull/787))

## 2.0.0-next.45

### Patch Changes

- dac29c5: allow importing JSON modules ([#792](https://github.com/sveltejs/kit/pull/792))
- 8dc89ba: Set target to es2019 in default tsconfig.json ([#772](https://github.com/sveltejs/kit/pull/772))

## 2.0.0-next.44

### Patch Changes

- 7e51473: fix eslint error in ts starter template, add eslint and prettier ignore config
- 7d42f72: Add a global stylesheet during create-svelte depending on the chosen CSS preprocessor ([#726](https://github.com/sveltejs/kit/pull/726))

## 2.0.0-next.43

### Patch Changes

- bdf4ed9: Fix typo in `ignorePatterns` for the `.eslintrc.cjs` generated for TypeScript projects so that `.eslintrc.cjs` correctly ignores itself. ([#701](https://github.com/sveltejs/kit/pull/701))
- f7badf1: Add '\$service-worker' to paths in tsconfig.json ([#716](https://github.com/sveltejs/kit/pull/716))
- 9a664e1: Set `.eslintrc.cjs` to ignore all `.cjs` files. ([#707](https://github.com/sveltejs/kit/pull/707))
- df380e6: Add env options to eslint config ([#722](https://github.com/sveltejs/kit/pull/722))

## 2.0.0-next.42

### Patch Changes

- a52cf82: add eslint and prettier setup options ([#632](https://github.com/sveltejs/kit/pull/632))

## 2.0.0-next.41

### Patch Changes

- 8024178: remove @sveltejs/app-utils ([#600](https://github.com/sveltejs/kit/pull/600))

## 2.0.0-next.40

### Patch Changes

- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 2.0.0-next.39

### Patch Changes

- ac3669e: Move Vite config into svelte.config.cjs ([#569](https://github.com/sveltejs/kit/pull/569))

## 2.0.0-next.38

### Patch Changes

- c04887c: create-svelte: Include globals.d.ts in tsconfig ([#549](https://github.com/sveltejs/kit/pull/549))

## 2.0.0-next.37

### Patch Changes

- c76c9bf: Upgrade Vite ([#544](https://github.com/sveltejs/kit/pull/544))
- ab28c0a: create-svelte: Remove duplicate types ([#538](https://github.com/sveltejs/kit/pull/538))

## 2.0.0-next.36

### Patch Changes

- 0da62eb: create-svelte: Include missing ts-template ([#535](https://github.com/sveltejs/kit/pull/535))

## 2.0.0-next.35

### Patch Changes

- bb01514: Actually fix $component => $lib transition ([#529](https://github.com/sveltejs/kit/pull/529))

## 2.0.0-next.34

### Patch Changes

- 848687c: Fix location of example `Counter.svelte` component ([#522](https://github.com/sveltejs/kit/pull/522))

## 2.0.0-next.33

### Patch Changes

- f7dc6ad: Fix typo in template app
- 5554acc: Add \$lib alias ([#511](https://github.com/sveltejs/kit/pull/511))
- c0ed7a8: create-svelte: globals.d.ts TSDoc fixes, add vite/client types to js/tsconfig ([#517](https://github.com/sveltejs/kit/pull/517))

## 2.0.0-next.32

### Patch Changes

- 97b7ea4: jsconfig for js projects ([#510](https://github.com/sveltejs/kit/pull/510))

## 2.0.0-next.31

### Patch Changes

- c3cf3f3: Bump deps ([#492](https://github.com/sveltejs/kit/pull/492))
- 625747d: create-svelte: bundle production dependencies for SSR ([#486](https://github.com/sveltejs/kit/pull/486))

## 2.0.0-next.30

### Patch Changes

- b800049: Include type declarations ([#442](https://github.com/sveltejs/kit/pull/442))

## 2.0.0-next.29

### Patch Changes

- 15dd6d6: Fix setup to include vite ([#415](https://github.com/sveltejs/kit/pull/415))

## 2.0.0-next.28

### Patch Changes

- Use Vite

## 2.0.0-next.27

### Patch Changes

- Convert everything to ESM

## 2.0.0-next.26

### Patch Changes

- 00cbaf6: Rename `_.config.js` to `_.config.cjs` ([#356](https://github.com/sveltejs/kit/pull/356))

## 2.0.0-next.25

### Patch Changes

- c9d8d4f: Render to #svelte by default

## 2.0.0-next.24

### Patch Changes

- 0e45255: Move options behind kit namespace, change paths -> kit.files ([#236](https://github.com/sveltejs/kit/pull/236))

## 2.0.0-next.23

### Patch Changes

- Use next tag for all packages

## 2.0.0-next.22

### Patch Changes

- Bump kit version

## 2.0.0-next.21

### Patch Changes

- Show create-svelte version when starting a new project

## 2.0.0-alpha.19

### Patch Changes

- Add svelte-kit start command

## 2.0.0-alpha.18

### Patch Changes

- rename CLI to svelte-kit
- 0904e22: rename svelte CLI to svelte-kit ([#186](https://github.com/sveltejs/kit/pull/186))

## 2.0.0-alpha.16

### Patch Changes

- 5fbc475: Add TypeScript support at project init

## 2.0.0-alpha.14-15

### Patch Changes

- Add 'here be dragons' warning

## 2.0.0-alpha.13

### Patch Changes

- d936573: Give newly created app a name based on current directory
- 5ca907c: Use shared mkdirp helper

'''
'''--- packages/create-svelte/README.md ---
# create-svelte

This package has been deprecated. Please see [`sv`](https://npmjs.com/package/sv) instead:

```bash
npx sv create
```

## License

[MIT](../../LICENSE)

'''
'''--- packages/enhanced-img/CHANGELOG.md ---
# @sveltejs/enhanced-img

## 0.4.1
### Patch Changes

- fix: correctly handle `<enhanced:img />` elements nested in other DOM elements ([#12945](https://github.com/sveltejs/kit/pull/12945))

## 0.4.0
### Minor Changes

- breaking: require Svelte 5 ([#12822](https://github.com/sveltejs/kit/pull/12822))

## 0.3.10
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

## 0.3.9
### Patch Changes

- chore: upgrade svelte-parse-markup ([#12793](https://github.com/sveltejs/kit/pull/12793))

## 0.3.8
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

## 0.3.7
### Patch Changes

- fix: avoid duplicating width/height attributes ([#12673](https://github.com/sveltejs/kit/pull/12673))

## 0.3.6
### Patch Changes

- fix: address Svelte 5 warning ([`ec04dae73702c99652e4972d2b7363f2c11ccf5a`](https://github.com/sveltejs/kit/commit/ec04dae73702c99652e4972d2b7363f2c11ccf5a))

## 0.3.5
### Patch Changes

- perf: hoist vite asset declarations to module block ([#12627](https://github.com/sveltejs/kit/pull/12627))

## 0.3.4
### Patch Changes

- perf: apply performance optimization to dev srcset ([#12621](https://github.com/sveltejs/kit/pull/12621))

## 0.3.3
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

## 0.3.2
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

- fix: ensure src attribute is properly formed ([`65931f276ac2102032e3032c864a472eee19b7bb`](https://github.com/sveltejs/kit/commit/65931f276ac2102032e3032c864a472eee19b7bb))

## 0.3.1
### Patch Changes

- fix: make `*?enhanced` imports available in the ambient context ([#12363](https://github.com/sveltejs/kit/pull/12363))

## 0.3.0

### Minor Changes

- breaking: return plugin synchronously from `enhancedImages()` ([#12297](https://github.com/sveltejs/kit/pull/12297))

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

## 0.2.1

### Patch Changes

- fix: use correct type for `*?enhanced` imports ([#12224](https://github.com/sveltejs/kit/pull/12224))

## 0.2.0

### Minor Changes

- feat: upgrade vite-imagetools to v7. caches build output by default ([#12055](https://github.com/sveltejs/kit/pull/12055))

## 0.1.9

### Patch Changes

- fix: support shorthand attribute syntax ([#11884](https://github.com/sveltejs/kit/pull/11884))

## 0.1.8

### Patch Changes

- fix: correct images cache key to avoid collisions when images have same name ([#11602](https://github.com/sveltejs/kit/pull/11602))

## 0.1.7

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- fix: throw an error if image cannot be resolved ([#11346](https://github.com/sveltejs/kit/pull/11346))

- fix: attempt to address issues accessing images on filesystem ([#11403](https://github.com/sveltejs/kit/pull/11403))

## 0.1.6

### Patch Changes

- chore: upgrade vite-imagetools ([#11122](https://github.com/sveltejs/kit/pull/11122))

## 0.1.5

### Patch Changes

- fix: correctly generate client-side code ([#11059](https://github.com/sveltejs/kit/pull/11059))

## 0.1.4

### Patch Changes

- fix: avoid creating conflicting import statements ([#11047](https://github.com/sveltejs/kit/pull/11047))

## 0.1.3

### Patch Changes

- fix: only resolve images if optimizable ([#11041](https://github.com/sveltejs/kit/pull/11041))

## 0.1.2

### Patch Changes

- fix: refresh in dev mode when an image changes ([#11033](https://github.com/sveltejs/kit/pull/11033))

- fix: auto-import of svg images ([`4426daebe`](https://github.com/sveltejs/kit/commit/4426daebe1d345f60554225e3f12ea932b0110e4))

## 0.1.1

### Patch Changes

- feat: add experimental `@sveltejs/enhanced-img` package ([#10788](https://github.com/sveltejs/kit/pull/10788))

'''
'''--- packages/enhanced-img/README.md ---
# `@sveltejs/enhanced-img`

A Vite plugin which runs a Svelte preprocessor to locate images and then transform them at build-time.

**WARNING**: This package is experimental. It uses pre-1.0 versioning and may introduce breaking changes with every minor version release.

## Docs

[Docs](https://svelte.dev/docs/kit/images)

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/enhanced-img/CHANGELOG.md).

## Acknowledgements

We'd like to thank the author of `svelte-preprocess-import-assets`, which this code is partially based off of. We'd also like to thank the authors of `vite-imagetools` which is used in `@sveltejs/enhanced-img`.

'''
'''--- packages/kit/CHANGELOG.md ---
# @sveltejs/kit

## 2.9.0
### Minor Changes

- feat: Vite 6 support ([#12270](https://github.com/sveltejs/kit/pull/12270))

### Patch Changes

- fix: transform link[rel='shortcut icon'] and link[rel='apple-touch-icon'] to be absolute to avoid console error when navigating ([#13077](https://github.com/sveltejs/kit/pull/13077))

## 2.8.5
### Patch Changes

- fix: don't hydrate when falling back to error page ([#13056](https://github.com/sveltejs/kit/pull/13056))

## 2.8.4
### Patch Changes

- fix: update inline css url generation for FOUC prevention in dev ([#13007](https://github.com/sveltejs/kit/pull/13007))

## 2.8.3
### Patch Changes

- fix: ensure error messages are escaped ([#13050](https://github.com/sveltejs/kit/pull/13050))

- fix: escape values included in dev 404 page ([#13039](https://github.com/sveltejs/kit/pull/13039))

## 2.8.2
### Patch Changes

- fix: prevent duplicate fetch request when using Request with load function's fetch ([#13023](https://github.com/sveltejs/kit/pull/13023))

- fix: do not override default cookie decoder to allow users to override the `cookie` library version ([#13037](https://github.com/sveltejs/kit/pull/13037))

## 2.8.1
### Patch Changes

- fix: only add nonce to `script-src-elem`, `style-src-attr` and `style-src-elem` CSP directives when `unsafe-inline` is not present ([#11613](https://github.com/sveltejs/kit/pull/11613))

- fix: support HTTP/2 in dev and production. Revert the changes from [#12907](https://github.com/sveltejs/kit/pull/12907) to downgrade HTTP/2 to TLS as now being unnecessary ([#12989](https://github.com/sveltejs/kit/pull/12989))

## 2.8.0
### Minor Changes

- feat: add helper to identify `ActionFailure` objects ([#12878](https://github.com/sveltejs/kit/pull/12878))

## 2.7.7
### Patch Changes

- fix: update link in JSDoc ([#12963](https://github.com/sveltejs/kit/pull/12963))

## 2.7.6
### Patch Changes

- fix: update broken links in JSDoc ([#12960](https://github.com/sveltejs/kit/pull/12960))

## 2.7.5
### Patch Changes

- fix: warn on invalid cookie name characters ([#12806](https://github.com/sveltejs/kit/pull/12806))

- fix: when using `@vitejs/plugin-basic-ssl`, set a no-op proxy config to downgrade from HTTP/2 to TLS since `undici` does not yet enable HTTP/2 by default ([#12907](https://github.com/sveltejs/kit/pull/12907))

## 2.7.4
### Patch Changes

- fix: ensure element is focused after subsequent clicks of the same hash link ([#12866](https://github.com/sveltejs/kit/pull/12866))

- fix: avoid preload if event default was prevented for `touchstart` and `mousedown` events ([#12887](https://github.com/sveltejs/kit/pull/12887))

- fix: avoid reloading behaviour for hash links with data-sveltekit-reload if the hash is on the same page ([#12866](https://github.com/sveltejs/kit/pull/12866))

## 2.7.3
### Patch Changes

- fix: include importer in illegal import error message ([#12820](https://github.com/sveltejs/kit/pull/12820))

- fix: don't try reading assets directly that aren't present ([#12876](https://github.com/sveltejs/kit/pull/12876))

- fix: decode non-latin characters when previewing prerendered pages ([#12874](https://github.com/sveltejs/kit/pull/12874))

- fix: better error message when a `Result` is returned from a form action ([#12829](https://github.com/sveltejs/kit/pull/12829))

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

## 2.7.2
### Patch Changes

- fix: use absolute links in JSDoc comments ([#12718](https://github.com/sveltejs/kit/pull/12718))

## 2.7.1
### Patch Changes

- chore: upgrade to sirv 3.0 ([#12796](https://github.com/sveltejs/kit/pull/12796))

- fix: warn when form action responses are lost because SSR is off ([#12063](https://github.com/sveltejs/kit/pull/12063))

## 2.7.0
### Minor Changes

- feat: update service worker when new version is detected ([#12448](https://github.com/sveltejs/kit/pull/12448))

### Patch Changes

- fix: correctly handle relative paths when fetching assets on the server ([#12113](https://github.com/sveltejs/kit/pull/12113))

- fix: decode non ASCII anchor hashes when scrolling into view ([#12699](https://github.com/sveltejs/kit/pull/12699))

- fix: page response missing CSP and Link headers when return promise in `load` ([#12418](https://github.com/sveltejs/kit/pull/12418))

## 2.6.4
### Patch Changes

- fix: only preload links that have a different URL than the current page ([#12773](https://github.com/sveltejs/kit/pull/12773))

- fix: revert change to replace version in generateBundle ([#12779](https://github.com/sveltejs/kit/pull/12779))

- fix: catch stack trace fixing errors thrown in web containers ([#12775](https://github.com/sveltejs/kit/pull/12775))

- fix: use absolute links in JSDoc comments ([#12772](https://github.com/sveltejs/kit/pull/12772))

## 2.6.3
### Patch Changes

- fix: ensure a changing `version` doesn't affect the hashes for chunks without any actual code changes ([#12700](https://github.com/sveltejs/kit/pull/12700))

- fix: prevent crash when logging URL search params in a server load function ([#12763](https://github.com/sveltejs/kit/pull/12763))

- chore: revert update dependency cookie to ^0.7.0 ([#12767](https://github.com/sveltejs/kit/pull/12767))

## 2.6.2
### Patch Changes

- chore(deps): update dependency cookie to ^0.7.0 ([#12746](https://github.com/sveltejs/kit/pull/12746))

## 2.6.1
### Patch Changes

- fix: better error message when calling push/replaceState before router is initialized ([#11968](https://github.com/sveltejs/kit/pull/11968))

## 2.6.0
### Minor Changes

- feat: support typed arrays in `load` functions ([#12716](https://github.com/sveltejs/kit/pull/12716))

### Patch Changes

- fix: open a new tab for `<form target="_blank">` and `<button formtarget="_blank"> submissions ([#11936](https://github.com/sveltejs/kit/pull/11936))

## 2.5.28
### Patch Changes

- fix: import `node:process` instead of using globals ([#12641](https://github.com/sveltejs/kit/pull/12641))

## 2.5.27
### Patch Changes

- fix: asynchronously instantiate components when using Svelte 5 ([#12613](https://github.com/sveltejs/kit/pull/12613))

- fix: use `{@render ...}` tag when generating default fallback page for svelte 5 apps ([#12653](https://github.com/sveltejs/kit/pull/12653))

- fix: emulate `event.platform` even when the route does not exist ([#12513](https://github.com/sveltejs/kit/pull/12513))

## 2.5.26
### Patch Changes

- fix: exclude service worker directory from tsconfig ([#12196](https://github.com/sveltejs/kit/pull/12196))

## 2.5.25
### Patch Changes

- chore: upgrade dts-buddy to 0.5.3 ([`6056ba30e29ac5747c356fbf1a42dd71f2c4aa1f`](https://github.com/sveltejs/kit/commit/6056ba30e29ac5747c356fbf1a42dd71f2c4aa1f))

## 2.5.24
### Patch Changes

- extend peer dependency range for @sveltejs/vite-plugin-svelte to include 4.0.0-next for improved svelte5 support ([#12593](https://github.com/sveltejs/kit/pull/12593))

## 2.5.23
### Patch Changes

- fix: use dynamic components in `root.svelte` instead of `svelte:component` for svelte 5 ([#12584](https://github.com/sveltejs/kit/pull/12584))

## 2.5.22
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

## 2.5.21
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

## 2.5.20
### Patch Changes

- fix: set revalidate cache header on 404'd static assets ([#12530](https://github.com/sveltejs/kit/pull/12530))

## 2.5.19
### Patch Changes

- fix: Svelte 5 - ignore `binding_non_reactive` warning in generated root component (you also need to update to `svelte@5.0.0-next.204`) ([#12524](https://github.com/sveltejs/kit/pull/12524))

## 2.5.18
### Patch Changes

- fix: respect HTML attributes `enctype` and `formenctype` for forms with `use:enhance` ([#12198](https://github.com/sveltejs/kit/pull/12198))

- fix: prevent client import error when a `hooks.server` file imports a private environment variable ([#12195](https://github.com/sveltejs/kit/pull/12195))

- fix: set default `Content-Type` header to `application/x-www-form-urlencoded` for `POST` form submissions with `use:enhance` to align with native form behaviour ([#12198](https://github.com/sveltejs/kit/pull/12198))

## 2.5.17

### Patch Changes

- chore: update package description ([#11846](https://github.com/sveltejs/kit/pull/11846))

## 2.5.16

### Patch Changes

- fix: determine local Svelte version more reliably ([#12350](https://github.com/sveltejs/kit/pull/12350))

## 2.5.15

### Patch Changes

- fix: always decode asset URLs ([#12352](https://github.com/sveltejs/kit/pull/12352))

## 2.5.14

### Patch Changes

- fix: read non-encoded data URIs ([#12347](https://github.com/sveltejs/kit/pull/12347))

## 2.5.13

### Patch Changes

- fix: decode asset URLs in dev when reading them, but for real this time ([#12344](https://github.com/sveltejs/kit/pull/12344))

## 2.5.12

### Patch Changes

- fix: decode asset URLs in dev when reading them ([#12341](https://github.com/sveltejs/kit/pull/12341))

## 2.5.11

### Patch Changes

- fix: hrefs that start with `config.prerender.origin` are now crawled ([#12277](https://github.com/sveltejs/kit/pull/12277))

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

- fix: handle whitespace in HTTP Accept header ([#12292](https://github.com/sveltejs/kit/pull/12292))

## 2.5.10

### Patch Changes

- fix: exclude server files from optimizeDeps.entries ([#12242](https://github.com/sveltejs/kit/pull/12242))

- fix: bump import-meta-resolve to remove deprecation warnings ([#12240](https://github.com/sveltejs/kit/pull/12240))

## 2.5.9

### Patch Changes

- fix: yield main thread before navigating ([#12225](https://github.com/sveltejs/kit/pull/12225))

- fix: correctly handle aliases to files in the `.svelte-kit` directory ([#12220](https://github.com/sveltejs/kit/pull/12220))

## 2.5.8

### Patch Changes

- fix: prevent excessive Vite dependency optimizations on navigation ([#12182](https://github.com/sveltejs/kit/pull/12182))

## 2.5.7

### Patch Changes

- chore(deps): update devalue to v5 ignore non-enumerable symbols during serialization ([#12141](https://github.com/sveltejs/kit/pull/12141))

## 2.5.6

### Patch Changes

- fix: avoid incorrectly un- and re-escaping cookies collected during a server-side `fetch` ([#11904](https://github.com/sveltejs/kit/pull/11904))

## 2.5.5

### Patch Changes

- fix: only hydrate when page is server-rendered ([#12050](https://github.com/sveltejs/kit/pull/12050))

## 2.5.4

### Patch Changes

- fix: prevent navigation when `data-sveltekit-preload-data` fails to fetch due to network error ([#11944](https://github.com/sveltejs/kit/pull/11944))

## 2.5.3

### Patch Changes

- fix: revert tsconfig change that includes svelte.config.js ([#11908](https://github.com/sveltejs/kit/pull/11908))

- fix: exclude server worker from tsconfig again ([#11727](https://github.com/sveltejs/kit/pull/11727))

## 2.5.2

### Patch Changes

- fix: tsconfig includes should cover svelte.config.js ([#11886](https://github.com/sveltejs/kit/pull/11886))

## 2.5.1

### Patch Changes

- fix: prevent stale values after invalidation ([#11870](https://github.com/sveltejs/kit/pull/11870))

- fix: prevent false positive `history.pushState` and `history.replaceState` warnings ([#11858](https://github.com/sveltejs/kit/pull/11858))

- fix: relax status code types ([#11781](https://github.com/sveltejs/kit/pull/11781))

- fix: `popstate` navigations take `pushState` navigations into account ([#11765](https://github.com/sveltejs/kit/pull/11765))

## 2.5.0

### Minor Changes

- feat: dev/preview/prerender platform emulation ([#11730](https://github.com/sveltejs/kit/pull/11730))

### Patch Changes

- fix: strip `/@fs` prefix correctly on Windows when invoking `read()` in dev mode ([#11728](https://github.com/sveltejs/kit/pull/11728))

## 2.4.3

### Patch Changes

- fix: only disallow body with GET/HEAD ([#11710](https://github.com/sveltejs/kit/pull/11710))

## 2.4.2

### Patch Changes

- fix: ignore bodies sent with non-PUT/PATCH/POST requests ([#11708](https://github.com/sveltejs/kit/pull/11708))

## 2.4.1

### Patch Changes

- fix: use Vite's default value for `build.target` and respect override supplied by user ([#11688](https://github.com/sveltejs/kit/pull/11688))

- fix: properly decode base64 strings inside `read` ([#11682](https://github.com/sveltejs/kit/pull/11682))

- fix: default route config to `{}` for feature checking ([#11685](https://github.com/sveltejs/kit/pull/11685))

- fix: handle `onNavigate` callbacks correctly ([#11678](https://github.com/sveltejs/kit/pull/11678))

## 2.4.0

### Minor Changes

- feat: add `$app/server` module with `read` function for reading assets from filesystem ([#11649](https://github.com/sveltejs/kit/pull/11649))

## 2.3.5

### Patch Changes

- fix: log a warning if fallback page overwrites prerendered page ([#11661](https://github.com/sveltejs/kit/pull/11661))

## 2.3.4

### Patch Changes

- fix: don't stash away original `history` methods so other libs can monkeypatch it ([#11657](https://github.com/sveltejs/kit/pull/11657))

## 2.3.3

### Patch Changes

- fix: remove internal `__sveltekit/` module declarations from types ([#11620](https://github.com/sveltejs/kit/pull/11620))

## 2.3.2

### Patch Changes

- fix: return plaintext 404 for anything under appDir ([#11597](https://github.com/sveltejs/kit/pull/11597))

- fix: populate dynamic public env without using top-level await, which fails in Safari ([#11601](https://github.com/sveltejs/kit/pull/11601))

## 2.3.1

### Patch Changes

- fix: amend onNavigate type ([#11599](https://github.com/sveltejs/kit/pull/11599))

- fix: better error message when peer dependency cannot be found ([#11598](https://github.com/sveltejs/kit/pull/11598))

## 2.3.0

### Minor Changes

- feat: add `reroute` hook ([#11537](https://github.com/sveltejs/kit/pull/11537))

## 2.2.2

### Patch Changes

- fix: only add nonce to `style-src` CSP directive when `unsafe-inline` is not present ([#11575](https://github.com/sveltejs/kit/pull/11575))

## 2.2.1

### Patch Changes

- feat: add CSP support for style-src-elem ([#11562](https://github.com/sveltejs/kit/pull/11562))

- fix: address CSP conflicts with sha/nonce during dev ([#11562](https://github.com/sveltejs/kit/pull/11562))

## 2.2.0

### Minor Changes

- feat: expose `$env/static/public` in service workers ([#10994](https://github.com/sveltejs/kit/pull/10994))

### Patch Changes

- fix: reload page on startup if `document.URL` contains credentials ([#11179](https://github.com/sveltejs/kit/pull/11179))

## 2.1.2

### Patch Changes

- fix: restore invalid route error message during build process ([#11559](https://github.com/sveltejs/kit/pull/11559))

## 2.1.1

### Patch Changes

- fix: respect the trailing slash option when navigating from the basepath root page ([#11388](https://github.com/sveltejs/kit/pull/11388))

- chore: shrink error messages shipped to client ([#11551](https://github.com/sveltejs/kit/pull/11551))

## 2.1.0

### Minor Changes

- feat: make client router treeshakeable ([#11340](https://github.com/sveltejs/kit/pull/11340))

### Patch Changes

- chore: reduce client bundle size ([#11547](https://github.com/sveltejs/kit/pull/11547))

## 2.0.8

### Patch Changes

- fix: always scroll to top when clicking a # or #top link ([`099608c428a49504785eab3afe3b2e76a9317bdf`](https://github.com/sveltejs/kit/commit/099608c428a49504785eab3afe3b2e76a9317bdf))

- fix: add nonce or hash to "script-src-elem", "style-src-attr" and "style-src-elem" if defined in CSP config ([#11485](https://github.com/sveltejs/kit/pull/11485))

- fix: decode server data with `stream: true` during client-side navigation ([#11409](https://github.com/sveltejs/kit/pull/11409))

- fix: capture scroll position when using `pushState` ([#11540](https://github.com/sveltejs/kit/pull/11540))

- chore: use peer dependencies when linked ([#11433](https://github.com/sveltejs/kit/pull/11433))

## 2.0.7

### Patch Changes

- chore: removed deprecated config.package type ([#11462](https://github.com/sveltejs/kit/pull/11462))

## 2.0.6

### Patch Changes

- fix: allow dynamic env access when building but not prerendering ([#11436](https://github.com/sveltejs/kit/pull/11436))

## 2.0.5

### Patch Changes

- fix: render SPA shell when SSR is turned off and there is no server data ([#11405](https://github.com/sveltejs/kit/pull/11405))

- fix: upgrade `sirv` and `mrmime` to modernize javascript mime type ([#11419](https://github.com/sveltejs/kit/pull/11419))

## 2.0.4

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

- fix: adjust missing inner content warning ([#11394](https://github.com/sveltejs/kit/pull/11394))

- fix: prevent esbuild adding phantom exports to service worker ([#11400](https://github.com/sveltejs/kit/pull/11400))

- fix: goto type include state ([#11398](https://github.com/sveltejs/kit/pull/11398))

- fix: ensure assets are served gzip in preview ([#11377](https://github.com/sveltejs/kit/pull/11377))

## 2.0.3

### Patch Changes

- fix: reinstantiate state parameter for goto ([#11342](https://github.com/sveltejs/kit/pull/11342))

## 2.0.2

### Patch Changes

- fix: prevent endless SPA 404 loop ([#11354](https://github.com/sveltejs/kit/pull/11354))

## 2.0.1

### Patch Changes

- fix: correctly handle trailing slash redirect when navigating from the root page ([#11357](https://github.com/sveltejs/kit/pull/11357))

## 2.0.0

### Major Changes

- breaking: remove top-level promise awaiting ([#11176](https://github.com/sveltejs/kit/pull/11176))

- breaking: prevent use of dynamic env vars during prerendering, serve env vars dynamically ([#11277](https://github.com/sveltejs/kit/pull/11277))

- breaking: remove deprecated `use:enhance` callback values ([#11282](https://github.com/sveltejs/kit/pull/11282))

- breaking: turn `error` and `redirect` into commands ([#11165](https://github.com/sveltejs/kit/pull/11165))

- breaking: the type for `depends` now requires a `:` as part of the string ([#11201](https://github.com/sveltejs/kit/pull/11201))

- breaking: remove baseUrl fallback from generated tsconfig ([#11294](https://github.com/sveltejs/kit/pull/11294))

- breaking: fail if route with +page and +server is marked prerenderable ([#11256](https://github.com/sveltejs/kit/pull/11256))

- breaking: remove `resolvePath` in favour of `resolveRoute` from `$app/paths` ([#11265](https://github.com/sveltejs/kit/pull/11265))

- breaking: drop support for Svelte 3 ([#11168](https://github.com/sveltejs/kit/pull/11168))

- breaking: require Vite 5.0.3+ ([#11122](https://github.com/sveltejs/kit/pull/11122))

- breaking: generate `__data.json` files as sibling to `.html` files ([#11269](https://github.com/sveltejs/kit/pull/11269))

- breaking: fail if +page and +server have mismatched config ([#11256](https://github.com/sveltejs/kit/pull/11256))

- breaking: error if form without multipart/form-data enctype contains a file input ([#11282](https://github.com/sveltejs/kit/pull/11282))

- breaking: require paths pass to preloadCode to be prefixed with basepath ([#11259](https://github.com/sveltejs/kit/pull/11259))

- breaking: `@sveltejs/vite-plugin-svelte` is now a peer dependency and will need to be installed in each project using SvelteKit ([#11184](https://github.com/sveltejs/kit/pull/11184))

- breaking: stop re-exporting vitePreprocess ([#11297](https://github.com/sveltejs/kit/pull/11297))

- breaking: require path option when setting/deleting/serializing cookies ([#11240](https://github.com/sveltejs/kit/pull/11240))

- breaking: tighten up error handling ([#11289](https://github.com/sveltejs/kit/pull/11289))

- breaking: remove state option from goto in favor of shallow routing ([#11307](https://github.com/sveltejs/kit/pull/11307))

- breaking: disallow external navigation with `goto` ([#11207](https://github.com/sveltejs/kit/pull/11207))

- breaking: upgrade to TypeScript 5. Default `moduleResolution` to `bundler` in user projects to be permissive in consuming and `NodeNext` when running `package` to be strict in distributing ([#11160](https://github.com/sveltejs/kit/pull/11160))

- breaking: undefined is no longer a valid value for paths.relative ([#11185](https://github.com/sveltejs/kit/pull/11185))

- breaking: require Node 18.13 or newer ([#11172](https://github.com/sveltejs/kit/pull/11172))

- breaking: fix path resolution ([#11276](https://github.com/sveltejs/kit/pull/11276))

- breaking: remove `dangerZone.trackServerFetches` ([#11235](https://github.com/sveltejs/kit/pull/11235))

### Minor Changes

- feat: add untrack to load ([#11311](https://github.com/sveltejs/kit/pull/11311))

- feat: implement shallow routing ([#11307](https://github.com/sveltejs/kit/pull/11307))

- feat: provide SvelteKit html typings ([#11222](https://github.com/sveltejs/kit/pull/11222))

- feat: redact internal stack trace when reporting config errors ([#11292](https://github.com/sveltejs/kit/pull/11292))

- feat: allow for fine grained invalidation of search params ([#11258](https://github.com/sveltejs/kit/pull/11258))

### Patch Changes

- fix: prerender optional parameters as empty when `entries` contains `'*'` ([#11178](https://github.com/sveltejs/kit/pull/11178))

- fix: resolve route config correctly ([#11256](https://github.com/sveltejs/kit/pull/11256))

- fix: import Svelte types from svelte/compiler ([#11188](https://github.com/sveltejs/kit/pull/11188))

- fix: reset invalid resources after a successful invalidation ([#11268](https://github.com/sveltejs/kit/pull/11268))

- fix: Adjust fail method and ActionFailure type ([#11260](https://github.com/sveltejs/kit/pull/11260))

- chore(deps): upgrade cookies dependency ([#11189](https://github.com/sveltejs/kit/pull/11189))

## 1.30.3

### Patch Changes

- fix: correct documentation for beforeNavigate ([#11300](https://github.com/sveltejs/kit/pull/11300))

## 1.30.2

### Patch Changes

- fix: revert recent 'correctly return 415' and 'correctly return 404' changes ([#11295](https://github.com/sveltejs/kit/pull/11295))

## 1.30.1

### Patch Changes

- fix: prerendered root page with `paths.base` config uses correct trailing slash option ([#10763](https://github.com/sveltejs/kit/pull/10763))

- fix: correctly return 404 when a form action is not found ([#11278](https://github.com/sveltejs/kit/pull/11278))

## 1.30.0

### Minor Changes

- feat: inline `response.arrayBuffer()` during ssr ([#10535](https://github.com/sveltejs/kit/pull/10535))

### Patch Changes

- fix: allow `"false"` value for preload link options ([#10555](https://github.com/sveltejs/kit/pull/10555))

- fix: call worker `unref` instead of `terminate` ([#10120](https://github.com/sveltejs/kit/pull/10120))

- fix: correctly analyse exported server API methods during build ([#11019](https://github.com/sveltejs/kit/pull/11019))

- fix: avoid error when back navigating before page is initialized ([#10636](https://github.com/sveltejs/kit/pull/10636))

- fix: allow service-worker.js to import assets ([#9285](https://github.com/sveltejs/kit/pull/9285))

- fix: distinguish better between not-found and internal-error ([#11131](https://github.com/sveltejs/kit/pull/11131))

## 1.29.1

### Patch Changes

- fix: correctly return 415 when unexpected content types are submitted to actions ([#11255](https://github.com/sveltejs/kit/pull/11255))

- chore: deprecate `preloadCode` calls with multiple arguments ([#11266](https://github.com/sveltejs/kit/pull/11266))

## 1.29.0

### Minor Changes

- feat: add `resolveRoute` to `$app/paths`, deprecate `resolvePath` ([#11261](https://github.com/sveltejs/kit/pull/11261))

## 1.28.0

### Minor Changes

- chore: deprecate top level promise await behaviour ([#11175](https://github.com/sveltejs/kit/pull/11175))

### Patch Changes

- fix: resolve relative cookie paths before storing ([#11253](https://github.com/sveltejs/kit/pull/11253))

- chore: deprecate cookies.set/delete without path option ([#11237](https://github.com/sveltejs/kit/pull/11237))

- fix: make sure promises from fetch handle errors ([#11228](https://github.com/sveltejs/kit/pull/11228))

## 1.27.7

### Patch Changes

- fix: set runes option in generated root ([#11111](https://github.com/sveltejs/kit/pull/11111))

- fix: retain URL query string for trailing slash redirects to prerendered pages ([#11142](https://github.com/sveltejs/kit/pull/11142))

## 1.27.6

### Patch Changes

- fix: use runes in generated root when detecting Svelte 5 ([#11028](https://github.com/sveltejs/kit/pull/11028))

- fix: correctly prerender pages that use browser globals and have SSR turned off ([#11032](https://github.com/sveltejs/kit/pull/11032))

- fix: correctly show 404 for prerendered dynamic routes when navigating client-side without a root layout server load ([#11025](https://github.com/sveltejs/kit/pull/11025))

## 1.27.5

### Patch Changes

- fix: add vite.config.js to included files in generated tsconfig ([#10788](https://github.com/sveltejs/kit/pull/10788))

- fix: cache location.origin on startup ([#11004](https://github.com/sveltejs/kit/pull/11004))

## 1.27.4

### Patch Changes

- fix: generate `__data.json` for prerendered pages when SSR is turned off ([#10988](https://github.com/sveltejs/kit/pull/10988))

- chore: add experimental compatibility for Svelte 5 ([#11002](https://github.com/sveltejs/kit/pull/11002))

## 1.27.3

### Patch Changes

- fix: use correct environment file for rendering spa fallback page ([#10963](https://github.com/sveltejs/kit/pull/10963))

## 1.27.2

### Patch Changes

- fix: missing `File` Node polyfill for Node version 18.11.0+ ([#10948](https://github.com/sveltejs/kit/pull/10948))

## 1.27.1

### Patch Changes

- fix: only apply some polyfills below node 18.11 ([#10920](https://github.com/sveltejs/kit/pull/10920))

## 1.27.0

### Minor Changes

- feat: add `invalidateAll` boolean option to `enhance` callback ([#9889](https://github.com/sveltejs/kit/pull/9889))

## 1.26.0

### Minor Changes

- feat: infer route parameter type from matcher's guard check if applicable ([#10755](https://github.com/sveltejs/kit/pull/10755))

### Patch Changes

- fix: basic mime type handling for prerendered pages in preview ([#10851](https://github.com/sveltejs/kit/pull/10851))

- chore: use just a single library (mrmime) for mime type handling ([#10851](https://github.com/sveltejs/kit/pull/10851))

- chore: bump undici to address security issue ([#10885](https://github.com/sveltejs/kit/pull/10885))

- fix: follow whatwg fetch spec for handling redirect loops ([#10857](https://github.com/sveltejs/kit/pull/10857))

- fix: use `window.fetch` in `load` functions to allow libraries to patch it ([#10009](https://github.com/sveltejs/kit/pull/10009))

- chore(deps): update dependency undici to ~5.26.0 ([#10860](https://github.com/sveltejs/kit/pull/10860))

## 1.25.2

### Patch Changes

- fix: correctly update `$page.url.hash` when navigating history ([#10843](https://github.com/sveltejs/kit/pull/10843))

- fix: strip virtual module prefix from error messages ([#10776](https://github.com/sveltejs/kit/pull/10776))

- fix: cancel ongoing navigation when the browser back button is hit to prevent an incorrect page from being rendered ([#10727](https://github.com/sveltejs/kit/pull/10727))

- fix: only remove Vite manifest when copying files ([#10782](https://github.com/sveltejs/kit/pull/10782))

## 1.25.1

### Patch Changes

- fix: correct line numbers in stack trace ([#10769](https://github.com/sveltejs/kit/pull/10769))

- fix: correctly return 404 when navigating to a missing page and the root layout fetches a prerendered endpoint ([#10565](https://github.com/sveltejs/kit/pull/10565))

- fix: allow optional param in middle of route ([#10736](https://github.com/sveltejs/kit/pull/10736))

- chore: update `undici` ([#10641](https://github.com/sveltejs/kit/pull/10641))

## 1.25.0

### Minor Changes

- feat: add server endpoint catch-all method handler `fallback` ([#9755](https://github.com/sveltejs/kit/pull/9755))

### Patch Changes

- fix: allow calling `fetch` for any scheme ([#10699](https://github.com/sveltejs/kit/pull/10699))

## 1.24.1

### Patch Changes

- fix: mark aborted/cancelled navigation as handled ([#10666](https://github.com/sveltejs/kit/pull/10666))

## 1.24.0

### Minor Changes

- feat: onNavigate lifecycle function ([#9605](https://github.com/sveltejs/kit/pull/9605))

### Patch Changes

- fix: Use Proxy to track usage of client side load `event.route` ([#10576](https://github.com/sveltejs/kit/pull/10576))

## 1.23.1

### Patch Changes

- fix: process globs in `pkg.workspaces` ([#10625](https://github.com/sveltejs/kit/pull/10625))

## 1.23.0

### Minor Changes

- feat: add warning for mistyped route filenames ([#10558](https://github.com/sveltejs/kit/pull/10558))

- feat: accept `URL` in `redirect` ([#10570](https://github.com/sveltejs/kit/pull/10570))

### Patch Changes

- fix: adjust the type of `Navigation["type"]` ([#10599](https://github.com/sveltejs/kit/pull/10599))

- fix: allow logging `$page.url` during prerendering ([#10567](https://github.com/sveltejs/kit/pull/10567))

## 1.22.6

### Patch Changes

- fix: correctly restore trailing slash in url pathname for data requests ([#10475](https://github.com/sveltejs/kit/pull/10475))

- fix: load trailing slash option from server even when there's no load function ([#10475](https://github.com/sveltejs/kit/pull/10475))

## 1.22.5

### Patch Changes

- fix: make server assets available during `vite preview` ([#10511](https://github.com/sveltejs/kit/pull/10511))

- chore: upgrade `undici` to 5.23.0 ([#10240](https://github.com/sveltejs/kit/pull/10240))

## 1.22.4

### Patch Changes

- fix: prevent duplicate module preload ([#10442](https://github.com/sveltejs/kit/pull/10442))

- docs: Elaborate on credentialed `fetch` behaviour ([#10421](https://github.com/sveltejs/kit/pull/10421))

## 1.22.3

### Patch Changes

- fix: gracefully handle server endpoints that return `Response`s with immutable `Headers` ([#10367](https://github.com/sveltejs/kit/pull/10367))

## 1.22.2

### Patch Changes

- fix: wait a tick before announcing new page title ([#10363](https://github.com/sveltejs/kit/pull/10363))

- feat: more helpful error for preview if build output doesn't exist ([#10337](https://github.com/sveltejs/kit/pull/10337))

## 1.22.1

### Patch Changes

- perf: only have Vite generate relative paths when required ([#10287](https://github.com/sveltejs/kit/pull/10287))

## 1.22.0

### Minor Changes

- feat: add `HEAD` server method ([#9753](https://github.com/sveltejs/kit/pull/9753))

- feat: support caching of responses with `Vary` header (except for `Vary: *`) ([#9993](https://github.com/sveltejs/kit/pull/9993))

### Patch Changes

- fix: avoid running load function on invalid requests ([#9752](https://github.com/sveltejs/kit/pull/9752))

- fix: update page store when URL hash is changed from the address bar ([#10202](https://github.com/sveltejs/kit/pull/10202))

- fix: include `Vary: Accept` header to fix browser caching of adjacent pages and endpoints ([#9993](https://github.com/sveltejs/kit/pull/9993))

## 1.21.0

### Minor Changes

- feat: add `event.isSubRequest` boolean indicating whether this is a call to one of the app's own APIs during SSR (or prerendering) ([#10170](https://github.com/sveltejs/kit/pull/10170))

- feat: add `privatePrefix` to `config.kit.env` ([#9996](https://github.com/sveltejs/kit/pull/9996))

- feat: export `VERSION` from `@sveltejs/kit` ([#9969](https://github.com/sveltejs/kit/pull/9969))

### Patch Changes

- docs: update inline NavigationType documentation ([#10269](https://github.com/sveltejs/kit/pull/10269))

- perf: cache dynamic imports of nodes ([#10080](https://github.com/sveltejs/kit/pull/10080))

## 1.20.5

### Patch Changes

- fix: batch synchronous invalidate invocations ([#10145](https://github.com/sveltejs/kit/pull/10145))

- fix: allow rest params to be empty in resolvePath ([#10146](https://github.com/sveltejs/kit/pull/10146))

- fix: correctly close dialogs when form is enhanced ([#10093](https://github.com/sveltejs/kit/pull/10093))

- fix: precompress filter ([#10185](https://github.com/sveltejs/kit/pull/10185))

## 1.20.4

### Patch Changes

- fix: remove reference to tiny-glob from postinstall script ([#10174](https://github.com/sveltejs/kit/pull/10174))

## 1.20.3

### Patch Changes

- chore: remove `tiny-glob` as a dependency ([#10166](https://github.com/sveltejs/kit/pull/10166))

- fix: don't import types from `svelte/internal` ([#10172](https://github.com/sveltejs/kit/pull/10172))

- fix: don't skip rest parameter's matcher when there is a non-matching optional parameter ([#10020](https://github.com/sveltejs/kit/pull/10020))

- fix: ensure `fetch` respects headers from provided `Request` ([#10136](https://github.com/sveltejs/kit/pull/10136))

## 1.20.2

### Patch Changes

- fix: ensure optional routes with matchers and catch-all match correctly ([#9987](https://github.com/sveltejs/kit/pull/9987))

- fix: disallow `actions` export from a `+layout.server` file ([#10046](https://github.com/sveltejs/kit/pull/10046))

- fix: remove scrollbars from default error page ([#10059](https://github.com/sveltejs/kit/pull/10059))

## 1.20.1

### Patch Changes

- fix: don't copy public folder in service worker build ([#10082](https://github.com/sveltejs/kit/pull/10082))

## 1.20.0

### Minor Changes

- feat: support Svelte 4 ([#10048](https://github.com/sveltejs/kit/pull/10048))

## 1.19.0

### Minor Changes

- feat: allow link options to be set to `"true"` and `"false"` ([#10039](https://github.com/sveltejs/kit/pull/10039))

- feat: add `resolvePath` export for building relative paths from route IDs and parameters ([#9949](https://github.com/sveltejs/kit/pull/9949))

### Patch Changes

- fix: prevent history change when clicking same hash link ([#10032](https://github.com/sveltejs/kit/pull/10032))

- fix: gracefully handle server endpoints that return `Response`s with immutable `Headers` when prerendering ([#10030](https://github.com/sveltejs/kit/pull/10030))

- fix: do not add content-security-policy meta element if content is empty ([#10026](https://github.com/sveltejs/kit/pull/10026))

- docs: correct `ResolveOptions['preload']` inline documentation ([#10037](https://github.com/sveltejs/kit/pull/10037))

- fix: avoid creating update check timer on the server ([#10015](https://github.com/sveltejs/kit/pull/10015))

## 1.18.0

### Minor Changes

- security: Stop implicitly tracking URLs as dependencies in server-side `load`s ([#9945](https://github.com/sveltejs/kit/pull/9945))

## 1.17.1

### Patch Changes

- fix: ensure styles are loaded in dev mode for routes containing special characters ([#9894](https://github.com/sveltejs/kit/pull/9894))

- feat: warn users when enhancing forms with files but no `enctype="multipart/form-data"` ([#9888](https://github.com/sveltejs/kit/pull/9888))

## 1.17.0

### Minor Changes

- feat: unshadow `data` and `form` in `enhance` and warn about future deprecation when used in `dev` mode ([#9902](https://github.com/sveltejs/kit/pull/9902))

- feat: crawl URLs in `<meta>` tags ([#9900](https://github.com/sveltejs/kit/pull/9900))

### Patch Changes

- fix: avoid trying to inline raw or url css imports ([#9925](https://github.com/sveltejs/kit/pull/9925))

- feat: prerender in worker rather than subprocess to support Deno ([#9919](https://github.com/sveltejs/kit/pull/9919))

- perf: add `<script>` to prerendered redirects for faster redirects ([#9911](https://github.com/sveltejs/kit/pull/9911))

- fix: add typing for `vitePlugin` to `Config` ([#9946](https://github.com/sveltejs/kit/pull/9946))

- fix: stop setting Kit cookie defaults on cookies parsed from headers ([#9908](https://github.com/sveltejs/kit/pull/9908))

- fix: only skip hydration with vite overlay if current page is an error ([#9892](https://github.com/sveltejs/kit/pull/9892))

## 1.16.3

### Patch Changes

- fix: entry generation with mixed segments ([#9879](https://github.com/sveltejs/kit/pull/9879))

- fix: use `focusVisible: false` to prevent unwanted focus ring on navigation ([#9861](https://github.com/sveltejs/kit/pull/9861))

## 1.16.2

### Patch Changes

- fix: support Node 20 ([`6e2efcf62`](https://github.com/sveltejs/kit/commit/6e2efcf627ce8d179c941212d761aa93568b1724))

- fix: reset focus synchronously on navigation ([#9837](https://github.com/sveltejs/kit/pull/9837))

## 1.16.1

### Patch Changes

- fix: realign state.branch on the client on first load ([#9754](https://github.com/sveltejs/kit/pull/9754))

- fix: update `$page.data` correctly after invalidate ([#9798](https://github.com/sveltejs/kit/pull/9798))

- fix: file not found in manifest ([#9846](https://github.com/sveltejs/kit/pull/9846))

## 1.16.0

### Minor Changes

- feat: route-level entry generators via `export const entries` ([#9571](https://github.com/sveltejs/kit/pull/9571))

## 1.15.11

### Patch Changes

- chore: more compact representation for invalidated search param ([#9708](https://github.com/sveltejs/kit/pull/9708))

- chore: fix import path to app script on windows ([#9743](https://github.com/sveltejs/kit/pull/9743))

- fix: make $app/navigation more resilient to bundler reordering ([#9808](https://github.com/sveltejs/kit/pull/9808))

- fix: page load `fetch()` now accepts the same input types for the body as the native fetch function ([#9801](https://github.com/sveltejs/kit/pull/9801))

- fix: handle preload and filterSerializedResponseHeaders in sequence function ([#9741](https://github.com/sveltejs/kit/pull/9741))

## 1.15.10

### Patch Changes

- fix: log whole error object in default handleError ([#9791](https://github.com/sveltejs/kit/pull/9791))

## 1.15.9

### Patch Changes

- fix: correctly replace state when `data-sveltekit-replacestate` is used with a hash link ([#9751](https://github.com/sveltejs/kit/pull/9751))

- fix: compute trailing slash on page server / data request ([#9738](https://github.com/sveltejs/kit/pull/9738))

- fix: update vite-plugin-svelte to fix windows resolution issue ([#9769](https://github.com/sveltejs/kit/pull/9769))

## 1.15.8

### Patch Changes

- chore: revert undici pin and upgrade version ([#9740](https://github.com/sveltejs/kit/pull/9740))

- chore: upgrade vite-plugin-svelte for resolve improvements and warnings ([#9742](https://github.com/sveltejs/kit/pull/9742))

## 1.15.7

### Patch Changes

- fix: provide better error when prerendered routes conflict with each other ([#9692](https://github.com/sveltejs/kit/pull/9692))

- fix: prevent false positive warnings for fetch in Firefox and Safari ([#9680](https://github.com/sveltejs/kit/pull/9680))

- fix: allow embedding two pages generated into the same page in "embedded" mode ([#9610](https://github.com/sveltejs/kit/pull/9610))

- fix: don't include prerendered routes in default generateManifest ([#9471](https://github.com/sveltejs/kit/pull/9471))

- fix: better error messages for handleable prerender failures ([#9621](https://github.com/sveltejs/kit/pull/9621))

## 1.15.6

### Patch Changes

- fix: use correct relative paths when rendering base path ([#9343](https://github.com/sveltejs/kit/pull/9343))

- fix: handle redirect thrown in handle hook in response to form action ([#9658](https://github.com/sveltejs/kit/pull/9658))

- fix: do not call beforeNavigate for download links ([#9660](https://github.com/sveltejs/kit/pull/9660))

## 1.15.5

### Patch Changes

- fix: correct allow header methods list for 405s ([#9655](https://github.com/sveltejs/kit/pull/9655))

- fix: prevent routes/layouts from having conflicting files through resets or different extensions ([#9590](https://github.com/sveltejs/kit/pull/9590))

- fix: prevent unhandled exceptions for invalid header values ([#9638](https://github.com/sveltejs/kit/pull/9638))

## 1.15.4

### Patch Changes

- fix: gracefully handle failure to load hooks.server.js ([#9641](https://github.com/sveltejs/kit/pull/9641))

- feat: set sourcemapIgnoreList to filter out non-source directories ([#9619](https://github.com/sveltejs/kit/pull/9619))

## 1.15.3

### Patch Changes

- fix: prevent building duplicate CSS files ([#9382](https://github.com/sveltejs/kit/pull/9382))

## 1.15.2

### Patch Changes

- fix: address security advisory [CVE-2023-29008](https://github.com/sveltejs/kit/security/advisories/GHSA-gv7g-x59x-wf8f) by doing a case-insensitive comparison when checking header value ([`ba436c66`](https://github.com/sveltejs/kit/commit/ba436c6685e751d968a960fbda65f24cf7a82e9f))

## 1.15.1

### Patch Changes

- fix: pin undici to 5.20.0 ([#9591](https://github.com/sveltejs/kit/pull/9591))

- fix: address security advisory [CVE-2023-29003](https://github.com/sveltejs/kit/security/advisories/GHSA-5p75-vc5g-8rv2) by including `text/plain` and `PUT`/`PATCH`/`DELETE` requests in set of blocked cross-origin requests for CSRF protection ([`bb2253d5`](https://github.com/sveltejs/kit/commit/bb2253d51d00aba2e4353952d4fb0dcde6c77123))

## 1.15.0

### Minor Changes

- feat: expose stronger typed `SubmitFunction` through `./$types` ([#9201](https://github.com/sveltejs/kit/pull/9201))

### Patch Changes

- fix: throw error when file can't be found in Vite manifest ([#9558](https://github.com/sveltejs/kit/pull/9558))

- fix: make `error.message` enumerable when sending `ssrLoadModule` error to client ([#9440](https://github.com/sveltejs/kit/pull/9440))

- fix: pass `publicDir` Vite config in SSR ([#9565](https://github.com/sveltejs/kit/pull/9565))

- fix: balance parentheses in error about wrong content type for action ([#9513](https://github.com/sveltejs/kit/pull/9513))

## 1.14.0

### Minor Changes

- feat: add HMR to fallback error pages during dev ([#9497](https://github.com/sveltejs/kit/pull/9497))

### Patch Changes

- fix: add `submitter` type to `SumbitFunction` ([#9484](https://github.com/sveltejs/kit/pull/9484))

## 1.13.0

### Minor Changes

- feat: add dark mode styles to default error page ([#9460](https://github.com/sveltejs/kit/pull/9460))

### Patch Changes

- fix: recover from errors during dev by reloading ([#9441](https://github.com/sveltejs/kit/pull/9441))

## 1.12.0

### Minor Changes

- feat: expose submitter in use:enhance SubmitFunction ([#9425](https://github.com/sveltejs/kit/pull/9425))

- feat: add data-sveltekit-keepfocus and data-sveltekit-replacestate options to links (requires Svelte version 3.56 for type-checking with `svelte-check`) ([#9019](https://github.com/sveltejs/kit/pull/9019))

### Patch Changes

- fix: don't start debugger on 404s ([#9424](https://github.com/sveltejs/kit/pull/9424))

- fix: handle srcset attributes with newline after comma ([#9388](https://github.com/sveltejs/kit/pull/9388))

- fix: allow tsconfig to extend multiple other tsconfigs ([#9413](https://github.com/sveltejs/kit/pull/9413))

- chore: update Undici to 5.21.0 ([#9417](https://github.com/sveltejs/kit/pull/9417))

## 1.11.0

### Minor Changes

- feat: pause on debugger when falling back to full page reload during development ([#9305](https://github.com/sveltejs/kit/pull/9305))

- feat: expose `base` via `$service-worker`, make paths relative ([#9250](https://github.com/sveltejs/kit/pull/9250))

### Patch Changes

- fix: don't automatically prerender non-SSR'd pages ([#9352](https://github.com/sveltejs/kit/pull/9352))

- fix: use 308 responses for trailing slash redirects, instead of 301s ([#9351](https://github.com/sveltejs/kit/pull/9351))

- fix: remove buggy cookie path detection ([#9298](https://github.com/sveltejs/kit/pull/9298))

- fix: don't prevent `beforeNavigate` callbacks from running following a cancelled unloading navigation ([#9347](https://github.com/sveltejs/kit/pull/9347))

- fix: persist DOM state on beforeunload ([#9345](https://github.com/sveltejs/kit/pull/9345))

- fix: redirect to path with/without trailing slash when previewing prerendered pages ([#9353](https://github.com/sveltejs/kit/pull/9353))

- fix: avoid FOUC when using CSS modules in dev ([#9323](https://github.com/sveltejs/kit/pull/9323))

- fix: don't skip required parameters after missing optional parameters ([#9331](https://github.com/sveltejs/kit/pull/9331))

- fix: account for server-emitted assets when prerenering ([#9349](https://github.com/sveltejs/kit/pull/9349))

- fix: deal with fast consecutive promise resolutions when streaming ([#9332](https://github.com/sveltejs/kit/pull/9332))

- chore: replace deprecated property access in preparation for TS 5.0 ([#9361](https://github.com/sveltejs/kit/pull/9361))

## 1.10.1

### Patch Changes

- fix: respect `<base>` when crawling ([#9257](https://github.com/sveltejs/kit/pull/9257))

- fix: scroll before resetting focus, to avoid flash of unscrolled content ([#9311](https://github.com/sveltejs/kit/pull/9311))

- fix: omit hash from global during development ([#9310](https://github.com/sveltejs/kit/pull/9310))

## 1.10.0

### Minor Changes

- feat: add `cookies.getAll` ([#9287](https://github.com/sveltejs/kit/pull/9287))

### Patch Changes

- fix: always include `<link rel="stylesheet">`, even for stylesheets excluded from Link headers ([#9255](https://github.com/sveltejs/kit/pull/9255))

- fix: preserve form state when submitting a second time ([#9267](https://github.com/sveltejs/kit/pull/9267))

## 1.9.3

### Patch Changes

- fix: successive optional route parameters can now be empty ([#9266](https://github.com/sveltejs/kit/pull/9266))

## 1.9.2

### Patch Changes

- fix: correct undefined reference to global var with Vitest ([#9252](https://github.com/sveltejs/kit/pull/9252))

## 1.9.1

### Patch Changes

- feat: warn when calling depends(...) with special URI scheme ([#9246](https://github.com/sveltejs/kit/pull/9246))

## 1.9.0

### Minor Changes

- feat: add `paths.relative` option to control interpretation of `paths.assets` and `paths.base` ([#9220](https://github.com/sveltejs/kit/pull/9220))

## 1.8.8

### Patch Changes

- fix: always add `@sveltejs/kit` to `noExternal` for ssr build ([#9242](https://github.com/sveltejs/kit/pull/9242))
- feat: add `api.methods` and `page.methods` to `builder.routes` ([#9145](https://github.com/sveltejs/kit/pull/9145))

## 1.8.7

### Patch Changes

- fix: correct not found message when setting `paths.base` ([#9232](https://github.com/sveltejs/kit/pull/9232))

## 1.8.6

### Patch Changes

- fix: bundle SvelteKit when using Vitest ([#9172](https://github.com/sveltejs/kit/pull/9172))

## 1.8.5

### Patch Changes

- fix: allow relative fetch to endpoint outside app from within `handle` ([#9198](https://github.com/sveltejs/kit/pull/9198))

## 1.8.4

### Patch Changes

- fix: include .mjs files in precompression ([#9179](https://github.com/sveltejs/kit/pull/9179))

- fix: revert mjs extension usage by default, make it an option ([#9179](https://github.com/sveltejs/kit/pull/9179))

- chore: dummy changeset to force a release ([#9207](https://github.com/sveltejs/kit/pull/9207))

## 1.8.3

### Patch Changes

- fix: use a proprietary content-type to ensure response is not buffered ([#9142](https://github.com/sveltejs/kit/pull/9142))

## 1.8.2

### Patch Changes

- fix: append newline to trigger script evaluation ([#9139](https://github.com/sveltejs/kit/pull/9139))

## 1.8.1

### Patch Changes

- fix: encode streamed chunks ([#9136](https://github.com/sveltejs/kit/pull/9136))

## 1.8.0

### Minor Changes

- feat: implement streaming promises for server load functions ([#8901](https://github.com/sveltejs/kit/pull/8901))

### Patch Changes

- fix: set public env before starting app ([#8957](https://github.com/sveltejs/kit/pull/8957))

- fix: preload modules on Safari ([#8957](https://github.com/sveltejs/kit/pull/8957))

- fix: make `assets` work in client when app is served from a subfolder ([#8957](https://github.com/sveltejs/kit/pull/8957))

## 1.7.2

### Patch Changes

- fix: return correct asset list from `builder.writeClient()` ([#9095](https://github.com/sveltejs/kit/pull/9095))

## 1.7.1

### Patch Changes

- fix: deploy server assets. Only works with Vite 4.1+ ([#9073](https://github.com/sveltejs/kit/pull/9073))

## 1.7.0

### Minor Changes

- feat: richer error message for invalid exports ([#9055](https://github.com/sveltejs/kit/pull/9055))

### Patch Changes

- chore: throw more helpful error when encoding uri fails during prerendering ([#9053](https://github.com/sveltejs/kit/pull/9053))

## 1.6.0

### Minor Changes

- feat: add `OPTIONS` server method ([#8731](https://github.com/sveltejs/kit/pull/8731))

### Patch Changes

- fix: solve `missing "./paths" specifier in "@sveltejs/kit" package` error occurring in all projects ([#9050](https://github.com/sveltejs/kit/pull/9050))

## 1.5.7

### Patch Changes

- fix: use internal alias that won't collide with user aliases ([#9022](https://github.com/sveltejs/kit/pull/9022))

## 1.5.6

### Patch Changes

- fix: ssr defaults preventing minification for client build ([#9012](https://github.com/sveltejs/kit/pull/9012))

- fix: client-side trailing slash redirect when preloading data ([#8982](https://github.com/sveltejs/kit/pull/8982))

## 1.5.5

### Patch Changes

- fix: warn after failed data preloads in dev ([#8985](https://github.com/sveltejs/kit/pull/8985))

## 1.5.4

### Patch Changes

- fix: support all relevant vite cli flags ([#8977](https://github.com/sveltejs/kit/pull/8977))

## 1.5.3

### Patch Changes

- docs: clarify that `version.name` should be deterministic ([#8956](https://github.com/sveltejs/kit/pull/8956))

- fix: correctly include exported http methods in allow header ([#8968](https://github.com/sveltejs/kit/pull/8968))

- chore: polyfill File from node:buffer ([#8925](https://github.com/sveltejs/kit/pull/8925))

- fix: provide helpful error/warning when calling `fetch` during render ([#8551](https://github.com/sveltejs/kit/pull/8551))

- fix: print useful error when subscribing to SvelteKit's stores at the wrong time during SSR ([#8960](https://github.com/sveltejs/kit/pull/8960))

- fix: ignore external links when automatically preloading ([#8961](https://github.com/sveltejs/kit/pull/8961))

- chore: refactor fallback generation ([#8972](https://github.com/sveltejs/kit/pull/8972))

## 1.5.2

### Patch Changes

- fix: always default `paths.assets` to `paths.base` ([#8928](https://github.com/sveltejs/kit/pull/8928))

## 1.5.1

### Patch Changes

- fix: pick up config from endpoints ([#8933](https://github.com/sveltejs/kit/pull/8933))

- fix: don't reuse previous server load cache when there's no server load function ([#8893](https://github.com/sveltejs/kit/pull/8893))

- fix: deduplicate paths in tsconfig ([#8880](https://github.com/sveltejs/kit/pull/8880))

- docs: clarify version management feature ([#8941](https://github.com/sveltejs/kit/pull/8941))

## 1.5.0

### Minor Changes

- feat: support route-level configuration ([#8740](https://github.com/sveltejs/kit/pull/8740))

- feat: add snapshot mechanism for preserving ephemeral DOM state ([#8710](https://github.com/sveltejs/kit/pull/8710))

### Patch Changes

- chore(deps): update dependency undici to v5.18.0 ([#8884](https://github.com/sveltejs/kit/pull/8884))

## 1.4.0

### Minor Changes

- feat: allow $app/paths to be used without an app ([#8838](https://github.com/sveltejs/kit/pull/8838))

### Patch Changes

- fix: ensure types of all form actions are accessible even if differing ([#8877](https://github.com/sveltejs/kit/pull/8877))

- fix: correctly handle HttpErrors on the client side ([#8829](https://github.com/sveltejs/kit/pull/8829))

- docs: discourage use of `goto` with external URLs ([#8837](https://github.com/sveltejs/kit/pull/8837))

- fix: prevent crawling empty urls (`<img src="">`) ([#8883](https://github.com/sveltejs/kit/pull/8883))

- fix: correctly serialize request url when using load `fetch` ([#8876](https://github.com/sveltejs/kit/pull/8876))

- fix: ensure endpoints can fetch endpoints on the same host but not part of the application ([#8869](https://github.com/sveltejs/kit/pull/8869))

## 1.3.10

### Patch Changes

- fix: preserve build error messages ([#8846](https://github.com/sveltejs/kit/pull/8846))

## 1.3.9

### Patch Changes

- fix: output errors properly if pages fail to compile ([#8813](https://github.com/sveltejs/kit/pull/8813))

## 1.3.8

### Patch Changes

- fix: remove Vite manifest before running adapter ([#8815](https://github.com/sveltejs/kit/pull/8815))

## 1.3.7

### Patch Changes

- fix: only show prerendering message when actually prerendering ([#8809](https://github.com/sveltejs/kit/pull/8809))

- fix: handle anchors with special chars when navigating ([#8806](https://github.com/sveltejs/kit/pull/8806))

- fix: await finalise hook and run it only once ([#8817](https://github.com/sveltejs/kit/pull/8817))

## 1.3.6

### Patch Changes

- fix: allow rest parameters to follow multiple optional - or not - parameters ([#8761](https://github.com/sveltejs/kit/pull/8761))

- fix: consider headers when constructing request hash ([#8754](https://github.com/sveltejs/kit/pull/8754))

## 1.3.5

### Patch Changes

- docs: fix typo ([#8790](https://github.com/sveltejs/kit/pull/8790))

- fix: build error on layout with missing leaves ([#8792](https://github.com/sveltejs/kit/pull/8792))

- fix: handle hash links with non-ASCII characters when navigating ([#8767](https://github.com/sveltejs/kit/pull/8767))

## 1.3.4

### Patch Changes

- chore: bump devalue ([#8789](https://github.com/sveltejs/kit/pull/8789))

## 1.3.3

### Patch Changes

- fix: forward `process.env` to child process ([#8777](https://github.com/sveltejs/kit/pull/8777))

## 1.3.2

### Patch Changes

- fix: take base path into account when preloading code ([#8748](https://github.com/sveltejs/kit/pull/8748))

## 1.3.1

### Patch Changes

- fix: only fetch `__data.json` files for routes with a server `load` function ([#8636](https://github.com/sveltejs/kit/pull/8636))

- fix: add `ignoreDeprecations` flag for TS 5.x ([#8718](https://github.com/sveltejs/kit/pull/8718))

- fix: install polyfills when analysing code ([#8636](https://github.com/sveltejs/kit/pull/8636))

## 1.3.0

### Minor Changes

- feat: allow generated tsconfig to be modified ([#8606](https://github.com/sveltejs/kit/pull/8606))

### Patch Changes

- fix: skip navigation hooks on popstate events when only hash changed ([#8730](https://github.com/sveltejs/kit/pull/8730))

## 1.2.10

### Patch Changes

- chore: restrict methods allowed for POST ([#8721](https://github.com/sveltejs/kit/pull/8721))

- fix: provide proper error when POSTing to a missing page endpoint ([#8714](https://github.com/sveltejs/kit/pull/8714))

## 1.2.9

### Patch Changes

- fix: reapply exports alignment after Vite dependency optimizations ([#8690](https://github.com/sveltejs/kit/pull/8690))

## 1.2.8

### Patch Changes

- fix: include base path in path to start script ([#8651](https://github.com/sveltejs/kit/pull/8651))

## 1.2.7

### Patch Changes

- fix: set headers when throwing redirect in handle ([#8648](https://github.com/sveltejs/kit/pull/8648))

## 1.2.6

### Patch Changes

- fix: allow importing assets while using base path ([#8683](https://github.com/sveltejs/kit/pull/8683))

## 1.2.5

### Patch Changes

- fix: check for wrong return values from form actions ([#8553](https://github.com/sveltejs/kit/pull/8553))

## 1.2.4

### Patch Changes

- chore: update undici to v5.16.0 ([#8668](https://github.com/sveltejs/kit/pull/8668))

## 1.2.3

### Patch Changes

- fix: set environment variables before postbuild analysis ([#8647](https://github.com/sveltejs/kit/pull/8647))

## 1.2.2

### Patch Changes

- fix: focus management after navigation ([#8466](https://github.com/sveltejs/kit/pull/8466))

## 1.2.1

### Patch Changes

- feat: throw error if cookie exceeds size limit ([#8591](https://github.com/sveltejs/kit/pull/8591))

## 1.2.0

### Minor Changes

- feat: add `text(...)` helper for generating text responses ([#8371](https://github.com/sveltejs/kit/pull/8371))

- feat: enable access to public env within app.html ([#8449](https://github.com/sveltejs/kit/pull/8449))

- fix: add `Content-Length` header to SvelteKit-generated responses ([#8371](https://github.com/sveltejs/kit/pull/8371))

## 1.1.4

### Patch Changes

- fix: squelch unknown prop warning for `+error.svelte` components ([#8593](https://github.com/sveltejs/kit/pull/8593))

## 1.1.3

### Patch Changes

- docs: explain how to add ambient typings ([#8558](https://github.com/sveltejs/kit/pull/8558))

- fix: ignore `target="_blank"` links ([#8563](https://github.com/sveltejs/kit/pull/8563))

## 1.1.2

### Patch Changes

- fix: correct link in types documentation ([#8557](https://github.com/sveltejs/kit/pull/8557))

- fix: correctly detect changed data ([#8377](https://github.com/sveltejs/kit/pull/8377))

- fix: only generate type definitions with `sync` command ([#8552](https://github.com/sveltejs/kit/pull/8552))

- fix: remove baseUrl to prevent wrong TypeScript auto imports if possible ([#8568](https://github.com/sveltejs/kit/pull/8568))

## 1.1.1

### Patch Changes

- chore: upgrade devalue ([#8520](https://github.com/sveltejs/kit/pull/8520))

## 1.1.0

### Minor Changes

- feat: warn when usage of page options in `.svelte` files or missing `<slot />` in layout is detected ([#8475](https://github.com/sveltejs/kit/pull/8475))

### Patch Changes

- fix: exit postbuild step with code 0 ([#8514](https://github.com/sveltejs/kit/pull/8514))

- fix: only run missing page check in dev mode ([#8515](https://github.com/sveltejs/kit/pull/8515))

- fix: avoid input name clobbering form method check ([#8471](https://github.com/sveltejs/kit/pull/8471))

- fix: exclude service worker from tsconfig ([#8508](https://github.com/sveltejs/kit/pull/8508))

- fix: provide better error message in case of missing `+page.svelte` ([#8478](https://github.com/sveltejs/kit/pull/8478))

## 1.0.13

### Patch Changes

- chore: separate generated from non-generated server code ([#8429](https://github.com/sveltejs/kit/pull/8429))

## 1.0.12

### Patch Changes

- fix: make prerendered endpoint callable from non-prerendered server load ([#8453](https://github.com/sveltejs/kit/pull/8453))

- docs: add links to http status codes ([#8480](https://github.com/sveltejs/kit/pull/8480))

- fix: prerender page when prerender set to 'auto' and ssr set to true ([#8481](https://github.com/sveltejs/kit/pull/8481))

- fix: prevent false positive warnings for fetch uses in firefox ([#8456](https://github.com/sveltejs/kit/pull/8456))

- fix: check version on node fetch fail ([#8487](https://github.com/sveltejs/kit/pull/8487))

- fix: avoid unnecessary $page store updates ([#8457](https://github.com/sveltejs/kit/pull/8457))

## 1.0.11

### Patch Changes

- feat: warn that hydration may break if comments are removed from HTML ([#8423](https://github.com/sveltejs/kit/pull/8423))
- fix: ignore `<a>` elements with no `href` attribute when refocusing after navigation ([#8418](https://github.com/sveltejs/kit/pull/8418))
- fix: invalidate dependencies implicitly added by `fetch` in server load functions ([#8420](https://github.com/sveltejs/kit/pull/8420))

## 1.0.10

### Patch Changes

- fix: skip inline cache when vary header is present ([#8406](https://github.com/sveltejs/kit/pull/8406))

## 1.0.9

### Patch Changes

- fix: add `assetFileNames` to worker rollup options ([#8384](https://github.com/sveltejs/kit/pull/8384))

## 1.0.8

### Patch Changes

- feat: error in dev mode if global `fetch` is used with relative URL ([#8370](https://github.com/sveltejs/kit/pull/8370))
- fix: disable illegal import detection when running unit tests ([#8365](https://github.com/sveltejs/kit/pull/8365))
- fix: only prerender a given dependency once ([#8376](https://github.com/sveltejs/kit/pull/8376))
- fix: `updated.check()` type changed to `Promise<boolean>` ([#8400](https://github.com/sveltejs/kit/pull/8400))
- fix: don't strip body in no-cors mode on the server ([#8412](https://github.com/sveltejs/kit/pull/8412))
- fix: quote 'script' in CSP directives ([#8372](https://github.com/sveltejs/kit/pull/8372))
- fix: correctly compare route ids for load change detection ([#8399](https://github.com/sveltejs/kit/pull/8399))
- fix: don't add nonce attribute to `<link>` elements ([#8369](https://github.com/sveltejs/kit/pull/8369))

## 1.0.7

### Patch Changes

- fix: ignore `*.test.js` and `*.spec.js` files in `params` directory ([#8250](https://github.com/sveltejs/kit/pull/8250))

## 1.0.6

### Patch Changes

- fix: guarantee that `$page.route` has the correct shape ([#8359](https://github.com/sveltejs/kit/pull/8359))

## 1.0.5

### Patch Changes

- fix: update typings of `event.platform` to be possibly undefined ([#8232](https://github.com/sveltejs/kit/pull/8232))

## 1.0.4

### Patch Changes

- fix: don't polyfill undici if using Deno or Bun ([#8338](https://github.com/sveltejs/kit/pull/8338))

## 1.0.3

### Patch Changes

- feat: include submitter's value when progressively enhancing `<form method="get">` ([#8273](https://github.com/sveltejs/kit/pull/8273))

## 1.0.2

### Patch Changes

- fix: correct `filterSerializedResponseHeaders` error message ([#8348](https://github.com/sveltejs/kit/pull/8348))
- fix: correct form action redirect status code ([#8210](https://github.com/sveltejs/kit/pull/8210))

## 1.0.1

### Patch Changes

- fix: explicitly mark Node 17.x as not supported ([#8174](https://github.com/sveltejs/kit/pull/8174))

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.589

### Patch Changes

- breaking: remove warnings/errors about removed/changed APIs ([#8019](https://github.com/sveltejs/kit/pull/8019))

## 1.0.0-next.588

### Patch Changes

- fix: remove obsolete generated types correctly ([#8149](https://github.com/sveltejs/kit/pull/8149))

## 1.0.0-next.587

### Patch Changes

- breaking: prerender shells when ssr false and prerender not false ([#8131](https://github.com/sveltejs/kit/pull/8131))

## 1.0.0-next.586

### Patch Changes

- fix: don't de/encode initial and explicit string headers ([#8113](https://github.com/sveltejs/kit/pull/8113))

## 1.0.0-next.585

### Patch Changes

- fix: remove unused elements from default error component ([#8110](https://github.com/sveltejs/kit/pull/8110))

## 1.0.0-next.584

### Patch Changes

- fix: load errorTemplate from correct location ([#8096](https://github.com/sveltejs/kit/pull/8096))
- More robust manifest error recovery ([#8095](https://github.com/sveltejs/kit/pull/8095))

## 1.0.0-next.583

### Patch Changes

- restart vite dev-server on svelte config change ([#8087](https://github.com/sveltejs/kit/pull/8087))
- Set correct `$page.status` when using `enhance` and result is of type `'error'` ([#8073](https://github.com/sveltejs/kit/pull/8073))
- fix: ensure export conditions are resolve through Vite ([#8092](https://github.com/sveltejs/kit/pull/8092))
- fix: don't crash Vite dev server on manifest error ([#8093](https://github.com/sveltejs/kit/pull/8093))

## 1.0.0-next.582

### Patch Changes

- fix: improve split between Vite plugins ([#8055](https://github.com/sveltejs/kit/pull/8055))
- fix: set Vite base URL ([#8046](https://github.com/sveltejs/kit/pull/8046))
- add declaration for vitePreprocess reexport ([#8053](https://github.com/sveltejs/kit/pull/8053))

## 1.0.0-next.581

### Patch Changes

- feat: vitePreprocess ([#8036](https://github.com/sveltejs/kit/pull/8036))

## 1.0.0-next.580

### Patch Changes

- breaking: throw an error on invalid load response ([#8003](https://github.com/sveltejs/kit/pull/8003))
- fix: allow SvelteKit to be used without bundling ([#7950](https://github.com/sveltejs/kit/pull/7950))

## 1.0.0-next.579

### Patch Changes

- breaking: update svelte peerDependency to ^3.54.0 ([#7543](https://github.com/sveltejs/kit/pull/7543))
- update esbuild to ^0.16.3 ([#7543](https://github.com/sveltejs/kit/pull/7543))
- breaking: upgrade to Vite 4 ([#7543](https://github.com/sveltejs/kit/pull/7543))

## 1.0.0-next.578

### Patch Changes

- fix: respect fetch cache option ([#8024](https://github.com/sveltejs/kit/pull/8024))
- breaking: rename invalid() to fail() and ValidationError to ActionFailure ([#8012](https://github.com/sveltejs/kit/pull/8012))
- breaking: replace automatic fallback generation with `builder.generateFallback(fallback)` ([#8013](https://github.com/sveltejs/kit/pull/8013))

## 1.0.0-next.577

### Patch Changes

- breaking: add embedded option, turned off by default ([#7969](https://github.com/sveltejs/kit/pull/7969))

## 1.0.0-next.576

### Patch Changes

- breaking: make `sveltekit()` return a promise of array of Vite plugins ([#7994](https://github.com/sveltejs/kit/pull/7994))

## 1.0.0-next.575

### Patch Changes

- fix: throw error when using enhance on GET forms ([#7948](https://github.com/sveltejs/kit/pull/7948))
- breaking: strip `__data.json` from url ([#7979](https://github.com/sveltejs/kit/pull/7979))

## 1.0.0-next.574

### Patch Changes

- feat: split Vite plugin in two ([#7990](https://github.com/sveltejs/kit/pull/7990))

## 1.0.0-next.573

### Patch Changes

- fix: adjust ActionData type ([#7962](https://github.com/sveltejs/kit/pull/7962))
- breaking: disallow unknown exports (except when starting with an underscore) from `+(layout|page)(.server)?.js` and `+server.js` files ([#7878](https://github.com/sveltejs/kit/pull/7878))
- fix: continuous optionals should not throw conflict error ([#7939](https://github.com/sveltejs/kit/pull/7939))
- fix `enhance` error message when form action doesn't exist or csrf is enabled ([#7958](https://github.com/sveltejs/kit/pull/7958))

## 1.0.0-next.572

### Minor Changes

- Checks that element is not null before reading getAttribute ([#7930](https://github.com/sveltejs/kit/pull/7930))

### Patch Changes

- chore: update `magic-string` ([#7931](https://github.com/sveltejs/kit/pull/7931))
- add $app and $env to optimizeDeps.exclude so that libraries using these work correctly when prebundled ([#7933](https://github.com/sveltejs/kit/pull/7933))
- reload dev page on change of app.html ([#7944](https://github.com/sveltejs/kit/pull/7944))

## 1.0.0-next.571

### Patch Changes

- fix: use searchParams for x-sveltekit-invalidated ([#7912](https://github.com/sveltejs/kit/pull/7912))
- fix: correct Vite config merging with force option ([#7911](https://github.com/sveltejs/kit/pull/7911))
- fix: rebuild manifest when client hooks or param matcher file is added/removed ([#7915](https://github.com/sveltejs/kit/pull/7915))

## 1.0.0-next.570

### Patch Changes

- Remove prepublishOnly script ([#7893](https://github.com/sveltejs/kit/pull/7893))

## 1.0.0-next.569

### Patch Changes

- Ignore elements that are no longer in the document ([#7881](https://github.com/sveltejs/kit/pull/7881))
- breaking: Use client-side routing for `<form method="GET">` ([#7828](https://github.com/sveltejs/kit/pull/7828))

## 1.0.0-next.568

### Patch Changes

- fix: add migration hint for renamed methods ([#7874](https://github.com/sveltejs/kit/pull/7874))

## 1.0.0-next.567

### Patch Changes

- Co-locate synthetic types with other Kit types ([#7864](https://github.com/sveltejs/kit/pull/7864))

## 1.0.0-next.566

### Patch Changes

- Add more type documentation ([#7003](https://github.com/sveltejs/kit/pull/7003))
- breaking: move SubmitFunction into @sveltejs/kit ([#7003](https://github.com/sveltejs/kit/pull/7003))

## 1.0.0-next.565

### Patch Changes

- breaking: Replace `data-sveltekit-prefetch` with `-preload-code` and `-preload-data` ([#7776](https://github.com/sveltejs/kit/pull/7776))
- breaking: Rename `prefetch` to `preloadData` and `prefetchRoutes` to `preloadCode` ([#7776](https://github.com/sveltejs/kit/pull/7776))

## 1.0.0-next.564

### Patch Changes

- chore: upgrade undici ([#7830](https://github.com/sveltejs/kit/pull/7830))
- Make `$page.url` resilient against mutations ([#7827](https://github.com/sveltejs/kit/pull/7827))

## 1.0.0-next.563

### Patch Changes

- feat: allow handleError to return a promise ([#7780](https://github.com/sveltejs/kit/pull/7780))
- breaking: remove `format` option from `generateManifest(...)` ([#7820](https://github.com/sveltejs/kit/pull/7820))

## 1.0.0-next.562

### Patch Changes

- fix: handle redirects in handle hook while processing data request ([#7797](https://github.com/sveltejs/kit/pull/7797))
- Make touchstart listener passive ([#7818](https://github.com/sveltejs/kit/pull/7818))
- breaking: remove `getStaticDirectory()` from builder API ([#7809](https://github.com/sveltejs/kit/pull/7809))
- Make console.warn wrapper named rather than anonymous ([#7811](https://github.com/sveltejs/kit/pull/7811))

## 1.0.0-next.561

### Patch Changes

- Upgrade vite-plugin-svelte to ^1.3.1 ([#7760](https://github.com/sveltejs/kit/pull/7760))

## 1.0.0-next.560

### Patch Changes

- breaking: Rename `prerendering` to `building`, remove `config.kit.prerender.enabled` ([#7762](https://github.com/sveltejs/kit/pull/7762))

## 1.0.0-next.559

### Patch Changes

- Roll over non-matching optional parameters instead of 404ing ([#7753](https://github.com/sveltejs/kit/pull/7753))
- fix: enable Vite's modulePreload.polyfill ([#7770](https://github.com/sveltejs/kit/pull/7770))

## 1.0.0-next.558

### Patch Changes

- breaking: Disallow error status codes outside 400-599 ([#7767](https://github.com/sveltejs/kit/pull/7767))
- breaking: Make client-side router ignore links outside %sveltekit.body% ([#7766](https://github.com/sveltejs/kit/pull/7766))

## 1.0.0-next.557

### Patch Changes

- external fetch calls: ensure serialized cookie values are url-encoded [#7736] ([#7736](https://github.com/sveltejs/kit/pull/7736))

## 1.0.0-next.556

### Patch Changes

- fix: preserve Vite CLI opts ([#7749](https://github.com/sveltejs/kit/pull/7749))

## 1.0.0-next.555

### Patch Changes

- Made `config.kit.outDir` able to be located in `node_modules` ([#7707](https://github.com/sveltejs/kit/pull/7707))

## 1.0.0-next.554

### Patch Changes

- create stronger types for dynamically generated env modules ([#7735](https://github.com/sveltejs/kit/pull/7735))
- breaking: Make `trailingSlash` a page option, rather than configuration ([#7719](https://github.com/sveltejs/kit/pull/7719))
- Handle hash links with non-ASCII characters when prerendering ([#7729](https://github.com/sveltejs/kit/pull/7729))
- Ignore popstate events from outside the router ([#7721](https://github.com/sveltejs/kit/pull/7721))

## 1.0.0-next.553

### Patch Changes

- Prevent Vite from nuking logs on startup ([#7724](https://github.com/sveltejs/kit/pull/7724))

## 1.0.0-next.552

### Patch Changes

- Don't hardcode version in client bundle ([#7694](https://github.com/sveltejs/kit/pull/7694))
- Allow .d.ts files to have a + prefix ([#7682](https://github.com/sveltejs/kit/pull/7682))
- Expose version from `$app/environment` ([#7689](https://github.com/sveltejs/kit/pull/7689))
- fix: export HttpError/Redirect interface ([#7701](https://github.com/sveltejs/kit/pull/7701))
- fix: don't preload fonts by default ([#7704](https://github.com/sveltejs/kit/pull/7704))
- Always set `Accept` and `Accept-Language` headers when making a self-request ([#7722](https://github.com/sveltejs/kit/pull/7722))
- fix: adjust interfaces to fix type errors ([#7718](https://github.com/sveltejs/kit/pull/7718))

## 1.0.0-next.551

### Patch Changes

- Add `Access-Control-Allow-Origin: *` to static assets in dev ([#7688](https://github.com/sveltejs/kit/pull/7688))
- Ignore presence of `keepfocus` and `noscroll` in `goto` options if correctly-cased options are also present ([#7678](https://github.com/sveltejs/kit/pull/7678))

## 1.0.0-next.550

### Patch Changes

- feat: preload fonts and add preload customization ([#4963](https://github.com/sveltejs/kit/pull/4963))

## 1.0.0-next.549

### Patch Changes

- Always apply Node polyfills ([#7675](https://github.com/sveltejs/kit/pull/7675))

## 1.0.0-next.548

### Patch Changes

- Only apply polyfills where necessary ([#7668](https://github.com/sveltejs/kit/pull/7668))

## 1.0.0-next.547

### Patch Changes

- fix: safely join url segments in manifest ([#7653](https://github.com/sveltejs/kit/pull/7653))
- breaking: use devalue to (de)serialize action data ([#7494](https://github.com/sveltejs/kit/pull/7494))
- Warn if `%sveltekit.body%` is direct child of `<body>` ([#7652](https://github.com/sveltejs/kit/pull/7652))

## 1.0.0-next.546

### Patch Changes

- fix outdated config error ([#7649](https://github.com/sveltejs/kit/pull/7649))
- breaking: use hex/unicode escape sequences for encoding special characters in route directory names ([#7644](https://github.com/sveltejs/kit/pull/7644))
- fix `beforeNavigate` description — `routeId` -> `route.id` ([#7643](https://github.com/sveltejs/kit/pull/7643))

## 1.0.0-next.545

### Patch Changes

- fix: prerendering path and layout fixes ([#7639](https://github.com/sveltejs/kit/pull/7639))
- fix: add Promise return type to the `enhance` action ([#7629](https://github.com/sveltejs/kit/pull/7629))

## 1.0.0-next.544

### Patch Changes

- breaking: narrow down possible status codes for redirects to 300-308 ([#7615](https://github.com/sveltejs/kit/pull/7615))
- feat: add fallback component for layouts without one ([#7619](https://github.com/sveltejs/kit/pull/7619))

## 1.0.0-next.543

### Patch Changes

- Don't print search params error when prerendering fallback page ([#7598](https://github.com/sveltejs/kit/pull/7598))
- allow async function for `enhance` action parameter ([#7608](https://github.com/sveltejs/kit/pull/7608))
- Run service worker during development ([#7597](https://github.com/sveltejs/kit/pull/7597))
- feat: support throwing redirect in handle ([#7612](https://github.com/sveltejs/kit/pull/7612))
- Workaround for the DOM clobbering for use:enhance ([#7599](https://github.com/sveltejs/kit/pull/7599))
- fix: don't cache prefetch errors ([#7610](https://github.com/sveltejs/kit/pull/7610))

## 1.0.0-next.542

### Patch Changes

- Add support for linking to <a name="hash"> tags ([#7596](https://github.com/sveltejs/kit/pull/7596))
- breaking: don't run beforeNavigate during redirects ([#7588](https://github.com/sveltejs/kit/pull/7588))
- fix: respect autofocus following navigation or enhanced form submit ([#6643](https://github.com/sveltejs/kit/pull/6643))

## 1.0.0-next.541

### Minor Changes

- fix: don't clean build and output directories when using `--watch` ([#7516](https://github.com/sveltejs/kit/pull/7516))

### Patch Changes

- fix: handle expected errors thrown in handle hook correctly ([#7566](https://github.com/sveltejs/kit/pull/7566))

## 1.0.0-next.540

### Patch Changes

- Serve prerendered non-page files when running preview ([#7576](https://github.com/sveltejs/kit/pull/7576))
- fix: caching takes now into account the body payload ([#7546](https://github.com/sveltejs/kit/pull/7546))
- fix: handle locked readable stream when reading body ([#7565](https://github.com/sveltejs/kit/pull/7565))
- fix: prefetch should ignore links ignored by the router ([#7580](https://github.com/sveltejs/kit/pull/7580))
- fix: migration error when using $page.routeId ([#7574](https://github.com/sveltejs/kit/pull/7574))
- prevent loading of illegal modules in the browser, rather than during SSR ([#7507](https://github.com/sveltejs/kit/pull/7507))
- fix: prevent double decoding of path segment ([#7550](https://github.com/sveltejs/kit/pull/7550))

## 1.0.0-next.539

### Patch Changes

- Omit prerendered routes from server manifest ([#7541](https://github.com/sveltejs/kit/pull/7541))

## 1.0.0-next.538

### Patch Changes

- feat: enable caching for `__data.json` requests ([#7532](https://github.com/sveltejs/kit/pull/7532))
- fix: prevent double decoding of params ([#7521](https://github.com/sveltejs/kit/pull/7521))
- fix: take into account Request input when serializing fetch data ([#7531](https://github.com/sveltejs/kit/pull/7531))
- fix: better cookie warning checks ([#7528](https://github.com/sveltejs/kit/pull/7528))

## 1.0.0-next.537

### Patch Changes

- feat: better navigation interfaces ([#7529](https://github.com/sveltejs/kit/pull/7529))

## 1.0.0-next.536

### Patch Changes

- custom aliases resolved in service worker builds ([#7500](https://github.com/sveltejs/kit/pull/7500))

## 1.0.0-next.535

### Patch Changes

- breaking: call beforeNavigate once with type unload on external navigation, rename type 'load' to 'enter' and type 'unload' to 'leave', add 'willUnload' property ([#6813](https://github.com/sveltejs/kit/pull/6813))

## 1.0.0-next.534

### Patch Changes

- breaking: more consistent casing for goto options ([#7502](https://github.com/sveltejs/kit/pull/7502))
- breaking: replace routeId with route.id ([#7450](https://github.com/sveltejs/kit/pull/7450))
- Fix nullish data node reference ([#7503](https://github.com/sveltejs/kit/pull/7503))

## 1.0.0-next.533

### Patch Changes

- fix: bump required Vite version and address warning ([#7491](https://github.com/sveltejs/kit/pull/7491))

## 1.0.0-next.532

### Patch Changes

- Bump devalue version ([#7466](https://github.com/sveltejs/kit/pull/7466))

## 1.0.0-next.531

### Patch Changes

- breaking: change `config.kit.prerender.onError` to `handleHttpError`, and check for invalid fragment links ([#7375](https://github.com/sveltejs/kit/pull/7375))
- fix escaping bug in crawler ([#7375](https://github.com/sveltejs/kit/pull/7375))

## 1.0.0-next.530

### Patch Changes

- fix: fetch erroring on Cloudflare ([#7453](https://github.com/sveltejs/kit/pull/7453))
- Only simulate CORS errors for shared load functions ([#7454](https://github.com/sveltejs/kit/pull/7454))

## 1.0.0-next.529

### Patch Changes

- fix: better type generation for load functions with different return values ([#7425](https://github.com/sveltejs/kit/pull/7425))
- fix: correctly strip data suffix at root page ([#7445](https://github.com/sveltejs/kit/pull/7445))
- update dependencies ([#7355](https://github.com/sveltejs/kit/pull/7355))

## 1.0.0-next.528

### Patch Changes

- Restore `req.url` to `req.originalUrl` in dev and preview ([#7343](https://github.com/sveltejs/kit/pull/7343))

## 1.0.0-next.527

### Patch Changes

- fix: harmonize cookie path and add dev time warnings ([#7416](https://github.com/sveltejs/kit/pull/7416))
- feat: add invalidateAll option to goto ([#7407](https://github.com/sveltejs/kit/pull/7407))

## 1.0.0-next.526

### Patch Changes

- declare function type with named syntax ([#7396](https://github.com/sveltejs/kit/pull/7396))
- fix: optional params can be undefined ([#7379](https://github.com/sveltejs/kit/pull/7379))
- fix: support undici 5.12.0 and pin it ([#7412](https://github.com/sveltejs/kit/pull/7412))
- chore: upgrade to vite-plugin-svelte 1.1.0 and enable prebundleSvelteLibraries ([#7388](https://github.com/sveltejs/kit/pull/7388))
- Show more descriptive error if data returned from `load` is a non-POJO ([#7386](https://github.com/sveltejs/kit/pull/7386))

## 1.0.0-next.525

### Patch Changes

- Always avoid caching form submission on enhanced forms ([#7350](https://github.com/sveltejs/kit/pull/7350))

## 1.0.0-next.524

### Patch Changes

- fix: get type gen working again ([#7370](https://github.com/sveltejs/kit/pull/7370))
- fix: don't run matchers for empty optional params ([#7346](https://github.com/sveltejs/kit/pull/7346))

## 1.0.0-next.523

### Patch Changes

- fix: split route ids into correct segments ([#7367](https://github.com/sveltejs/kit/pull/7367))

## 1.0.0-next.522

### Patch Changes

- docs: rewrite load docs ([#7174](https://github.com/sveltejs/kit/pull/7174))
- breaking: Prefix all route IDs with / ([#7338](https://github.com/sveltejs/kit/pull/7338))

## 1.0.0-next.521

### Patch Changes

- feat: add reset option to update method of enhance ([#7326](https://github.com/sveltejs/kit/pull/7326))
- breaking: remove global fetch override when prerendering ([#7318](https://github.com/sveltejs/kit/pull/7318))
- Improve error message when prefetching fails ([#7314](https://github.com/sveltejs/kit/pull/7314))

## 1.0.0-next.520

### Patch Changes

- fix: ensure serialized headers check is always applied ([#7221](https://github.com/sveltejs/kit/pull/7221))

## 1.0.0-next.519

### Patch Changes

- breaking: throw error when routes conflict ([#7051](https://github.com/sveltejs/kit/pull/7051))
- feat: implement optional route params ([#7051](https://github.com/sveltejs/kit/pull/7051))

## 1.0.0-next.518

### Patch Changes

- Enable removal of non-browser code from client builds ([#7296](https://github.com/sveltejs/kit/pull/7296))
- feat: more info about prerendering errors, add strict option to adapter-static ([#7264](https://github.com/sveltejs/kit/pull/7264))

## 1.0.0-next.517

### Patch Changes

- fix: more informative serialization error messages ([#7303](https://github.com/sveltejs/kit/pull/7303))
- fix: add `$types` to includes for better DX ([#7301](https://github.com/sveltejs/kit/pull/7301))

## 1.0.0-next.516

### Patch Changes

- fix: better navigation protocol check ([#7067](https://github.com/sveltejs/kit/pull/7067))
- fix: forward cookie headers on etag response ([#7256](https://github.com/sveltejs/kit/pull/7256))
- Properly resolve absolute paths to relative on server build ([#7252](https://github.com/sveltejs/kit/pull/7252))

## 1.0.0-next.515

### Patch Changes

- Account for relative path to routes in `config.kit.files.routes` ([#7223](https://github.com/sveltejs/kit/pull/7223))
- Use config.kit.paths.base prefix for static assets ([#4448](https://github.com/sveltejs/kit/pull/4448))

## 1.0.0-next.514

### Patch Changes

- add helpful error message for `throw invalid()` in form actions ([#7225](https://github.com/sveltejs/kit/pull/7225))

## 1.0.0-next.513

### Patch Changes

- Transfer server data as devalue-encoded JSON ([#7177](https://github.com/sveltejs/kit/pull/7177))
- fix: remove groups from segments for adapters ([#7222](https://github.com/sveltejs/kit/pull/7222))

## 1.0.0-next.512

### Patch Changes

- Fix parsing content-type header for actions ([#7195](https://github.com/sveltejs/kit/pull/7195))
- fix: reset form in use:enhance after successful submit ([#7207](https://github.com/sveltejs/kit/pull/7207))
- fix: auto-update commented PageError ([#7189](https://github.com/sveltejs/kit/pull/7189))

## 1.0.0-next.511

### Patch Changes

- perf: render head links before other content ([#7160](https://github.com/sveltejs/kit/pull/7160))

## 1.0.0-next.510

### Patch Changes

- Add `fetch` to `RequestEvent` ([#7113](https://github.com/sveltejs/kit/pull/7113))

## 1.0.0-next.509

### Patch Changes

- Apply define config to service worker ([#7140](https://github.com/sveltejs/kit/pull/7140))
- chore: Skip removing HTTP/2 pseudo-headers, which is no longer necessary with undici ([#7142](https://github.com/sveltejs/kit/pull/7142))
- bump devalue to version 4 ([#7147](https://github.com/sveltejs/kit/pull/7147))

## 1.0.0-next.508

### Patch Changes

- chore: Upgrade undici so that we can use its multipart form data parsing instead of node-fetch's ([#7131](https://github.com/sveltejs/kit/pull/7131))

## 1.0.0-next.507

### Patch Changes

- Allow TypedArray request bodies in `fetch` in `load` ([#7065](https://github.com/sveltejs/kit/pull/7065))
- Use `FormData` polyfill from `undici` rather than `node-fetch` ([#7065](https://github.com/sveltejs/kit/pull/7065))

## 1.0.0-next.506

### Patch Changes

- Default to insecure cookies when serving on http://localhost ([#7090](https://github.com/sveltejs/kit/pull/7090))
- docs: explain ramifications of base path ([#7095](https://github.com/sveltejs/kit/pull/7095))
- fix: decode routeIds in headers for prerendering ([#7097](https://github.com/sveltejs/kit/pull/7097))
- feat: provide `update` to `use:enhance` callback ([#7083](https://github.com/sveltejs/kit/pull/7083))

## 1.0.0-next.505

### Patch Changes

- fix: handle form action returning nothing; handle page.(server).js without load functions ([#7050](https://github.com/sveltejs/kit/pull/7050))
- fix: add `RequestEvent` to `$types` when `+layout.server.js` present ([#7063](https://github.com/sveltejs/kit/pull/7063))

## 1.0.0-next.504

### Patch Changes

- Add the submitter value with name to formData for use:enhance ([#7012](https://github.com/sveltejs/kit/pull/7012))

## 1.0.0-next.503

### Patch Changes

- Added form property to \$page store ([#6986](https://github.com/sveltejs/kit/pull/6986))
- Throw an error if prerenderable routes are not prerendered ([#6974](https://github.com/sveltejs/kit/pull/6974))

## 1.0.0-next.502

### Patch Changes

- fix: prevent data types from becoming type `never`, notice moved/deleted files ([#7002](https://github.com/sveltejs/kit/pull/7002))
- Allow ActionData to be undefined ([#6994](https://github.com/sveltejs/kit/pull/6994))
- Respect `config.kit.env.dir` when running `vite preview` ([#7001](https://github.com/sveltejs/kit/pull/7001))
- Only run postinstall script if package.json exists ([#6998](https://github.com/sveltejs/kit/pull/6998))
- Use custom x-sveltekit-action header to route enhanced form submissions to +page.server.js over +server.js ([#6997](https://github.com/sveltejs/kit/pull/6997))

## 1.0.0-next.501

### Patch Changes

- fix: unwrap promises for load function data on the client ([#6972](https://github.com/sveltejs/kit/pull/6972))

## 1.0.0-next.500

### Patch Changes

- Allow prerendered pages to link to non-prerenderable endpoints ([#6977](https://github.com/sveltejs/kit/pull/6977))
- fix: handle SPA root data loading error ([#6918](https://github.com/sveltejs/kit/pull/6918))

## 1.0.0-next.499

### Patch Changes

- breaking: rename App.PageError to App.Error ([#6963](https://github.com/sveltejs/kit/pull/6963))

## 1.0.0-next.498

### Patch Changes

- chdir before attempting postinstall ([#6969](https://github.com/sveltejs/kit/pull/6969))

## 1.0.0-next.497

### Patch Changes

- Add origin header for non-GET and external requests made with server-side fetch ([#6901](https://github.com/sveltejs/kit/pull/6901))

## 1.0.0-next.496

### Patch Changes

- fix: update page status when applying action ([#6942](https://github.com/sveltejs/kit/pull/6942))
- fix: apply redirect/error logic for `use:enhance` ([#6828](https://github.com/sveltejs/kit/pull/6828))

## 1.0.0-next.495

### Patch Changes

- Run `svelte-kit sync` in all workspace directories during postinstall ([#6949](https://github.com/sveltejs/kit/pull/6949))

## 1.0.0-next.494

### Patch Changes

- Fix fetch type ([#6955](https://github.com/sveltejs/kit/pull/6955))
- Add csp wasm-unsafe-eval keyword ([#6958](https://github.com/sveltejs/kit/pull/6958))
- Register service worker with relative URL ([#6954](https://github.com/sveltejs/kit/pull/6954))

## 1.0.0-next.493

### Patch Changes

- fix: allow missing routes folder ([#6944](https://github.com/sveltejs/kit/pull/6944))
- Only forward set-cookie headers for internal fetches ([#6923](https://github.com/sveltejs/kit/pull/6923))

## 1.0.0-next.492

### Patch Changes

- fix: add missing depends function to ServerLoadEvent type ([#6935](https://github.com/sveltejs/kit/pull/6935))
- Redact error message if `getRequest` fails ([#6936](https://github.com/sveltejs/kit/pull/6936))
- Add cookies.serialize method ([#6925](https://github.com/sveltejs/kit/pull/6925))
- Always apply cookies, not just for matched routes ([#6925](https://github.com/sveltejs/kit/pull/6925))
- fix: tighten up navigation and invalidation logic ([#6924](https://github.com/sveltejs/kit/pull/6924))
- Respond with 413 if request body is too large ([#6936](https://github.com/sveltejs/kit/pull/6936))

## 1.0.0-next.491

### Patch Changes

- fix: symlink routes ([#6796](https://github.com/sveltejs/kit/pull/6796))

## 1.0.0-next.490

### Patch Changes

- fix `write_types` on windows using posixify() ([#6913](https://github.com/sveltejs/kit/pull/6913))
- Prevent caching of `__data.js` files ([#6904](https://github.com/sveltejs/kit/pull/6904))
- Make url property getters non-enumerable ([#6909](https://github.com/sveltejs/kit/pull/6909))

## 1.0.0-next.489

### Patch Changes

- fix: tighten up handling and documentation around 404 ([#6897](https://github.com/sveltejs/kit/pull/6897))

## 1.0.0-next.488

### Patch Changes

- Decode HTML entities in `href` attributes when crawling ([#6891](https://github.com/sveltejs/kit/pull/6891))

## 1.0.0-next.487

### Patch Changes

- feat: allow +server.js files next to +page files ([#6773](https://github.com/sveltejs/kit/pull/6773))

## 1.0.0-next.486

### Patch Changes

- fix: handle jsdoc without tags while generating proxy types ([#6884](https://github.com/sveltejs/kit/pull/6884))

## 1.0.0-next.485

### Patch Changes

- fix to ActionData type generation ([#6869](https://github.com/sveltejs/kit/pull/6869))
- The return type of cookies.get is string|undefined #6865 ([#6867](https://github.com/sveltejs/kit/pull/6867))

## 1.0.0-next.484

### Patch Changes

- fix: forward cookies from fetch on redirect response ([#6833](https://github.com/sveltejs/kit/pull/6833))
- adding missing `@types/cookie` dependency ([#6818](https://github.com/sveltejs/kit/pull/6818))
- fix `write_types` on windows ([#6843](https://github.com/sveltejs/kit/pull/6843))

## 1.0.0-next.483

### Patch Changes

- fix: various `cookies` fixes and improvements ([#6811](https://github.com/sveltejs/kit/pull/6811))

## 1.0.0-next.482

### Patch Changes

- fix: ActionData type ([#6748](https://github.com/sveltejs/kit/pull/6748))
- fix: reuse server data while not reusing client load ([#6778](https://github.com/sveltejs/kit/pull/6778))
- fix: update current.url on hashchange ([#6802](https://github.com/sveltejs/kit/pull/6802))
- Change illegal import message to reference public-facing code rather than client-side code ([#6646](https://github.com/sveltejs/kit/pull/6646))
- fix: silence prop warnings ([#6798](https://github.com/sveltejs/kit/pull/6798))
- chore: Refactor graph analysis for better unit tests ([#6727](https://github.com/sveltejs/kit/pull/6727))
- fix: error when using `paths.base` and `import` assets ([#6769](https://github.com/sveltejs/kit/pull/6769))

## 1.0.0-next.481

### Patch Changes

- fix: docs links in generated and published types ([#6741](https://github.com/sveltejs/kit/pull/6741))

## 1.0.0-next.480

### Patch Changes

- breaking: make action passed to enhance function a URL instead of a string ([#6678](https://github.com/sveltejs/kit/pull/6678))

## 1.0.0-next.479

### Patch Changes

- breaking: request creation cleanup ([#6681](https://github.com/sveltejs/kit/pull/6681))
- breaking: limit adapter-node request size ([#6684](https://github.com/sveltejs/kit/pull/6684))

## 1.0.0-next.478

### Patch Changes

- breaking: hooks file renames; error shape defined through handleError ([#6675](https://github.com/sveltejs/kit/pull/6675))
- breaking: remove element property; enhance can only be used on form elements ([#6662](https://github.com/sveltejs/kit/pull/6662))

## 1.0.0-next.477

### Patch Changes

- breaking: prevent import of `$lib/server` modules in client-facing code ([#6623](https://github.com/sveltejs/kit/pull/6623))
- breaking: change sveltekit.message to sveltekit.error.message ([#6659](https://github.com/sveltejs/kit/pull/6659))
- breaking: apply 304 logic after handle, so handle receives original response from resolve ([#6639](https://github.com/sveltejs/kit/pull/6639))

## 1.0.0-next.476

### Patch Changes

- breaking: change use:enhance signature to support `<button formaction>` ([#6633](https://github.com/sveltejs/kit/pull/6633))

## 1.0.0-next.475

### Patch Changes

- cookies.delete fix #6609 ([#6622](https://github.com/sveltejs/kit/pull/6622))
- feat: provide `SubmitFunction` type ([#6613](https://github.com/sveltejs/kit/pull/6613))
- fix: address Vite warning when using base or asset path ([#6621](https://github.com/sveltejs/kit/pull/6621))

## 1.0.0-next.474

### Patch Changes

- breaking: disallow default and named actions next to each other ([#6615](https://github.com/sveltejs/kit/pull/6615))

## 1.0.0-next.473

### Patch Changes

- fix: pass `form` prop to pages ([#6611](https://github.com/sveltejs/kit/pull/6611))

## 1.0.0-next.472

### Patch Changes

- breaking: add API for interacting with cookies ([#6593](https://github.com/sveltejs/kit/pull/6593))
- breaking: Replace `POST`/`PUT`/`PATCH`/`DELETE` in `+page.server.js` with `export const actions` ([#6469](https://github.com/sveltejs/kit/pull/6469))

## 1.0.0-next.471

### Patch Changes

- breaking: Allow users to designate modules as server-only ([#6422](https://github.com/sveltejs/kit/pull/6422))
- breaking: exclude headers from serialized responses by default, add `filterSerializedResponseHeaders` `resolve` option ([#6569](https://github.com/sveltejs/kit/pull/6569))

## 1.0.0-next.470

### Patch Changes

- Bump vite-plugin-svelte and required vite version ([#6583](https://github.com/sveltejs/kit/pull/6583))
- feat: Support for `$env/dynamic/*` in Vite ecosystem tools ([#6454](https://github.com/sveltejs/kit/pull/6454))
- breaking: Replace `externalFetch` with `handleFetch` ([#6565](https://github.com/sveltejs/kit/pull/6565))

## 1.0.0-next.469

### Patch Changes

- disable `rollupOptions.output.hoistTransitiveImports` by default ([#6560](https://github.com/sveltejs/kit/pull/6560))

## 1.0.0-next.468

### Patch Changes

- breaking: simulate CORS errors in server-side fetch ([#6550](https://github.com/sveltejs/kit/pull/6550))

## 1.0.0-next.467

### Patch Changes

- breaking: prevent server-side fetch from reading files with # character in the filename ([#6549](https://github.com/sveltejs/kit/pull/6549))

## 1.0.0-next.466

### Patch Changes

- breaking: change Navigation type to include from/to.params and from/to.routeId ([#6552](https://github.com/sveltejs/kit/pull/6552))
- Warn about incorrect data-sveltekit-x values ([#6546](https://github.com/sveltejs/kit/pull/6546))

## 1.0.0-next.465

### Patch Changes

- feat: add `type` to navigation object ([#6537](https://github.com/sveltejs/kit/pull/6537))

## 1.0.0-next.464

### Patch Changes

- Fix server manifest generation ([#6507](https://github.com/sveltejs/kit/pull/6507))
- Silently skip prefetching of external URLs when using `data-sveltekit-prefetch`. Warn like before when calling `prefetch()` for external URLs. ([#6518](https://github.com/sveltejs/kit/pull/6518))

## 1.0.0-next.463

### Patch Changes

- fix peer dependency warning on vite-3.1.0-beta.1 ([#6512](https://github.com/sveltejs/kit/pull/6512))
- breaking: respect cache-control max-age on the client for initially fetched responses ([#6461](https://github.com/sveltejs/kit/pull/6461))

## 1.0.0-next.462

### Patch Changes

- breaking: block cross-site form POSTs by default. disable with config.kit.csrf.checkOrigin ([#6510](https://github.com/sveltejs/kit/pull/6510))

## 1.0.0-next.461

### Patch Changes

- breaking: call `invalidate(fn)` predicates with a URL instead of a string ([#6493](https://github.com/sveltejs/kit/pull/6493))
- Prefer JSON responses when returning errors if accept header is `*/*` ([#6497](https://github.com/sveltejs/kit/pull/6497))
- breaking: replace invalidate() with invalidateAll() ([#6493](https://github.com/sveltejs/kit/pull/6493))

## 1.0.0-next.460

### Patch Changes

- breaking: Remove sveltekit:start event ([#6484](https://github.com/sveltejs/kit/pull/6484))

## 1.0.0-next.459

### Patch Changes

- Prevent validation_errors from being serialized twice ([#6468](https://github.com/sveltejs/kit/pull/6468))

## 1.0.0-next.458

### Patch Changes

- breaking: catch and render raw response when unexpected error occurs in endpoint ([#6434](https://github.com/sveltejs/kit/pull/6434))

## 1.0.0-next.457

### Patch Changes

- Print error if resolveOpts.ssr is set ([#6475](https://github.com/sveltejs/kit/pull/6475))

## 1.0.0-next.456

### Patch Changes

- Apply `data-sveltekit-prefetch/noscroll/reload` to all child `<a>` elements ([#6442](https://github.com/sveltejs/kit/pull/6442))
- fix: Saving the root route will write types now ([#6450](https://github.com/sveltejs/kit/pull/6450))

## 1.0.0-next.455

### Patch Changes

- bump vite-plugin-svelte to 1.0.3 to fix an issue with svelte-inspector in vite 3.1 ([#6443](https://github.com/sveltejs/kit/pull/6443))
- chore: bump ts version and ensure it works with latest changes ([#6428](https://github.com/sveltejs/kit/pull/6428))
- breaking: `ssr/hydrate/router/prerender.default` are now configurable in `+page(.server).js` and `+layout(.server).js` ([#6197](https://github.com/sveltejs/kit/pull/6197))
- breaking: add `error.html` page, rename `kit.config.files.template` to `kit.config.files.appTemplate` ([#6367](https://github.com/sveltejs/kit/pull/6367))
- breaking: merge resolve options when using sequence helper ([#6401](https://github.com/sveltejs/kit/pull/6401))
- breaking: replace `router`/`hydrate` page options with `csr` ([#6446](https://github.com/sveltejs/kit/pull/6446))
- breaking: add `prerender = 'auto'` option, and extend `prerender` option to endpoints ([#6392](https://github.com/sveltejs/kit/pull/6392))

## 1.0.0-next.454

### Patch Changes

- breaking: Replace `sveltekit:*` with valid HTML attributes like `data-sveltekit-*` ([#6170](https://github.com/sveltejs/kit/pull/6170))

## 1.0.0-next.453

### Patch Changes

- Include type descriptions for ambient declarations ([#6416](https://github.com/sveltejs/kit/pull/6416))

## 1.0.0-next.452

### Patch Changes

- breaking: remove App.PrivateEnv and App.PublicEnv in favour of generated types ([#6413](https://github.com/sveltejs/kit/pull/6413))

## 1.0.0-next.451

### Patch Changes

- Prevent infinite reloads on `/` when root `+layout.server.js` exports `load` ([#6405](https://github.com/sveltejs/kit/pull/6405))

## 1.0.0-next.450

### Patch Changes

- breaking: require Vite 3.1.0-beta.1 ([#6398](https://github.com/sveltejs/kit/pull/6398))

## 1.0.0-next.449

### Patch Changes

- fix: silence unused type hints in generated proxy files ([#6391](https://github.com/sveltejs/kit/pull/6391))

## 1.0.0-next.448

### Patch Changes

- prevent test suites from getting published ([#6386](https://github.com/sveltejs/kit/pull/6386))
- fix: remove unnecessary JSON serialization of server data ([#6382](https://github.com/sveltejs/kit/pull/6382))
- breaking: require Node 16.14 ([#6388](https://github.com/sveltejs/kit/pull/6388))

## 1.0.0-next.447

### Patch Changes

- Use devalue to serialize server-only `load` return values ([#6318](https://github.com/sveltejs/kit/pull/6318))

## 1.0.0-next.446

### Patch Changes

- fix: encode if root layout has server load ([#6352](https://github.com/sveltejs/kit/pull/6352))

## 1.0.0-next.445

### Patch Changes

- breaking: rename `$app/env` to `$app/environment`, to disambiguate with `$env/...` ([#6334](https://github.com/sveltejs/kit/pull/6334))

## 1.0.0-next.444

### Patch Changes

- set errors on root component ([#6330](https://github.com/sveltejs/kit/pull/6330))
- fix: do not call server and update `$page.data` unnecessarily ([#6311](https://github.com/sveltejs/kit/pull/6311))

## 1.0.0-next.443

### Patch Changes

- fix: prevent unused types warning ([#6293](https://github.com/sveltejs/kit/pull/6293))
- fix: don't reuse server load data from previous page if current doesn't have a load function ([#6309](https://github.com/sveltejs/kit/pull/6309))

## 1.0.0-next.442

### Patch Changes

- fix: handle case where parent() refers to missing load function ([#6282](https://github.com/sveltejs/kit/pull/6282))

## 1.0.0-next.441

### Patch Changes

- fix: Set `errors` prop on all layout/leaf components, not just page that happens to be deepest ([#6279](https://github.com/sveltejs/kit/pull/6279))
- Fix route sorting with groups ([#6288](https://github.com/sveltejs/kit/pull/6288))

## 1.0.0-next.440

### Patch Changes

- fix: type tweaks ([#6271](https://github.com/sveltejs/kit/pull/6271))
- Correctly determine whether route uses server data ([#6275](https://github.com/sveltejs/kit/pull/6275))

## 1.0.0-next.439

### Patch Changes

- feat: add App.PageData type ([#6226](https://github.com/sveltejs/kit/pull/6226))

## 1.0.0-next.438

### Patch Changes

- more granular URL property tracking during load ([#6237](https://github.com/sveltejs/kit/pull/6237))
- breaking: change event.clientAddress to event.getClientAddress() ([#6237](https://github.com/sveltejs/kit/pull/6237))
- Remove all enumerable getters from RequestEvent and LoadEvent ([#6237](https://github.com/sveltejs/kit/pull/6237))

## 1.0.0-next.437

### Patch Changes

- fix: only generate blank non-SSR pages when prerendering is enabled ([#6251](https://github.com/sveltejs/kit/pull/6251))

## 1.0.0-next.436

### Patch Changes

- fix: prerender routes in a (group) ([#6232](https://github.com/sveltejs/kit/pull/6232))

## 1.0.0-next.435

### Patch Changes

- fix: allow `@` route breakouts to layouts in `[foo]` or `(foo)` directories ([#6224](https://github.com/sveltejs/kit/pull/6224))

## 1.0.0-next.434

### Patch Changes

- Always create `$types` for a route with a layout, leaf or endpoint ([#6222](https://github.com/sveltejs/kit/pull/6222))

## 1.0.0-next.433

### Patch Changes

- feat: Moved hooks.js initialization from Server.respond into Server.init ([#6179](https://github.com/sveltejs/kit/pull/6179))

## 1.0.0-next.432

### Patch Changes

- breaking: implement new layout system (see the PR for migration instructions) ([#6174](https://github.com/sveltejs/kit/pull/6174))

## 1.0.0-next.431

### Patch Changes

- feat: Avoid running load on the server unnecessarily ([#6056](https://github.com/sveltejs/kit/pull/6056))

## 1.0.0-next.430

### Patch Changes

- feat: Added config.kit.env.dir, which allows users to set a directory to search for .env files ([#6175](https://github.com/sveltejs/kit/pull/6175))

## 1.0.0-next.429

### Patch Changes

- fix: Prevent import of `$env/*/private` in client ([#6018](https://github.com/sveltejs/kit/pull/6018))
- Fix vite.config.ts "Cannot find module '@sveltejs/kit/vite' or its corresponding type declarations." ([#6140](https://github.com/sveltejs/kit/pull/6140))

## 1.0.0-next.428

### Patch Changes

- Allow `$app/stores` to be used from anywhere on the browser ([#6100](https://github.com/sveltejs/kit/pull/6100))
- use `enumerable: false` on "[x] no longer exists" getters so that they are not triggered by spreading ([#6105](https://github.com/sveltejs/kit/pull/6105))
- Fix pattern matching for routes starting with an encoded `@` symbol ([#6110](https://github.com/sveltejs/kit/pull/6110))
- Fix typos in generating `LayoutServerLoad.{name}` type ([#6123](https://github.com/sveltejs/kit/pull/6123))
- Fix sorting of files into +layout, +error, everything else. ([#6108](https://github.com/sveltejs/kit/pull/6108))
- Add test folder to generated tsconfig ([#6085](https://github.com/sveltejs/kit/pull/6085))

## 1.0.0-next.427

### Patch Changes

- Throw error if browser.hydrate is false and browser.router is true ([#6086](https://github.com/sveltejs/kit/pull/6086))

## 1.0.0-next.426

### Patch Changes

- Avoid using [].at(-1) in the client ([#6082](https://github.com/sveltejs/kit/pull/6082))

## 1.0.0-next.425

### Patch Changes

- Silence more unknown prop warnings coming from SvelteKit ([#6078](https://github.com/sveltejs/kit/pull/6078))

## 1.0.0-next.424

### Patch Changes

- prevent duplicate module ids by disabling optimizeDeps for @sveltejs/kit ([#6057](https://github.com/sveltejs/kit/pull/6057))
- Generate types when Svelte file missing, fix layout params ([#6066](https://github.com/sveltejs/kit/pull/6066))
- Silence unknown prop warnings coming from SvelteKit ([#6071](https://github.com/sveltejs/kit/pull/6071))

## 1.0.0-next.423

### Patch Changes

- Accumulate data from parent layouts into `export let data` ([#6050](https://github.com/sveltejs/kit/pull/6050))

## 1.0.0-next.422

### Patch Changes

- breaking: remove ability for `+page.server.js` to respond to `GET` requests with JSON ([#6007](https://github.com/sveltejs/kit/pull/6007))
- Handle `throw error/redirect` in `+server.js` ([#6028](https://github.com/sveltejs/kit/pull/6028))
- handle `set-cookie` in `setHeaders` ([#6033](https://github.com/sveltejs/kit/pull/6033))
- Handle windows paths and regexp chars in kit.alias ([#6034](https://github.com/sveltejs/kit/pull/6034))
- Make errors type in Action type less restrictive ([#6022](https://github.com/sveltejs/kit/pull/6022))
- Check that data is serializable ([#5987](https://github.com/sveltejs/kit/pull/5987))
- Fix parent data type for layouts referencing named layouts in the same folder ([#6025](https://github.com/sveltejs/kit/pull/6025))

## 1.0.0-next.421

### Patch Changes

- Respect `export const prerender = false` in `+page.server.js` ([#6012](https://github.com/sveltejs/kit/pull/6012))

## 1.0.0-next.420

### Patch Changes

- fix: support linked `@sveltejs/kit` project in Vite 3.0.3+ ([#5861](https://github.com/sveltejs/kit/pull/5861))

## 1.0.0-next.419

### Patch Changes

- Return a 303 response when a `POST` handler provides a `location` ([#5989](https://github.com/sveltejs/kit/pull/5989))
- Generate `__data.json` files for server-side redirects when prerendering ([#5997](https://github.com/sveltejs/kit/pull/5997))
- chore: remove chokidar as dependency of kit ([#5996](https://github.com/sveltejs/kit/pull/5996))
- Use relative asset paths where possible ([#4250](https://github.com/sveltejs/kit/pull/4250))

## 1.0.0-next.418

### Patch Changes

- Prevent double import of env modules ([#5955](https://github.com/sveltejs/kit/pull/5955))
- Tighten up params typings, fix load function typings, add event typings to generated types ([#5974](https://github.com/sveltejs/kit/pull/5974))

## 1.0.0-next.417

### Patch Changes

- Render pages without a .svelte file in their proper layout/error files ([#5972](https://github.com/sveltejs/kit/pull/5972))

## 1.0.0-next.416

### Patch Changes

- fix: allow additional keys in svelte.config.js ([#5961](https://github.com/sveltejs/kit/pull/5961))

## 1.0.0-next.415

### Patch Changes

- breaking: Remove session object ([#5946](https://github.com/sveltejs/kit/pull/5946))

## 1.0.0-next.414

### Patch Changes

- Correctly provide server parent data ([#5916](https://github.com/sveltejs/kit/pull/5916))

## 1.0.0-next.413

### Patch Changes

- feat: `$env/static/*` are now virtual to prevent writing sensitive values to disk ([#5825](https://github.com/sveltejs/kit/pull/5825))

## 1.0.0-next.412

### Patch Changes

- Lazy load Svelte components to reenable no-ssr use cases ([#5930](https://github.com/sveltejs/kit/pull/5930))

## 1.0.0-next.411

### Patch Changes

- Hydration validation errors ([#5918](https://github.com/sveltejs/kit/pull/5918))
- Handle function without params when writing TS proxy ([#5928](https://github.com/sveltejs/kit/pull/5928))
- fix: prevent `Content-Length` header from being incorrectly inherited by requests made from `load`'s `fetch` during SSR ([#5922](https://github.com/sveltejs/kit/pull/5922))
- Provide helpful error message on invalid named layout reference ([#5912](https://github.com/sveltejs/kit/pull/5912))

## 1.0.0-next.410

### Patch Changes

- Fix generated path extension for `AwaitedProperties` ([#5917](https://github.com/sveltejs/kit/pull/5917))

## 1.0.0-next.409

### Patch Changes

- make generated type import path ends in `.js` ([#5907](https://github.com/sveltejs/kit/pull/5907))

## 1.0.0-next.408

### Patch Changes

- Only search for layout name in basename ([#5897](https://github.com/sveltejs/kit/pull/5897))

## 1.0.0-next.407

### Patch Changes

- Allow actions to return undefined ([#5892](https://github.com/sveltejs/kit/pull/5892))
- fix: avoid manifest collisions ([#5874](https://github.com/sveltejs/kit/pull/5874))
- Make package command remove `publishConfig.directory` from generated package.json ([#5848](https://github.com/sveltejs/kit/pull/5848))

## 1.0.0-next.406

### Patch Changes

- breaking: Overhaul filesystem-based router (https://github.com/sveltejs/kit/discussions/5774) ([#5778](https://github.com/sveltejs/kit/pull/5778))
- breaking: Change load API (https://github.com/sveltejs/kit/discussions/5774) ([#5778](https://github.com/sveltejs/kit/pull/5778))

## 1.0.0-next.405

### Patch Changes

- Move `compress` logic to `Builder` API ([#5822](https://github.com/sveltejs/kit/pull/5822))
- feat: implement Link header ([#5735](https://github.com/sveltejs/kit/pull/5735))

## 1.0.0-next.404

### Patch Changes

- Build server without removing `sveltekit` Vite plugin ([#5839](https://github.com/sveltejs/kit/pull/5839))

## 1.0.0-next.403

### Patch Changes

- chore: upgrade to Undici 5.8.1 ([#5804](https://github.com/sveltejs/kit/pull/5804))

## 1.0.0-next.402

### Patch Changes

- fix: Import analysis doesn't get stuck in an infinite loop when encountering cyclical imports ([#5794](https://github.com/sveltejs/kit/pull/5794))

## 1.0.0-next.401

### Patch Changes

- fix: chdir to user's application directory before running postinstall sync ([#5771](https://github.com/sveltejs/kit/pull/5771))

## 1.0.0-next.400

### Patch Changes

- More robust path aliasing ([#5582](https://github.com/sveltejs/kit/pull/5582))

## 1.0.0-next.399

### Patch Changes

- Use @sveltejs/kit postinstall lifecycle hook to invoke 'svelte-kit sync' instead of prepare in projects created by create-svelte ([#5760](https://github.com/sveltejs/kit/pull/5760))

## 1.0.0-next.398

### Patch Changes

- Check url protocol to avoid mailto links navigated by kit in mobile devices ([#5726](https://github.com/sveltejs/kit/pull/5726))
- fix: Windows correctly errors on `$env/*/private` imports and Illegal module analysis in dev ignores non-js|ts|svelte files ([#5739](https://github.com/sveltejs/kit/pull/5739))
- feat: include reference to `@sveltejs/kit` types in ambient file ([#5745](https://github.com/sveltejs/kit/pull/5745))

## 1.0.0-next.397

### Patch Changes

- load env before importing hooks during dev ([#5728](https://github.com/sveltejs/kit/pull/5728))
- Add DOM.Iterable to default tsconfig ([#5734](https://github.com/sveltejs/kit/pull/5734))

## 1.0.0-next.396

### Patch Changes

- fix: Environment variable generated types ([#5719](https://github.com/sveltejs/kit/pull/5719))

## 1.0.0-next.395

### Patch Changes

- Add `$env/static/private`, `$env/static/public`, `$env/dynamic/private` and `$env/dynamic/public` modules ([#5663](https://github.com/sveltejs/kit/pull/5663))

## 1.0.0-next.394

### Patch Changes

- Set Vite's publicDir and correctly serve public assets earlier in pipeline ([#5686](https://github.com/sveltejs/kit/pull/5686))
- prerender in a subprocess ([#5678](https://github.com/sveltejs/kit/pull/5678))

## 1.0.0-next.393

### Patch Changes

- Prevent needless prop updates causing rerenders ([#5671](https://github.com/sveltejs/kit/pull/5671))
- Support custom Vite config locations ([#5705](https://github.com/sveltejs/kit/pull/5705))
- Prevent rerender when route state did not change ([#5654](https://github.com/sveltejs/kit/pull/5654))

## 1.0.0-next.392

### Patch Changes

- Revert publicDir change from 1.0.0-next.387 ([#5683](https://github.com/sveltejs/kit/pull/5683))

## 1.0.0-next.391

### Patch Changes

- breaking: replace transformPage with transformPageChunk ([#5657](https://github.com/sveltejs/kit/pull/5657))

## 1.0.0-next.390

### Patch Changes

- fix: vite dev no longer covers errors ([#5563](https://github.com/sveltejs/kit/pull/5563))

## 1.0.0-next.389

### Patch Changes

- Only normalise internal URLs ([#5645](https://github.com/sveltejs/kit/pull/5645))

## 1.0.0-next.388

### Patch Changes

- Reset stack traces to avoid double-fix ([#5644](https://github.com/sveltejs/kit/pull/5644))

## 1.0.0-next.387

### Patch Changes

- set Vite's `publicDir` option ([#5648](https://github.com/sveltejs/kit/pull/5648))
- Normalize paths inside prerenderer, so they are correct inside \$service-worker ([#5641](https://github.com/sveltejs/kit/pull/5641))

## 1.0.0-next.386

### Patch Changes

- Ensure private cache when something is returned from getSession hook ([#5640](https://github.com/sveltejs/kit/pull/5640))
- fix: transform link[rel=icon] to be absolute to avoid console error when navigating ([#5583](https://github.com/sveltejs/kit/pull/5583))

## 1.0.0-next.385

### Patch Changes

- Make 404 error more helpful if paths.base is missing ([#5622](https://github.com/sveltejs/kit/pull/5622))
- fix: decode parameters on client ([`d02f1f25`](https://github.com/sveltejs/kit/commit/d02f1f25ac8acb29e21a06b94418c333928fb9bb))
- Add config.kit.prerender.origin ([#5627](https://github.com/sveltejs/kit/pull/5627))

## 1.0.0-next.384

### Patch Changes

- Respect custom Vite mode in SSR build ([#5602](https://github.com/sveltejs/kit/pull/5602))
- breaking: remove mode, prod and server from \$app/env ([#5602](https://github.com/sveltejs/kit/pull/5602))

## 1.0.0-next.383

### Patch Changes

- Add formData method in superclass rather than monkey-patch ([#5629](https://github.com/sveltejs/kit/pull/5629))

## 1.0.0-next.382

### Patch Changes

- fix: change Vite's output directory from `_app` to client ([#5620](https://github.com/sveltejs/kit/pull/5620))

## 1.0.0-next.381

### Patch Changes

- Handle errors in Node streams ([#5616](https://github.com/sveltejs/kit/pull/5616))

## 1.0.0-next.380

### Patch Changes

- Handle circular dependencies in dynamic imports ([#5619](https://github.com/sveltejs/kit/pull/5619))
- fix: handle binary data when prerendering ([#5497](https://github.com/sveltejs/kit/pull/5497))
- breaking: remove writeStatic to align with Vite ([#5618](https://github.com/sveltejs/kit/pull/5618))
- Reset navigating store upon return to site with a bfcache hit ([#5613](https://github.com/sveltejs/kit/pull/5613))

## 1.0.0-next.379

### Patch Changes

- Use define instead of import.meta.env.VITE_SVELTEKIT_FOO for internal values ([#5594](https://github.com/sveltejs/kit/pull/5594))

## 1.0.0-next.378

### Patch Changes

- Pause Node streams as necessary when converting to ReadableStream ([#5587](https://github.com/sveltejs/kit/pull/5587))
- improve vite version check to work with custom resolutions, eg. pnpm overrides ([#5586](https://github.com/sveltejs/kit/pull/5586))

## 1.0.0-next.377

### Patch Changes

- breaking: Endpoint method names uppercased to match HTTP specifications ([#5513](https://github.com/sveltejs/kit/pull/5513))

## 1.0.0-next.376

### Patch Changes

- fix: ensure completed_build is reset ([#5541](https://github.com/sveltejs/kit/pull/5541))

## 1.0.0-next.375

### Patch Changes

- fix: don't try adapting if build failed ([#5536](https://github.com/sveltejs/kit/pull/5536))
- Render generic error page if `__layout` returns error while rendering full error page ([#4665](https://github.com/sveltejs/kit/pull/4665))

## 1.0.0-next.374

### Patch Changes

- removed `vite` key from config definition ([#5530](https://github.com/sveltejs/kit/pull/5530))
- Render page with correct status code when non-get endpoint returns validation error ([#4328](https://github.com/sveltejs/kit/pull/4328))

## 1.0.0-next.373

### Patch Changes

- breaking: require vite 3 ([#5005](https://github.com/sveltejs/kit/pull/5005))

## 1.0.0-next.372

### Patch Changes

- ignore invalid accept header values instead of throwing an error ([#5502](https://github.com/sveltejs/kit/pull/5502))
- support CSP report-only mode ([#5496](https://github.com/sveltejs/kit/pull/5496))

## 1.0.0-next.371

### Patch Changes

- Pin vite-plugin-svelte to 1.0.0-next.49 ([#5498](https://github.com/sveltejs/kit/pull/5498))

## 1.0.0-next.370

### Patch Changes

- Don't automatically buffer request bodies ([#5442](https://github.com/sveltejs/kit/pull/5442))

## 1.0.0-next.369

### Patch Changes

- skip closeBundle hook during dev to prevent errors on restart ([#5466](https://github.com/sveltejs/kit/pull/5466))
- Normalize paths on prefetch (fixes [#5457](https://github.com/sveltejs/kit/issues/5457)) ([#5458](https://github.com/sveltejs/kit/pull/5458))
- clearer error on bad matcher names ([#5460](https://github.com/sveltejs/kit/pull/5460))

## 1.0.0-next.368

### Patch Changes

- fix: adapt in closeBundle ([#5439](https://github.com/sveltejs/kit/pull/5439))

## 1.0.0-next.367

### Patch Changes

- fix: allow Vite plugins to output mutable assets ([#5416](https://github.com/sveltejs/kit/pull/5416))

## 1.0.0-next.366

### Patch Changes

- reset selection in setTimeout after navigating, to ensure correct behaviour in Firefox ([#5058](https://github.com/sveltejs/kit/pull/5058))

## 1.0.0-next.365

### Patch Changes

- Serve static assets before routes in dev, but only if in an allowed directory ([#5070](https://github.com/sveltejs/kit/pull/5070))
- breaking: Allow %-encoded filenames ([#5056](https://github.com/sveltejs/kit/pull/5056))

## 1.0.0-next.364

### Patch Changes

- breaking: Use Vite defaults for port and strictPort ([#5392](https://github.com/sveltejs/kit/pull/5392))
- Use anonymous function in service worker init script to support legacy browsers ([#5417](https://github.com/sveltejs/kit/pull/5417))

## 1.0.0-next.363

### Patch Changes

- chore: upgrade TypeScript to 4.7.4 ([#5414](https://github.com/sveltejs/kit/pull/5414))

## 1.0.0-next.362

### Patch Changes

- Updated undici to fix #5383 ([#5420](https://github.com/sveltejs/kit/pull/5420))

## 1.0.0-next.361

### Patch Changes

- breaking: require Node 16.9 ([#5395](https://github.com/sveltejs/kit/pull/5395))
- remove FLoC protection, now that we vanquished Google ([#5018](https://github.com/sveltejs/kit/pull/5018))
- Prevent `Connection` header from being incorrectly inherited by requests made from `load`'s `fetch` during SSR ([#5393](https://github.com/sveltejs/kit/pull/5393))
- Returns errors from page endpoints as JSON where appropriate ([#5314](https://github.com/sveltejs/kit/pull/5314))
- Allow body to be a binary ReadableStream ([#5407](https://github.com/sveltejs/kit/pull/5407))

## 1.0.0-next.360

### Patch Changes

- fix: support conditional Vite configs ([#5376](https://github.com/sveltejs/kit/pull/5376))
- Allow server restart when config changed ([#5379](https://github.com/sveltejs/kit/pull/5379))
- Include dynamically imported styles during SSR ([#5138](https://github.com/sveltejs/kit/pull/5138))

## 1.0.0-next.359

### Patch Changes

- Adjust type imports to satisfy TS NodeNext moduleResolution ([#5360](https://github.com/sveltejs/kit/pull/5360))
- breaking: require vite.config.js ([#5332](https://github.com/sveltejs/kit/pull/5332))
- breaking: graduate @sveltejs/kit/vite from experimental ([#5332](https://github.com/sveltejs/kit/pull/5332))
- breaking: switch to vite CLI for dev, build, and preview commands ([#5332](https://github.com/sveltejs/kit/pull/5332))

## 1.0.0-next.358

### Patch Changes

- Only exit process in closeBundle hook if prerender is enabled ([#5356](https://github.com/sveltejs/kit/pull/5356))
- fix: don't log warning if root is configured ([#5330](https://github.com/sveltejs/kit/pull/5330))

## 1.0.0-next.357

### Patch Changes

- breaking: change endpointExtensions to moduleExtensions, and use to filter param matchers ([#5085](https://github.com/sveltejs/kit/pull/5085))
- fix server crash when accessing a malformed URI ([#5246](https://github.com/sveltejs/kit/pull/5246))

## 1.0.0-next.356

### Patch Changes

- Stream request bodies ([#5291](https://github.com/sveltejs/kit/pull/5291))
- Enable multipart formdata parsing with node-fetch ([#5292](https://github.com/sveltejs/kit/pull/5292))
- fix: allow user to set dev port ([#5303](https://github.com/sveltejs/kit/pull/5303))
- breaking: use undici instead of node-fetch ([#5117](https://github.com/sveltejs/kit/pull/5117))

## 1.0.0-next.355

### Patch Changes

- chore: Prerendering URL is now a subclass instead of a proxy ([#5278](https://github.com/sveltejs/kit/pull/5278))
- fix: support vite.config.js on Windows ([#5265](https://github.com/sveltejs/kit/pull/5265))
- Allow both string and URL as the first argument of `$app/navigation#goto` ([#5282](https://github.com/sveltejs/kit/pull/5282))
- rename `goto(href)` to `goto(url)` ([#5286](https://github.com/sveltejs/kit/pull/5286))
- Add types for @sveltejs/kit/experimental/vite ([#5266](https://github.com/sveltejs/kit/pull/5266))
- fix: port flag doesn't work in preview ([#5284](https://github.com/sveltejs/kit/pull/5284))

## 1.0.0-next.354

### Patch Changes

- Added `server` and `prod` env variables ([#5251](https://github.com/sveltejs/kit/pull/5251))

## 1.0.0-next.353

### Patch Changes

- Expose Vite plugin as @sveltejs/kit/experimental/vite ([#5094](https://github.com/sveltejs/kit/pull/5094))

## 1.0.0-next.352

### Patch Changes

- fix manifest not updating when adding routes ([#5157](https://github.com/sveltejs/kit/pull/5157))

## 1.0.0-next.351

### Patch Changes

- fix: URL instance methods now work in `load` ([#5183](https://github.com/sveltejs/kit/pull/5183))
- Upgrade vite-plugin-svelte ([`4e4625ea`](https://github.com/sveltejs/kit/commit/4e4625ea6d9a084bc767ae216704aacd95fe8730))

## 1.0.0-next.350

### Patch Changes

- breaking: revert removal of `kit.browser.hydrate` ([#5178](https://github.com/sveltejs/kit/pull/5178))

## 1.0.0-next.349

### Patch Changes

- breaking: remove kit.browser.hydrate config in favor of compilerOptions.hydratable ([#5155](https://github.com/sveltejs/kit/pull/5155))
- chore: upgrade to Vite 2.9.10 ([#5170](https://github.com/sveltejs/kit/pull/5170))

## 1.0.0-next.348

### Patch Changes

- Disallow access to `__data.json` for standalone endpoints ([#5149](https://github.com/sveltejs/kit/pull/5149))
- chore: introduce `KitConfig` type ([#5141](https://github.com/sveltejs/kit/pull/5141))
- Prevent incorrect redirect for `__data.json` request with `trailingSlash: 'always'` ([#5149](https://github.com/sveltejs/kit/pull/5149))

## 1.0.0-next.347

### Patch Changes

- Update dependencies ([#5121](https://github.com/sveltejs/kit/pull/5121))
- allow symlinked static assets in dev ([#5089](https://github.com/sveltejs/kit/pull/5089))

## 1.0.0-next.346

### Patch Changes

- chore: provide Vite config via plugin ([#5073](https://github.com/sveltejs/kit/pull/5073))
- Reload page to recover from HMR errors ([#5108](https://github.com/sveltejs/kit/pull/5108))
- chore: shared Vite build config ([#5105](https://github.com/sveltejs/kit/pull/5105))
- fix `BodyValidator` handling for nested object literals ([#5118](https://github.com/sveltejs/kit/pull/5118))
- fix: don't set `credentials` to `undefined` in server-side `fetch` ([#5116](https://github.com/sveltejs/kit/pull/5116))

## 1.0.0-next.345

### Patch Changes

- Prevent component double mounting caused by HMR invalidation ([#4891](https://github.com/sveltejs/kit/pull/4891))
- Only recreate manifest when files inside `config.kit.files.routes` are added or deleted ([#5076](https://github.com/sveltejs/kit/pull/5076))

## 1.0.0-next.344

### Patch Changes

- fix: svelte-kit sync no longer permanently deletes the types directory ([#5063](https://github.com/sveltejs/kit/pull/5063))
- chore: trigger sync and other setup from plugin ([#5067](https://github.com/sveltejs/kit/pull/5067))
- Update `engines` to specify that Node 16.7 is required ([#5062](https://github.com/sveltejs/kit/pull/5062))
- only serve `_app/immutable` with immutable cache header, not `_app/version.json` ([#5051](https://github.com/sveltejs/kit/pull/5051))

## 1.0.0-next.343

### Patch Changes

- chore: return config from server start methods ([#5043](https://github.com/sveltejs/kit/pull/5043))

## 1.0.0-next.342

### Patch Changes

- ensure static assets are only served if correct case is used ([#5047](https://github.com/sveltejs/kit/pull/5047))
- breaking: stop suppressing `/favicon.ico` requests, handle them as a valid route ([#5046](https://github.com/sveltejs/kit/pull/5046))
- don't warn about window.fetch during hydration ([#5041](https://github.com/sveltejs/kit/pull/5041))

## 1.0.0-next.341

### Patch Changes

- fix: page store correct after navigation when an identical route with a different hash had been prefetched ([#5039](https://github.com/sveltejs/kit/pull/5039))
- breaking: replace @sveltejs/kit/install-fetch with @sveltejs/kit/node/polyfills ([#4934](https://github.com/sveltejs/kit/pull/4934))
- fix: Prerendered pages fail if they access session. ([#4811](https://github.com/sveltejs/kit/pull/4811))

## 1.0.0-next.340

### Patch Changes

- feat: Pages marked for prerendering fail during ssr at runtime ([#4812](https://github.com/sveltejs/kit/pull/4812))
- Throw load validation errors so that they are caught by handleError ([#4953](https://github.com/sveltejs/kit/pull/4953))
- Allow symlinked directories in the routes folder ([#4957](https://github.com/sveltejs/kit/pull/4957))
- breaking: Rename LoadInput to LoadEvent ([#5015](https://github.com/sveltejs/kit/pull/5015))
- allow disableScrollHandling to be called in afterNavigate ([#4948](https://github.com/sveltejs/kit/pull/4948))
- Add `config.kit.alias` ([#4964](https://github.com/sveltejs/kit/pull/4964))
- use namespace import for vite to support upcoming vite 3.0 esm ([#5030](https://github.com/sveltejs/kit/pull/5030))

## 1.0.0-next.339

### Patch Changes

- breaking: resolve relative urls from the target page when using load's fetch ([#5025](https://github.com/sveltejs/kit/pull/5025))
- fix: `svelte-kit sync` gracefully handles a nonexistent routes folder ([#5020](https://github.com/sveltejs/kit/pull/5020))
- breaking: Replace `%svelte.body%` with `%sveltekit.body%`, etc. ([#5016](https://github.com/sveltejs/kit/pull/5016))

## 1.0.0-next.338

### Patch Changes

- breaking: remove amp config option in favour of amp.transform helper function ([#4710](https://github.com/sveltejs/kit/pull/4710))
- breaking: accessing url.hash from load now results in a helpful error ([#4983](https://github.com/sveltejs/kit/pull/4983))

## 1.0.0-next.337

### Patch Changes

- fix: don't watch `outDir`, except for the `generated` directory ([#4997](https://github.com/sveltejs/kit/pull/4997))
- Warn if load uses window.fetch ([#4958](https://github.com/sveltejs/kit/pull/4958))
- Only run `viteServeStaticMiddleware` after server has attempted response ([#4974](https://github.com/sveltejs/kit/pull/4974))

## 1.0.0-next.336

### Patch Changes

- Pass config to vite-plugin-svelte instead of reloading it ([#4760](https://github.com/sveltejs/kit/pull/4760))
- fix FOUC regression during dev ([#4990](https://github.com/sveltejs/kit/pull/4990))
- move `RequestEvent` and `ResolveOptions` as public types ([#4809](https://github.com/sveltejs/kit/pull/4809))
- breaking: write generated types to `__types` directories ([#4705](https://github.com/sveltejs/kit/pull/4705))

## 1.0.0-next.335

### Patch Changes

- breaking: change data-hydrate to data-sveltekit-hydrate ([#4972](https://github.com/sveltejs/kit/pull/4972))
- Fix default port override ([#4970](https://github.com/sveltejs/kit/pull/4970))

## 1.0.0-next.334

### Patch Changes

- fix: deduplicate injected css during dev ([#4920](https://github.com/sveltejs/kit/pull/4920))

## 1.0.0-next.333

### Patch Changes

- breaking: delay automatic service worker registration until load event ([#4950](https://github.com/sveltejs/kit/pull/4950))

## 1.0.0-next.332

### Patch Changes

- Revert dev command default options ([#4949](https://github.com/sveltejs/kit/pull/4949))

## 1.0.0-next.331

### Patch Changes

- fix `BodyValidator` for nested interfaces ([#4939](https://github.com/sveltejs/kit/pull/4939))
- breaking: drop Node 14 support ([#4922](https://github.com/sveltejs/kit/pull/4922))
- only skip files that were already written when prerendering ([#4928](https://github.com/sveltejs/kit/pull/4928))
- Set default options for dev command ([#4932](https://github.com/sveltejs/kit/pull/4932))

## 1.0.0-next.330

### Patch Changes

- Fix Safari scroll bug on ssr:false page reload ([#4846](https://github.com/sveltejs/kit/pull/4846))

## 1.0.0-next.329

### Patch Changes

- fix: stop flash of unstyled content when using CSS flavours ([#4882](https://github.com/sveltejs/kit/pull/4882))
- delegate `RequestHandler` generics `Body` validation ([#4897](https://github.com/sveltejs/kit/pull/4897))
- feat: more specific types for `kit.prerender.entries` config ([#4880](https://github.com/sveltejs/kit/pull/4880))
- Prevent unhandled rejections when loading page modules ([#4732](https://github.com/sveltejs/kit/pull/4732))

## 1.0.0-next.328

### Patch Changes

- Print useful 404 response when requesting unprefixed path in preview ([#4751](https://github.com/sveltejs/kit/pull/4751))
- Prevent naive path normalization during prerendering ([#4761](https://github.com/sveltejs/kit/pull/4761))

## 1.0.0-next.327

### Patch Changes

- generate tsconfig when running svelte-kit package ([#4824](https://github.com/sveltejs/kit/pull/4824))

## 1.0.0-next.326

### Patch Changes

- breaking: add lib, module, and target to generated tsconfig ([#4791](https://github.com/sveltejs/kit/pull/4791))

## 1.0.0-next.325

### Patch Changes

- Display network logs in node 18 ([#4778](https://github.com/sveltejs/kit/pull/4778))

## 1.0.0-next.324

### Patch Changes

- Throw errors on encountering named layout in directory ([#4756](https://github.com/sveltejs/kit/pull/4756))

## 1.0.0-next.323

### Patch Changes

- Default to target: node14.8, so that top-level await is supported in user code ([#4742](https://github.com/sveltejs/kit/pull/4742))
- Only complain about missing \$lib paths in tsconfig if src/lib exists ([#4735](https://github.com/sveltejs/kit/pull/4735))
- Include all assets in `$service-worker` build, not just CSS ([#4744](https://github.com/sveltejs/kit/pull/4744))

## 1.0.0-next.322

### Patch Changes

- Copy dotfiles from .svelte-kit/output ([#4725](https://github.com/sveltejs/kit/pull/4725))
- breaking: Ignore `trailingSlash` for endpoint requests, apply `trailingSlash` to pages consistently ([#4699](https://github.com/sveltejs/kit/pull/4699))

## 1.0.0-next.321

### Patch Changes

- Tweak error message for non-validating base paths ([#4713](https://github.com/sveltejs/kit/pull/4713))
- breaking: Supplying an empty `--host` option to `preview` exposes the server to both ipv4 and ipv6 networks ([#4729](https://github.com/sveltejs/kit/pull/4729))
- throw error on encountering infinite layout loop ([#4730](https://github.com/sveltejs/kit/pull/4730))

## 1.0.0-next.320

### Patch Changes

- breaking: Replace `maxage` with `cache` in `LoadOutput` ([#4690](https://github.com/sveltejs/kit/pull/4690))

## 1.0.0-next.319

### Patch Changes

- Add --watch flag to svelte-kit package ([#4658](https://github.com/sveltejs/kit/pull/4658))

## 1.0.0-next.318

### Patch Changes

- fix broken AdapterEntry type ([#4674](https://github.com/sveltejs/kit/pull/4674))

## 1.0.0-next.317

### Patch Changes

- Navigation to current URL is no longer a no-op ([#4664](https://github.com/sveltejs/kit/pull/4664))
- builder.createEntries returns a promise that awaits complete() callbacks ([#4663](https://github.com/sveltejs/kit/pull/4663))
- navigation store resets to null after aborted nav ([#4664](https://github.com/sveltejs/kit/pull/4664))

## 1.0.0-next.316

### Patch Changes

- `invalidate` with `predicate` function ([#4636](https://github.com/sveltejs/kit/pull/4636))

## 1.0.0-next.315

### Patch Changes

- Apply set-cookie headers from page dependencies ([#4588](https://github.com/sveltejs/kit/pull/4588))
- Include disallowed method name in 405 response, include Allow header ([#4614](https://github.com/sveltejs/kit/pull/4614))
- apply updated `props.page` when update or goto page ([#4392](https://github.com/sveltejs/kit/pull/4392))
- rename `data-svelte` attribute to `data-sveltekit` ([#4641](https://github.com/sveltejs/kit/pull/4641))

## 1.0.0-next.314

### Patch Changes

- Custom `load` `dependencies` in `LoadOutput` ([#4536](https://github.com/sveltejs/kit/pull/4536))
- Made LoadInput and LoadOutput types public, merged ErrorLoad and Load declarations ([#4515](https://github.com/sveltejs/kit/pull/4515))

## 1.0.0-next.313

### Patch Changes

- add `platform` to requests triggered by `fetch` in `load` during SSR ([#4599](https://github.com/sveltejs/kit/pull/4599))

## 1.0.0-next.312

### Patch Changes

- Only render fallback when prerendering is enabled ([#4604](https://github.com/sveltejs/kit/pull/4604))

## 1.0.0-next.311

### Patch Changes

- Skip client-side navigation for links with sveltekit:reload ([#4545](https://github.com/sveltejs/kit/pull/4545))
- breaking: Skip prerendering for rel="external" links ([#4545](https://github.com/sveltejs/kit/pull/4545))

## 1.0.0-next.310

### Patch Changes

- Remove credentials when creating request object in server-side fetch ([#4548](https://github.com/sveltejs/kit/pull/4548))

## 1.0.0-next.309

### Patch Changes

- Fix session store subscription tracking during SSR ([#4550](https://github.com/sveltejs/kit/pull/4550))

## 1.0.0-next.308

### Patch Changes

- Remove `static` directory from Vite's control ([#4535](https://github.com/sveltejs/kit/pull/4535))

## 1.0.0-next.307

### Patch Changes

- Allow index files to use named layouts ([#4527](https://github.com/sveltejs/kit/pull/4527))
- Respect ssr option when rendering 404 page ([#4513](https://github.com/sveltejs/kit/pull/4513))
- Remove unimplemented option from CLI ([#4507](https://github.com/sveltejs/kit/pull/4507))
- Move MaybePromise from RequestHandlerOutput to RequestHandler return value ([#4519](https://github.com/sveltejs/kit/pull/4519))

## 1.0.0-next.306

### Patch Changes

- Hint if `paths.base` is missing in dev ([#4510](https://github.com/sveltejs/kit/pull/4510))
- Respect `paths.base` when using `--open` ([#4510](https://github.com/sveltejs/kit/pull/4510))
- breaking: Add named layouts, remove `__layout.reset` ([#4388](https://github.com/sveltejs/kit/pull/4388))

## 1.0.0-next.305

### Patch Changes

- Generate correct types for routes with parameter matchers ([#4472](https://github.com/sveltejs/kit/pull/4472))

## 1.0.0-next.304

### Patch Changes

- Upgrade to Vite 2.9 ([#4468](https://github.com/sveltejs/kit/pull/4468))
- allow files and directories named `__tests__` and `__test__` in the routes directory ([#4438](https://github.com/sveltejs/kit/pull/4438))
- Create fallback page when prerendering is disabled ([#4443](https://github.com/sveltejs/kit/pull/4443))

## 1.0.0-next.303

### Patch Changes

- fix: don't use client-side navigation when clicking on a link to the same path on a different origin ([#4433](https://github.com/sveltejs/kit/pull/4433))

## 1.0.0-next.302

### Patch Changes

- fix: don't redirect to external URLs when normalizing paths ([#4414](https://github.com/sveltejs/kit/pull/4414))
- Fix error link for fallthrough replacement ([#4408](https://github.com/sveltejs/kit/pull/4408))

## 1.0.0-next.301

### Patch Changes

- Skip svelte-kit sync if no config file exists yet ([#4372](https://github.com/sveltejs/kit/pull/4372))

## 1.0.0-next.300

### Patch Changes

- fix: correctly populate `event.url.host` in dev mode when using `--https` ([#4364](https://github.com/sveltejs/kit/pull/4364))
- fix rest param type generation ([#4361](https://github.com/sveltejs/kit/pull/4361))
- breaking: Rename validators to matchers ([#4358](https://github.com/sveltejs/kit/pull/4358))

## 1.0.0-next.299

### Patch Changes

- Populate fallback page when trailingSlash is "always" ([#4351](https://github.com/sveltejs/kit/pull/4351))
- Expose `event.routeId` and `page.routeId` ([#4345](https://github.com/sveltejs/kit/pull/4345))
- breaking: remove fallthrough routes ([#4330](https://github.com/sveltejs/kit/pull/4330))
- Add param validators ([#4334](https://github.com/sveltejs/kit/pull/4334))
- breaking: disallow \$ character in dynamic parameters ([#4334](https://github.com/sveltejs/kit/pull/4334))
- Populate event.params before calling handle ([#4344](https://github.com/sveltejs/kit/pull/4344))

## 1.0.0-next.298

### Patch Changes

- fix: correctly detect removal of route ([#4333](https://github.com/sveltejs/kit/pull/4333))

## 1.0.0-next.297

### Patch Changes

- breaking: allow `InputProps` and `OutputProps` to be typed separately in generated `Load` ([#4305](https://github.com/sveltejs/kit/pull/4305))
- allow `Output` to be typed in generated `RequestHandler` ([#4305](https://github.com/sveltejs/kit/pull/4305))
- breaking: require adapters to supply a getClientAddress function ([#4289](https://github.com/sveltejs/kit/pull/4289))
- Allow page endpoint without GET handler ([#4318](https://github.com/sveltejs/kit/pull/4318))
- Return 404 when fetching missing data during prerender ([#4324](https://github.com/sveltejs/kit/pull/4324))
- expose client IP address as event.clientAddress ([#4289](https://github.com/sveltejs/kit/pull/4289))

## 1.0.0-next.296

### Patch Changes

- Allow adapter.adapt to be synchronous ([#4299](https://github.com/sveltejs/kit/pull/4299))
- Make `manifest.mimeTypes` part of the public API ([#4302](https://github.com/sveltejs/kit/pull/4302))
- load hooks after server initialisation, to ensure `prerendering` is correct ([#4322](https://github.com/sveltejs/kit/pull/4322))

## 1.0.0-next.295

### Patch Changes

- fix error message for invalid request object ([#4277](https://github.com/sveltejs/kit/pull/4277))
- Handle explicit redirects from endpoints ([#4260](https://github.com/sveltejs/kit/pull/4260))
- Allow routes with the same name as fallback components ([#4284](https://github.com/sveltejs/kit/pull/4284))

## 1.0.0-next.294

### Patch Changes

- breaking: Replace timestamp in \$service-worker with version ([#4213](https://github.com/sveltejs/kit/pull/4213))
- Remove declared `$lib` module ([#4227](https://github.com/sveltejs/kit/pull/4227))

## 1.0.0-next.293

### Patch Changes

- Expose Server and SSRManifest as public types ([#4220](https://github.com/sveltejs/kit/pull/4220))
- fetch `version.json` relative to `paths.assets`, if set ([#4234](https://github.com/sveltejs/kit/pull/4234))

## 1.0.0-next.292

### Patch Changes

- Prevent Vite from copying static assets if directory is called "public" ([#4214](https://github.com/sveltejs/kit/pull/4214))
- Add sync CLI command ([#4182](https://github.com/sveltejs/kit/pull/4182))
- breaking: expose entire config to adapters, rather than just appDir and trailingSlash ([#4192](https://github.com/sveltejs/kit/pull/4192))
- breaking: replace builder.prerender() with builder.writePrerendered() and builder.prerendered ([#4192](https://github.com/sveltejs/kit/pull/4192))
- breaking: prerender pages during build, regardless of adapter ([#4192](https://github.com/sveltejs/kit/pull/4192))
- Add config.kit.prerender.default option ([#4192](https://github.com/sveltejs/kit/pull/4192))
- Ensure props are loaded from matching endpoint during client-side navigation ([#4203](https://github.com/sveltejs/kit/pull/4203))
- Use prerendered pages in svelte-kit preview ([#4192](https://github.com/sveltejs/kit/pull/4192))
- Upgrade to TypeScript 4.6 ([#4190](https://github.com/sveltejs/kit/pull/4190))
- Fix `svelte-kit preview` ([#4207](https://github.com/sveltejs/kit/pull/4207))
- Make prerendered paths available to service workers ([#4192](https://github.com/sveltejs/kit/pull/4192))
- Update history immediately before updating DOM ([#4191](https://github.com/sveltejs/kit/pull/4191))
- Add config.kit.endpointExtensions option ([#4197](https://github.com/sveltejs/kit/pull/4197))

## 1.0.0-next.291

### Patch Changes

- Focus on `body` instead of `html` on navigation due to issues on Firefox ([#4184](https://github.com/sveltejs/kit/pull/4184))

## 1.0.0-next.290

### Patch Changes

- Add config.kit.outDir ([#4176](https://github.com/sveltejs/kit/pull/4176))
- breaking: allow `InputProps` and `OutputProps` to be typed separately in `Load` ([#4160](https://github.com/sveltejs/kit/pull/4160))

## 1.0.0-next.289

### Patch Changes

- Only fall back to full page reload if pathname has changed ([#4116](https://github.com/sveltejs/kit/pull/4116))
- Generate types for each page/endpoint ([#4120](https://github.com/sveltejs/kit/pull/4120))
- Extend user tsconfig from generated .svelte-kit/tsconfig.json ([#4118](https://github.com/sveltejs/kit/pull/4118))

## 1.0.0-next.288

### Patch Changes

- Fix XSS vulnerability on SSR pages with fetched data on `load()` ([#4128](https://github.com/sveltejs/kit/pull/4128))
- breaking: `tabindex="-1"` is no longer added to `<body>`; `<html>` only briefly receives it during navigation ([#4140](https://github.com/sveltejs/kit/pull/4140))
- `RequestHandlerOutput` accepts body when it has or maybe is `undefined` ([#4152](https://github.com/sveltejs/kit/pull/4152))

## 1.0.0-next.287

### Patch Changes

- breaking: Rename `__fetch_polyfill` to `installFetch`, remove fetch exports ([#4111](https://github.com/sveltejs/kit/pull/4111))

## 1.0.0-next.286

### Patch Changes

- Prevent double-fixing of error stack traces in dev mode ([#4041](https://github.com/sveltejs/kit/pull/4041))
- Expose Navigation type ([#4076](https://github.com/sveltejs/kit/pull/4076))
- add new `Page` type ([#4076](https://github.com/sveltejs/kit/pull/4076))
- breaking: separate public from private-but-documented types ([#4104](https://github.com/sveltejs/kit/pull/4104))

## 1.0.0-next.285

### Patch Changes

- breaking: referer header sent by fetch in load matches page's referer header, not the page itself ([#4070](https://github.com/sveltejs/kit/pull/4070))
- breaking: remove sveltekit:navigation-{start,end} events ([#4070](https://github.com/sveltejs/kit/pull/4070))
- breaking: defer pushState until navigation occurs ([#4070](https://github.com/sveltejs/kit/pull/4070))

## 1.0.0-next.284

### Patch Changes

- Disable meta http-equiv tags for static amp configuration ([#4073](https://github.com/sveltejs/kit/pull/4073))
- Ignore click event if url does not have origin (e.g. `mailto:`, `tel:`) ([#4072](https://github.com/sveltejs/kit/pull/4072))

## 1.0.0-next.283

### Patch Changes

- create `__data.json` for pathnames with trailing slashes, including `/` ([#4066](https://github.com/sveltejs/kit/pull/4066))

## 1.0.0-next.282

### Patch Changes

- fix: remove private methods to make Safari 14.1 work ([#4054](https://github.com/sveltejs/kit/pull/4054))

## 1.0.0-next.281

### Patch Changes

- Allow the `transformPage` resolve option to return a promise ([#4036](https://github.com/sveltejs/kit/pull/4036))

## 1.0.0-next.280

### Patch Changes

- breaking: rename `app.render` to `server.respond` ([#4034](https://github.com/sveltejs/kit/pull/4034))
- breaking: allow providing `Params` type argument for `RequestHandler` ([#3989](https://github.com/sveltejs/kit/pull/3989))

## 1.0.0-next.279

### Patch Changes

- Fix escaped html attributes ([#4015](https://github.com/sveltejs/kit/pull/4015))

## 1.0.0-next.278

### Patch Changes

- breaking: Crawl rel="external" links when prerendering ([#3826](https://github.com/sveltejs/kit/pull/3826))

## 1.0.0-next.277

### Patch Changes

- Fall back to full page reload if link href does not match route manifest ([#3969](https://github.com/sveltejs/kit/pull/3969))
- Update page store without rerunning load when hash changes ([#3975](https://github.com/sveltejs/kit/pull/3975))

## 1.0.0-next.276

### Patch Changes

- Track scroll position without scroll listener, and recover on reload ([#3938](https://github.com/sveltejs/kit/pull/3938))

## 1.0.0-next.275

### Patch Changes

- Invalidate shadow endpoint data when URL changes ([#3925](https://github.com/sveltejs/kit/pull/3925))

## 1.0.0-next.274

### Patch Changes

- Set `$page.url` to current URL in browser ([#3942](https://github.com/sveltejs/kit/pull/3942))

## 1.0.0-next.273

### Patch Changes

- Correctly identify readable node streams ([#3941](https://github.com/sveltejs/kit/pull/3941))
- remove 'Shadow' from error message ([#3943](https://github.com/sveltejs/kit/pull/3943))

## 1.0.0-next.272

### Patch Changes

- Make shadow endpoint `event.url` consistent between server and client navigation ([#3780](https://github.com/sveltejs/kit/pull/3780))
- Prevent duplicated history when navigating via hash link ([#3931](https://github.com/sveltejs/kit/pull/3931))

## 1.0.0-next.271

### Patch Changes

- Add `transformPage` option to `resolve` ([#3914](https://github.com/sveltejs/kit/pull/3914))

## 1.0.0-next.270

### Patch Changes

- handle HEAD requests in endpoints ([#3903](https://github.com/sveltejs/kit/pull/3903))
- Use shadow endpoint without defining a `get` endpoint ([#3816](https://github.com/sveltejs/kit/pull/3816))

## 1.0.0-next.269

### Patch Changes

- Ensure handleError hook is called for shadow endpoint errors ([#3879](https://github.com/sveltejs/kit/pull/3879))

## 1.0.0-next.268

### Patch Changes

- refactor: use one escape function for json in html script body instead of two slightly different ([#3804](https://github.com/sveltejs/kit/pull/3804))

## 1.0.0-next.267

### Patch Changes

- Set cookies when redirecting from shadow endpoint ([#3874](https://github.com/sveltejs/kit/pull/3874))

## 1.0.0-next.266

### Patch Changes

- fix casing of `.DS_Store` in the default config for `serviceWorker` ([#3823](https://github.com/sveltejs/kit/pull/3823))
- fix: avoid mutating response `Headers` ([#3829](https://github.com/sveltejs/kit/pull/3829))

## 1.0.0-next.265

### Patch Changes

- breaking: remove `createIndexFiles` option, derive from `trailingSlash` instead ([#3801](https://github.com/sveltejs/kit/pull/3801))
- Pass trailingSlash config to adapters ([#3820](https://github.com/sveltejs/kit/pull/3820))

## 1.0.0-next.264

### Patch Changes

- fix links pointing to multi-page docs ([#3815](https://github.com/sveltejs/kit/pull/3815))
- upgrade to TypeScript 4.5 ([#3809](https://github.com/sveltejs/kit/pull/3809))

## 1.0.0-next.263

### Patch Changes

- Handle numeric headers ([#3716](https://github.com/sveltejs/kit/pull/3716))
- fix: replace broken escaping with a working version ([#3798](https://github.com/sveltejs/kit/pull/3798))

## 1.0.0-next.262

### Patch Changes

- update to Vite 2.8 and esbuild 0.14 ([#3791](https://github.com/sveltejs/kit/pull/3791))

## 1.0.0-next.261

### Patch Changes

- Prevent full reload when router navigates and only removes hash ([#3757](https://github.com/sveltejs/kit/pull/3757))
- fixes shadow hydration escaping ([#3793](https://github.com/sveltejs/kit/pull/3793))
- fixes an error with fetching shadow endpoints if they are ending with '/' ([#3740](https://github.com/sveltejs/kit/pull/3740))

## 1.0.0-next.260

### Patch Changes

- Allow Response object to be returned without properties showing up in object constructor ([#3697](https://github.com/sveltejs/kit/pull/3697))
- Implement shadow endpoints ([#3679](https://github.com/sveltejs/kit/pull/3679))

## 1.0.0-next.259

### Patch Changes

- Prevent `Host` header from being incorrectly inherited by requests made from `load`'s `fetch` during SSR ([#3690](https://github.com/sveltejs/kit/pull/3690))

## 1.0.0-next.258

### Patch Changes

- Update \$app/stores page.stuff to use App.Stuff ([#3686](https://github.com/sveltejs/kit/pull/3686))

## 1.0.0-next.257

### Patch Changes

- Rename JSONString type to JSONValue ([#3683](https://github.com/sveltejs/kit/pull/3683))
- Add App namespace for app-level types ([#3670](https://github.com/sveltejs/kit/pull/3670))
- breaking: remove target option ([#3674](https://github.com/sveltejs/kit/pull/3674))

## 1.0.0-next.256

### Patch Changes

- fix regression in parsing HTML when crawling for pre-rendering ([#3677](https://github.com/sveltejs/kit/pull/3677))

## 1.0.0-next.255

### Patch Changes

- fix parsing during pre-render crawl when there are HTML attributes without a value ([#3668](https://github.com/sveltejs/kit/pull/3668))
- Correctly populate asset manifest when generating service worker ([#3673](https://github.com/sveltejs/kit/pull/3673))

## 1.0.0-next.254

### Patch Changes

- Add version config and expose updated store ([#3412](https://github.com/sveltejs/kit/pull/3412))
- fix: update types to match changes to Vite config handling ([#3662](https://github.com/sveltejs/kit/pull/3662))

## 1.0.0-next.253

### Patch Changes

- Allow config.kit.vite to be an async function ([#3565](https://github.com/sveltejs/kit/pull/3565))
- Include page request headers in server-side fetches ([#3631](https://github.com/sveltejs/kit/pull/3631))

## 1.0.0-next.252

### Patch Changes

- remove nonexistent `url` store from `$app/stores` ambient types ([#3640](https://github.com/sveltejs/kit/pull/3640))

## 1.0.0-next.251

### Patch Changes

- Handle non-compliant ReadableStream implementations ([#3624](https://github.com/sveltejs/kit/pull/3624))

## 1.0.0-next.250

### Patch Changes

- breaking: move `config.kit.hydrate` and `config.kit.router` to `config.kit.browser` ([#3578](https://github.com/sveltejs/kit/pull/3578))
- add `prerender.createIndexFiles` option ([#2632](https://github.com/sveltejs/kit/pull/2632))

## 1.0.0-next.249

### Patch Changes

- Include service worker in manifest ([#3570](https://github.com/sveltejs/kit/pull/3570))
- Add kit.routes config to customise public/private modules ([#3576](https://github.com/sveltejs/kit/pull/3576))

## 1.0.0-next.248

### Patch Changes

- Decode fetched resources before checking against manifest when prerendering ([#3571](https://github.com/sveltejs/kit/pull/3571))
- breaking: remove -H and (conflicting) -h shortcuts from CLI ([#3573](https://github.com/sveltejs/kit/pull/3573))

## 1.0.0-next.247

### Patch Changes

- fix handling an incoming request from HTTP/2 ([#3572](https://github.com/sveltejs/kit/pull/3572))

## 1.0.0-next.246

### Patch Changes

- `svelte-kit package` gives clearer error message when svelte2tsx and typescript are not installed ([#3562](https://github.com/sveltejs/kit/pull/3562))
- `svelte-kit package` errors when lib directory does not exist ([#3562](https://github.com/sveltejs/kit/pull/3562))
- chore: refactor AMP validation ([#3554](https://github.com/sveltejs/kit/pull/3554))

## 1.0.0-next.245

### Patch Changes

- Allow adapters to pass in `platform` object ([#3429](https://github.com/sveltejs/kit/pull/3429))
- favicon.ico is now requestable ([#3559](https://github.com/sveltejs/kit/pull/3559))

## 1.0.0-next.244

### Patch Changes

- fix: reading from same response body twice during prerender (#3473) ([#3521](https://github.com/sveltejs/kit/pull/3521))
- Add CSP support ([#3499](https://github.com/sveltejs/kit/pull/3499))
- chore: remove InternalHandle ([#3541](https://github.com/sveltejs/kit/pull/3541))
- Force Vite to use HTTP/1 in dev mode, so `dev --https` works again ([#3553](https://github.com/sveltejs/kit/pull/3553))

## 1.0.0-next.243

### Patch Changes

- fix: hydrate real HTTP requests ([#3547](https://github.com/sveltejs/kit/pull/3547))

## 1.0.0-next.242

### Patch Changes

- reinstate `EndpointOutput` generic ([#3537](https://github.com/sveltejs/kit/pull/3537))

## 1.0.0-next.241

### Patch Changes

- `svelte-kit package` only encodes text files ([#3522](https://github.com/sveltejs/kit/pull/3522))

## 1.0.0-next.240

### Patch Changes

- Error if handle hook returns something other than a Response ([#3496](https://github.com/sveltejs/kit/pull/3496))
- allow setting multiple set-cookie headers ([#3502](https://github.com/sveltejs/kit/pull/3502))
- fixed prerendering with base path configured ([#3500](https://github.com/sveltejs/kit/pull/3500))

## 1.0.0-next.239

### Patch Changes

- Insert <meta http-equiv> cache-control header when prerendering ([#3493](https://github.com/sveltejs/kit/pull/3493))

## 1.0.0-next.238

### Patch Changes

- Escape prerendered redirect locations, instead of encoding them ([#3456](https://github.com/sveltejs/kit/pull/3456))

## 1.0.0-next.237

### Patch Changes

- Type compilerOptions as CompileOptions instead of any ([#3486](https://github.com/sveltejs/kit/pull/3486))

## 1.0.0-next.236

### Patch Changes

- The redirect property returned from a module's load function must now be a properly encoded URI string value. ([#3404](https://github.com/sveltejs/kit/pull/3404))

## 1.0.0-next.235

### Patch Changes

- register service worker regardless of hydrate/router option ([#3435](https://github.com/sveltejs/kit/pull/3435))

## 1.0.0-next.234

### Patch Changes

- Allow endpoints to return a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response), or an object with [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) ([docs](https://svelte.dev/docs/kit/routing#endpoints), [#3384](https://github.com/sveltejs/kit/pull/3384))
- breaking: Expose standard [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) object to endpoints and hooks. `method`, `headers`, and `body` now accessed through `request` field ([docs](https://svelte.dev/docs/kit/routing#endpoints), [#3384](https://github.com/sveltejs/kit/pull/3384))
- breaking: change `app.render` signature to (request: Request) => Promise<Response> ([#3384](https://github.com/sveltejs/kit/pull/3384))
- breaking: move protocol/host configuration options from Kit to adapter-node ([#3384](https://github.com/sveltejs/kit/pull/3384))

## 1.0.0-next.233

### Patch Changes

- fix: refactor navigation singletons to avoid storing undefined reference ([#3374](https://github.com/sveltejs/kit/pull/3374))
- fix: add media="(max-width: 0)" to prevent stylesheets from downloading ([#3396](https://github.com/sveltejs/kit/pull/3396))

## 1.0.0-next.232

### Patch Changes

- Preserve explicit ETag header ([#3348](https://github.com/sveltejs/kit/pull/3348))
- fix: ignore hash links during prerendering (again) ([#3367](https://github.com/sveltejs/kit/pull/3367))

## 1.0.0-next.231

### Patch Changes

- Handle requests for /basepath ([#3345](https://github.com/sveltejs/kit/pull/3345))
- Allow \_\_fetch_polyfill() to run several times ([#3357](https://github.com/sveltejs/kit/pull/3357))
- Handle static assets with /basepath in svelte-kit dev ([#3346](https://github.com/sveltejs/kit/pull/3346))

## 1.0.0-next.230

### Patch Changes

- Log errors to stderr rather than stdout ([#3328](https://github.com/sveltejs/kit/pull/3328))

## 1.0.0-next.229

### Patch Changes

- The path to a service worker is now rebased to the app's base path ([#3319](https://github.com/sveltejs/kit/pull/3319))

## 1.0.0-next.228

### Patch Changes

- Throw on accessing url.search/searchParams from page store during prerendering ([#3314](https://github.com/sveltejs/kit/pull/3314))
- Preserve relevant headers when serving 304s ([#3313](https://github.com/sveltejs/kit/pull/3313))

## 1.0.0-next.227

### Patch Changes

- Adds beforeNavigate/afterNavigate lifecycle functions ([#3293](https://github.com/sveltejs/kit/pull/3293))

## 1.0.0-next.226

### Patch Changes

- Fix srcset parsing ([#3301](https://github.com/sveltejs/kit/pull/3301))
- Change ReadOnlyFormData behavior to mimic the spec's FormData interface ([#3302](https://github.com/sveltejs/kit/pull/3302))

## 1.0.0-next.225

### Patch Changes

- add inlineStyleThreshold option, below which stylesheets are inlined into the page ([#2620](https://github.com/sveltejs/kit/pull/2620))

## 1.0.0-next.224

### Patch Changes

- More robust crawling of prerendered pages ([#3288](https://github.com/sveltejs/kit/pull/3288))

## 1.0.0-next.223

### Patch Changes

- Add methodOverride option for submitting PUT/PATCH/DELETE/etc with <form> elements ([#2989](https://github.com/sveltejs/kit/pull/2989))

## 1.0.0-next.222

### Patch Changes

- Remove `config.kit.ssr` and `export const ssr` in favour of `ssr` parameter for `resolve` function in `handle` ([#2804](https://github.com/sveltejs/kit/pull/2804))

## 1.0.0-next.221

### Patch Changes

- Add returned stuff from pages into \$page store ([#3252](https://github.com/sveltejs/kit/pull/3252))
- Fallthrough is now explicit and layout components now also support fallthrough ([#3217](https://github.com/sveltejs/kit/pull/3217))

## 1.0.0-next.220

### Patch Changes

- url hash is now properly reflected in page store ([#3273](https://github.com/sveltejs/kit/pull/3273))
- Strip hash fragments from URLs during prerendering ([#3251](https://github.com/sveltejs/kit/pull/3251))
- Allow prefixes and suffixes around rest parameters ([#3240](https://github.com/sveltejs/kit/pull/3240))

## 1.0.0-next.219

### Patch Changes

- Render error page if error happens in handle hook ([#3239](https://github.com/sveltejs/kit/pull/3239))
- chore: update dependency sirv to v2 ([#3263](https://github.com/sveltejs/kit/pull/3263))

## 1.0.0-next.218

### Patch Changes

- Expose appDir to adapters ([#3222](https://github.com/sveltejs/kit/pull/3222))
- Replace %svelte.assets% with relative path ([#3234](https://github.com/sveltejs/kit/pull/3234))

## 1.0.0-next.217

### Patch Changes

- Improve error message when svelte.config.js is not found ([#3219](https://github.com/sveltejs/kit/pull/3219))
- Support more text content types ([#2781](https://github.com/sveltejs/kit/pull/2781))

## 1.0.0-next.216

### Patch Changes

- make html template optional for `svelte-kit package` ([#3161](https://github.com/sveltejs/kit/pull/3161))
- Allow multiple different headers returned from one endpoint ([#3201](https://github.com/sveltejs/kit/pull/3201))

## 1.0.0-next.215

### Patch Changes

- Fix hash change focus behaviour ([#3177](https://github.com/sveltejs/kit/pull/3177))

## 1.0.0-next.214

### Patch Changes

- breaking: Add `disableScrollHandling` function (see https://svelte.dev/docs/kit/modules#$app-navigation) ([#3182](https://github.com/sveltejs/kit/pull/3182))

## 1.0.0-next.213

### Patch Changes

- Don't register service worker if there is none ([#3170](https://github.com/sveltejs/kit/pull/3170))
- Fix url pathname for prerenders ([#3178](https://github.com/sveltejs/kit/pull/3178))

## 1.0.0-next.212

### Patch Changes

- Add status and error to page store ([#3096](https://github.com/sveltejs/kit/pull/3096))
- Fix dev prebundling scanner ([#3169](https://github.com/sveltejs/kit/pull/3169))
- Sort rest endpoints before pages ([#3168](https://github.com/sveltejs/kit/pull/3168))

## 1.0.0-next.211

### Patch Changes

- Use Vite's filewatcher in dev mode instead of creating a new one

## 1.0.0-next.210

### Patch Changes

- Add path/query error getters in prod mode ([#3151](https://github.com/sveltejs/kit/pull/3151))

## 1.0.0-next.209

### Patch Changes

- Bundle SSR renderer with app ([#3144](https://github.com/sveltejs/kit/pull/3144))

## 1.0.0-next.208

### Patch Changes

- Overhaul adapter API ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Replace config.kit.hostHeader with config.kit.headers.host, add config.kit.headers.protocol ([#2931](https://github.com/sveltejs/kit/pull/2931))
- Replace page.host with page.origin ([#2931](https://github.com/sveltejs/kit/pull/2931))
- fix: load CSS before JS preloads
- Error if adapter provides wrong input to app.render ([#3133](https://github.com/sveltejs/kit/pull/3133))
- Replace [request|page].[origin|path|query] with url object ([#3133](https://github.com/sveltejs/kit/pull/3133))

## 1.0.0-next.207

### Patch Changes

- Add serviceWorker.register option ([#2988](https://github.com/sveltejs/kit/pull/2988))

## 1.0.0-next.206

### Patch Changes

- Handle `Headers` instance in server-side `fetch` ([#3034](https://github.com/sveltejs/kit/pull/3034))

## 1.0.0-next.205

### Patch Changes

- Add `config.kit.prerender.concurrency` setting ([#3120](https://github.com/sveltejs/kit/pull/3120))

## 1.0.0-next.204

### Patch Changes

- fix `<Route> received an unexpected slot "default"` warning ([#3115](https://github.com/sveltejs/kit/pull/3115))

## 1.0.0-next.203

### Patch Changes

- Update vite-plugin-svelte to 1.0.0-next.32 ([#3048](https://github.com/sveltejs/kit/pull/3048))
- fix `sveltekit:prefetch` mouse detection ([#2995](https://github.com/sveltejs/kit/pull/2995))
- Sort rest routes alphabetically ([#3093](https://github.com/sveltejs/kit/pull/3093))
- Fix invalid amp-install-serviceworker ([#3075](https://github.com/sveltejs/kit/pull/3075))

## 1.0.0-next.202

### Patch Changes

- fix: upgrade to Vite 2.7 ([#3018](https://github.com/sveltejs/kit/pull/3018))
- Allow absolute file paths given to package.dir ([#3012](https://github.com/sveltejs/kit/pull/3012))
- update to esbuild 0.13.15 and other dependency updates ([#2957](https://github.com/sveltejs/kit/pull/2957))

## 1.0.0-next.201

### Patch Changes

- Ignore mailto: and tel: links ([#2915](https://github.com/sveltejs/kit/pull/2915))

## 1.0.0-next.200

### Patch Changes

- Follow redirects when prerendering ([#2832](https://github.com/sveltejs/kit/pull/2832))
- Fix types reference in exports in package.json ([#2896](https://github.com/sveltejs/kit/pull/2896))

## 1.0.0-next.199

### Patch Changes

- fix: support etag W/ prefix ([#2709](https://github.com/sveltejs/kit/pull/2709))
- fix: revert #2819 and add code comment ([#2883](https://github.com/sveltejs/kit/pull/2883))
- Don't create empty dirs when packaging ([#2831](https://github.com/sveltejs/kit/pull/2831))
- feat: Use `event.composedPath` to find anchors for prefetching and routing ([#2769](https://github.com/sveltejs/kit/pull/2769))

## 1.0.0-next.198

### Patch Changes

- Register custom service worker for AMP ([#2265](https://github.com/sveltejs/kit/pull/2265))

## 1.0.0-next.197

### Patch Changes

- fix: prevent text unselection for keepfocus ([#2857](https://github.com/sveltejs/kit/pull/2857))
- fix: use defaults when no opts passed to router ([#2819](https://github.com/sveltejs/kit/pull/2819))

## 1.0.0-next.196

### Patch Changes

- remove all selection before navigating to the next page ([#2755](https://github.com/sveltejs/kit/pull/2755))
- fix: properly scroll if body has margin ([#2761](https://github.com/sveltejs/kit/pull/2761))

## 1.0.0-next.195

### Patch Changes

- fix: increase scroll debounce timeout ([#2749](https://github.com/sveltejs/kit/pull/2749))
- fix: do not set inlineDynamicImports ([#2753](https://github.com/sveltejs/kit/pull/2753))

## 1.0.0-next.194

### Patch Changes

- fix: correct message when serving with strict:false ([#2726](https://github.com/sveltejs/kit/pull/2726))
- fix: reset scroll when navigated from scrolled page ([#2735](https://github.com/sveltejs/kit/pull/2735))

## 1.0.0-next.193

### Patch Changes

- fix: upgrade minor deps. fetch-blob 3.1.3 needed for Netlify deploys ([#2714](https://github.com/sveltejs/kit/pull/2714))
- fix: scroll to elements provided via URL hash ([#2668](https://github.com/sveltejs/kit/pull/2668))

## 1.0.0-next.192

### Patch Changes

- fix: allow overriding inlineDynamicImports ([#2702](https://github.com/sveltejs/kit/pull/2702))

## 1.0.0-next.191

### Patch Changes

- Return the copied files from the adapter's copy\_ utils. ([#2674](https://github.com/sveltejs/kit/pull/2674))
- fix: avoid infinite loop if no routes found ([#2614](https://github.com/sveltejs/kit/pull/2614))
- security: upgrade to Vite 2.6.12, specify allow list, and print warning ([#2691](https://github.com/sveltejs/kit/pull/2691))

## 1.0.0-next.190

### Patch Changes

- fix: upgrade to Vite 2.6.11 ([#2683](https://github.com/sveltejs/kit/pull/2683))
- Return an array of written files when prerendering. ([#2675](https://github.com/sveltejs/kit/pull/2675))

## 1.0.0-next.189

### Patch Changes

- breaking: only route pages on the client-side ([#2656](https://github.com/sveltejs/kit/pull/2656))

## 1.0.0-next.188

### Patch Changes

- fix: fire navigation-end event only at end of navigation ([#2649](https://github.com/sveltejs/kit/pull/2649))
- fix: allow passing certificates via config ([#2622](https://github.com/sveltejs/kit/pull/2622))

## 1.0.0-next.187

### Patch Changes

- Fix prerendering when paths.base but not paths.assets is specified ([#2643](https://github.com/sveltejs/kit/pull/2643))

## 1.0.0-next.186

### Patch Changes

- chore: upgrade to Vite 2.6.10 ([#2634](https://github.com/sveltejs/kit/pull/2634))

## 1.0.0-next.185

### Patch Changes

- Update vite-plugin-svelte to 1.0.0-next.30 ([#2626](https://github.com/sveltejs/kit/pull/2626))
- fix: allow users to override build target ([#2618](https://github.com/sveltejs/kit/pull/2618))

## 1.0.0-next.184

### Patch Changes

- breaking: drop Node 12 support ([#2604](https://github.com/sveltejs/kit/pull/2604))

## 1.0.0-next.183

### Patch Changes

- fix XSS vulnerability in `page.path` and `page.params` during SSR ([#2597](https://github.com/sveltejs/kit/pull/2597))

## 1.0.0-next.182

### Patch Changes

- fix: fixes for firing of hashchange event ([#2591](https://github.com/sveltejs/kit/pull/2591))

## 1.0.0-next.181

### Patch Changes

- fix: improve type of `init` ([#2544](https://github.com/sveltejs/kit/pull/2544))
- update dependencies ([#2574](https://github.com/sveltejs/kit/pull/2574))
- fix: implement support for hashchange event ([#2590](https://github.com/sveltejs/kit/pull/2590))
- chore: upgrade to Vite 2.6.7 ([#2586](https://github.com/sveltejs/kit/pull/2586))

## 1.0.0-next.180

### Patch Changes

- fix: don't expose prerender options ([#2543](https://github.com/sveltejs/kit/pull/2543))
- chore: upgrade to Vite 2.6.3" ([#2557](https://github.com/sveltejs/kit/pull/2557))
- upgrade commonjs plugin for better ignoreTryCatch default ([#2539](https://github.com/sveltejs/kit/pull/2539))

## 1.0.0-next.179

### Patch Changes

- Fix escaping of URLs of endpoint responses serialized into SSR response ([#2534](https://github.com/sveltejs/kit/pull/2534))

## 1.0.0-next.178

### Patch Changes

- fix: restore functioning of --host CLI flag with no arg ([#2525](https://github.com/sveltejs/kit/pull/2525))

## 1.0.0-next.177

### Patch Changes

- update to vite 2.6.0 and esbuild 0.13 ([#2522](https://github.com/sveltejs/kit/pull/2522))
- fix browser-only redirect during load. ([#2462](https://github.com/sveltejs/kit/pull/2462))

## 1.0.0-next.176

### Patch Changes

- feat: allow using Vite's `strict.port: false` option ([#2507](https://github.com/sveltejs/kit/pull/2507))
- fix: allow passing in https certs again' ([#2512](https://github.com/sveltejs/kit/pull/2512))

## 1.0.0-next.175

### Patch Changes

- chore: upgrade node-fetch to 3.0.0 final ([#2422](https://github.com/sveltejs/kit/pull/2422))
- fix: don't override application focus and scroll ([#2489](https://github.com/sveltejs/kit/pull/2489))

## 1.0.0-next.174

### Patch Changes

- Fix script and style tags without attributes crashing svelte-kit package ([#2492](https://github.com/sveltejs/kit/pull/2492))

## 1.0.0-next.173

### Patch Changes

- Exports and files property in config.kit.package now accepts a function rather than an object ([#2430](https://github.com/sveltejs/kit/pull/2430))
- Renamed property exclude to files in config.kit.serviceWorker and now accepts a function instead ([#2430](https://github.com/sveltejs/kit/pull/2430))
- Remove lang tag when packaging ([#2486](https://github.com/sveltejs/kit/pull/2486))

## 1.0.0-next.172

### Patch Changes

- chore: upgrade to Svelte 3.43.0" ([#2474](https://github.com/sveltejs/kit/pull/2474))
- breaking: rename the `context` parameter of the load function to `stuff` ([#2439](https://github.com/sveltejs/kit/pull/2439))

## 1.0.0-next.171

### Patch Changes

- Fix preview when `kit.paths.base` is set. ([#2409](https://github.com/sveltejs/kit/pull/2409))
- Resolve \$lib alias when packaging ([#2453](https://github.com/sveltejs/kit/pull/2453))

## 1.0.0-next.170

### Patch Changes

- Fix prerendering/adapter-static failing when `kit.paths.base` was set. ([#2407](https://github.com/sveltejs/kit/pull/2407))

## 1.0.0-next.169

### Patch Changes

- Add "svelte" field to package.json when running package command ([#2431](https://github.com/sveltejs/kit/pull/2431))
- fix: revert #2354 and fix double character decoding a different way ([#2435](https://github.com/sveltejs/kit/pull/2435))
- feat: use the Vite server options in dev mode ([#2232](https://github.com/sveltejs/kit/pull/2232))
- update dependencies ([#2447](https://github.com/sveltejs/kit/pull/2447))

## 1.0.0-next.168

### Patch Changes

- fix: encodeURI during prerender ([#2427](https://github.com/sveltejs/kit/pull/2427))
- chore: add links to repository and homepage to package.json ([#2425](https://github.com/sveltejs/kit/pull/2425))

## 1.0.0-next.167

### Patch Changes

- Update vite-plugin-svelte to 1.0.0-next.24 ([#2423](https://github.com/sveltejs/kit/pull/2423))
- Add a generic argument to allow typing Body from hooks ([#2413](https://github.com/sveltejs/kit/pull/2413))

## 1.0.0-next.166

### Patch Changes

- chore: upgrade Vite to 2.5.7
- fix: deeply-nested error components render with correct layout ([#2389](https://github.com/sveltejs/kit/pull/2389))
- Update vite-plugin-svelte to 1.0.0-next.23 ([#2402](https://github.com/sveltejs/kit/pull/2402))
- fix: pass along set-cookie headers during SSR ([#2362](https://github.com/sveltejs/kit/pull/2362))

## 1.0.0-next.165

### Patch Changes

- chore: upgrade Vite
- breaking: rename prerender.pages config option to prerender.entries ([#2380](https://github.com/sveltejs/kit/pull/2380))
- fix: anchor tag inside svg ([#2286](https://github.com/sveltejs/kit/pull/2286))

## 1.0.0-next.164

### Patch Changes

- fix: error components render with correct layout client-side as well as server-side ([#2378](https://github.com/sveltejs/kit/pull/2378))
- refactor `import.meta.env` usage in `$app/stores.js` to use `$app/env.js` to DRY code and make mocking easier ([#2353](https://github.com/sveltejs/kit/pull/2353))
- Trim `.js` extensions in package exports field ([#2345](https://github.com/sveltejs/kit/pull/2345))

## 1.0.0-next.163

### Patch Changes

- Update vite-plugin-svelte to 1.0.0-next.22 ([#2370](https://github.com/sveltejs/kit/pull/2370))
- fix: load function should not leak props to other components ([#2356](https://github.com/sveltejs/kit/pull/2356))
- packaging merge exports field by default ([#2327](https://github.com/sveltejs/kit/pull/2327))
- fix: don't decode URL when finding matching route ([#2354](https://github.com/sveltejs/kit/pull/2354))

## 1.0.0-next.162

### Patch Changes

- Enable nested dependency optimization by updating to @sveltejs/vite-plugin-svelte@1.0.0-next.21 ([#2343](https://github.com/sveltejs/kit/pull/2343))

## 1.0.0-next.161

### Patch Changes

- Allow service workers to access files using the \$lib alias ([#2326](https://github.com/sveltejs/kit/pull/2326))
- fix: remove Vite workaround now that dev deps can be bundled ([#2340](https://github.com/sveltejs/kit/pull/2340))
- support using arrays for kit.vite.resolve.alias ([#2328](https://github.com/sveltejs/kit/pull/2328))

## 1.0.0-next.160

### Patch Changes

- fix: upgrade to Vite 2.5.2 to fix URL decoding ([#2323](https://github.com/sveltejs/kit/pull/2323))
- Add `@sveltejs/kit` to `noExternal` in dev server as well ([#2332](https://github.com/sveltejs/kit/pull/2332))

## 1.0.0-next.159

### Patch Changes

- Add `@sveltejs/kit` to noExternal to resolve hooks module in dev server ([#2306](https://github.com/sveltejs/kit/pull/2306))
- fix: HMR on Windows ([#2315](https://github.com/sveltejs/kit/pull/2315))

## 1.0.0-next.158

### Patch Changes

- avoid setting rawBody/body to an empty Uint8Array when a load's fetch function is called with no body during SSR ([#2295](https://github.com/sveltejs/kit/pull/2295))

## 1.0.0-next.157

### Patch Changes

- chore: separate RequestHeaders and ResponseHeaders types ([#2248](https://github.com/sveltejs/kit/pull/2248))
- fix: don't de-indent user-rendered HTML ([#2292](https://github.com/sveltejs/kit/pull/2292))

## 1.0.0-next.156

### Patch Changes

- allow any top-level keys in svelte config ([#2267](https://github.com/sveltejs/kit/pull/2267))
- Exclude emitted declarations on packaging ([#2247](https://github.com/sveltejs/kit/pull/2247))

## 1.0.0-next.155

### Patch Changes

- chore: export App types ([#2259](https://github.com/sveltejs/kit/pull/2259))

## 1.0.0-next.154

### Patch Changes

- Upgrade to Vite 2.5.0 ([#2231](https://github.com/sveltejs/kit/pull/2231))

## 1.0.0-next.153

### Patch Changes

- rename serverFetch to externalFetch ([#2110](https://github.com/sveltejs/kit/pull/2110))

## 1.0.0-next.152

### Patch Changes

- Check ports usage in a more cross-platform way in dev server error logging ([#2209](https://github.com/sveltejs/kit/pull/2209))
- Ensure the raw body is an Uint8Array before passing it to request handlers ([#2215](https://github.com/sveltejs/kit/pull/2215))

## 1.0.0-next.151

### Patch Changes

- fix new route discovery in dev server ([#2198](https://github.com/sveltejs/kit/pull/2198))

## 1.0.0-next.150

### Patch Changes

- fix: match route against decoded path on client ([#2206](https://github.com/sveltejs/kit/pull/2206))

## 1.0.0-next.149

### Patch Changes

- export `HandleError` type ([#2200](https://github.com/sveltejs/kit/pull/2200))
- fix: match regex against route only once ([#2203](https://github.com/sveltejs/kit/pull/2203))

## 1.0.0-next.148

### Patch Changes

- update svelte peerDependency to 3.39.0 ([#2182](https://github.com/sveltejs/kit/pull/2182))
- Add hook to handle errors ([#2193](https://github.com/sveltejs/kit/pull/2193))
- Use /\_svelte_kit_assets when serving apps with specified paths.assets locally ([#2189](https://github.com/sveltejs/kit/pull/2189))
- Serve from basepath in svelte-kit dev/preview ([#2189](https://github.com/sveltejs/kit/pull/2189))
- Disallow non-absolute paths.assets option ([#2189](https://github.com/sveltejs/kit/pull/2189))
- Allow `EndpointOutput` response body objects to have a `toJSON` property ([#2170](https://github.com/sveltejs/kit/pull/2170))

## 1.0.0-next.147

### Patch Changes

- fix: handle paths consistently between dev and various production adapters ([#2171](https://github.com/sveltejs/kit/pull/2171))
- Replace function properties by methods on type declarations ([#2158](https://github.com/sveltejs/kit/pull/2158))
- fix: fallback should still be generated when prerender is disabled ([#2128](https://github.com/sveltejs/kit/pull/2128))
- update vite-plugin-svelte to 1.0.0-next.16 ([#2179](https://github.com/sveltejs/kit/pull/2179))
- Set optimizeDeps.entries to [] when building service worker ([#2180](https://github.com/sveltejs/kit/pull/2180))

## 1.0.0-next.146

### Patch Changes

- fix: enable Vite pre-bundling except for Svelte packages ([#2137](https://github.com/sveltejs/kit/pull/2137))

## 1.0.0-next.145

### Patch Changes

- feat: detect if app tries to access query with prerender enabled ([#2104](https://github.com/sveltejs/kit/pull/2104))

## 1.0.0-next.144

### Patch Changes

- 241dd623: fix: point at true dev entry point

## 1.0.0-next.143

### Patch Changes

- 8c0ffb8f: fix: provide explicit JS entry point for Vite dev mode ([#2134](https://github.com/sveltejs/kit/pull/2134))
- c3c25ee0: fix: take into account page-level options on error pages ([#2117](https://github.com/sveltejs/kit/pull/2117))

## 1.0.0-next.142

### Patch Changes

- aed1bd07: fix: fully initialize router before rendering ([#2089](https://github.com/sveltejs/kit/pull/2089))
- 970bb04c: restore reverted config changes ([#2093](https://github.com/sveltejs/kit/pull/2093))

## 1.0.0-next.141

### Patch Changes

- d109a394: fix: successfully load nested error pages ([#2076](https://github.com/sveltejs/kit/pull/2076))
- fab67c94: fix: successfully handle client errors ([#2077](https://github.com/sveltejs/kit/pull/2077))
- 943f5288: fix: solve regression parsing unicode URLs ([#2078](https://github.com/sveltejs/kit/pull/2078))
- 4435a659: fix: allow endpoint shadowing to work ([#2074](https://github.com/sveltejs/kit/pull/2074))
- ee73a265: fix: correctly do fallthrough in simple case ([#2072](https://github.com/sveltejs/kit/pull/2072))

## 1.0.0-next.140

### Patch Changes

- e55bc44a: fix: revert change to rendering options ([#2008](https://github.com/sveltejs/kit/pull/2008))
- d81de603: revert adapters automatically updating .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))
- 5911b1c7: fix: consider protocol-relative URLs as external ([#2062](https://github.com/sveltejs/kit/pull/2062))

## 1.0.0-next.139

### Patch Changes

- 883d4b85: Add public API to let adapters update .gitignore ([#1924](https://github.com/sveltejs/kit/pull/1924))
- 8cbe3b05: Change `force` to `onError` in prerender config options ([#2030](https://github.com/sveltejs/kit/pull/2030))
- 1b18a844: Don't check external links on prerender ([#1679](https://github.com/sveltejs/kit/pull/1679))
- 7645399a: fix: correctly pass Vite options in preview mode ([#2036](https://github.com/sveltejs/kit/pull/2036))

## 1.0.0-next.138

### Patch Changes

- d6563169: chore: prefer interfaces to types ([#2010](https://github.com/sveltejs/kit/pull/2010))
- b18a45c1: explicitly set compilerOptions.hydratable to config.kit.hydrate ([#2024](https://github.com/sveltejs/kit/pull/2024))
- 538de3eb- feat: More powerful and configurable rendering options ([#2008](https://github.com/sveltejs/kit/pull/2008))
- 20dad18a: Remove the `prerender.force` option in favor of `prerender.onError` ([#2007](https://github.com/sveltejs/kit/pull/2007))

## 1.0.0-next.137

### Patch Changes

- bce1d76a: chore: improved typing for runtime and tests ([#1995](https://github.com/sveltejs/kit/pull/1995))
- 2a1e9795: chore: enable TypeScript strict mode ([#1998](https://github.com/sveltejs/kit/pull/1998))

## 1.0.0-next.136

### Patch Changes

- 69b92ec1: chore: improved typing on core library ([#1993](https://github.com/sveltejs/kit/pull/1993))

## 1.0.0-next.135

### Patch Changes

- 3b293f2a: update svelte to 3.40 and vite-plugin-svelte to 1.0.0-next.14 ([#1992](https://github.com/sveltejs/kit/pull/1992))
- 34b923d1: chore: stricter TypeScript checking ([#1989](https://github.com/sveltejs/kit/pull/1989))

## 1.0.0-next.134

### Patch Changes

- e1e5920a: fix: correctly find links during prerendering ([#1984](https://github.com/sveltejs/kit/pull/1984))
- c7db715e: Handle errors with incorrect type ([#1983](https://github.com/sveltejs/kit/pull/1983))

## 1.0.0-next.133

### Patch Changes

- 68190496: chore: Vite to ^2.4.3, vite-plugin-svelte to ^1.0.0-next.13 ([#1969](https://github.com/sveltejs/kit/pull/1969))
- 0cbcd7c3: fix: correctly detect external fetches ([#1980](https://github.com/sveltejs/kit/pull/1980))
- 51ec789f: Scrolling to an anchor via a hash now supports `scroll-*` CSS properties ([#1972](https://github.com/sveltejs/kit/pull/1972))

## 1.0.0-next.132

### Patch Changes

- 7b440b2b: Fix URL resolution for server-side fetch ([#1953](https://github.com/sveltejs/kit/pull/1953))

## 1.0.0-next.131

### Patch Changes

- 0bc1b309: Minor optimization in parse_body ([#1916](https://github.com/sveltejs/kit/pull/1916))

## 1.0.0-next.130

### Patch Changes

- 53e9285d: feat(config): Friendlier error messages for common errors ([#1910](https://github.com/sveltejs/kit/pull/1910))
- 41da1ebe: Handle 4xx and 5xx statuses without requiring `Error` instance ([#1811](https://github.com/sveltejs/kit/pull/1811))
- 073fc3b5: feat(cli): respect NODE_ENV when set by user ([#1915](https://github.com/sveltejs/kit/pull/1915))

## 1.0.0-next.129

### Patch Changes

- e246455: Passthrough server-side fetch cookies for most same-origin scenarios ([#1847](https://github.com/sveltejs/kit/pull/1847))

## 1.0.0-next.128

### Patch Changes

- 27e9067: Better error messages when something goes wrong while emitting types ([#1903](https://github.com/sveltejs/kit/pull/1903))
- 277029d: Change index.js exports to directory exports when packaging ([#1905](https://github.com/sveltejs/kit/pull/1905))

## 1.0.0-next.127

### Patch Changes

- bb3ae21: Fix endpoint validation to allow returning string for all content types ([#1900](https://github.com/sveltejs/kit/pull/1900))

## 1.0.0-next.126

### Patch Changes

- 4720b67: Default body parsing to binary ([#1890](https://github.com/sveltejs/kit/pull/1890))
- 6da07b8: fix returning null from endpoints ([#1886](https://github.com/sveltejs/kit/pull/1886))

## 1.0.0-next.125

### Patch Changes

- 7faf52f: Update and consolidate checks for binary body types ([#1687](https://github.com/sveltejs/kit/pull/1687))
- f854b89: Replace return type of Buffer with Uint8Array ([#1876](https://github.com/sveltejs/kit/pull/1876))
- f854b89: Remove Incoming from public types ([#1876](https://github.com/sveltejs/kit/pull/1876))

## 1.0.0-next.124

### Patch Changes

- 34d2049: handle undefined body on endpoint output ([#1808](https://github.com/sveltejs/kit/pull/1808))
- c826016: add config.kit.package.emitTypes ([#1852](https://github.com/sveltejs/kit/pull/1852))
- 8854e2f: Bump vite-plugin-svelte to 1.0.0-next.12 ([#1869](https://github.com/sveltejs/kit/pull/1869))
- af1aa54: copy essential root files on `svelte-kit package` ([#1747](https://github.com/sveltejs/kit/pull/1747))
- 872840a: Pass along custom properties added to Error ([#1821](https://github.com/sveltejs/kit/pull/1821))
- 868f97a: Preserve README casing and package.json contents on svelte-kit package ([#1735](https://github.com/sveltejs/kit/pull/1735))

## 1.0.0-next.123

### Patch Changes

- 4b25615: Fix ReadOnlyFormData keys and values method implementation ([#1837](https://github.com/sveltejs/kit/pull/1837))
- 64f749d: ServiceWorker files exclusion support available through svelte.config.js ([#1645](https://github.com/sveltejs/kit/pull/1645))
- 4d2fec5: Enable Vite's server.fs.strict by default ([#1842](https://github.com/sveltejs/kit/pull/1842))
- 1ec368a: Expose Vite.js mode from \$app/env ([#1789](https://github.com/sveltejs/kit/pull/1789))

## 1.0.0-next.122

### Patch Changes

- d09a4e1: Surface Svelte compiler errors ([#1827](https://github.com/sveltejs/kit/pull/1827))
- 79b4fe2: Update Vite to ^2.4.1 ([#1834](https://github.com/sveltejs/kit/pull/1834))
- 2ac5781: Use esbuild inject API to insert shims ([#1822](https://github.com/sveltejs/kit/pull/1822))

## 1.0.0-next.121

### Patch Changes

- 939188e: Use UTF-8 encoding for JSON endpoint responses by default ([#1669](https://github.com/sveltejs/kit/pull/1669))
- 5b3e1e6: Add types generation to svelte-kit package command ([#1646](https://github.com/sveltejs/kit/pull/1646))
- 8affef2: Fix type errors inside ReadOnlyFormData that didn't allow it to be used inside for..of loops ([#1830](https://github.com/sveltejs/kit/pull/1830))

## 1.0.0-next.120

### Patch Changes

- 9fbaeda: fix attribute validation in generated script tag ([#1768](https://github.com/sveltejs/kit/pull/1768))
- 9f0c54a: Externalize app initialization to adapters ([#1804](https://github.com/sveltejs/kit/pull/1804))
- 0d69e55: Add generic type for session ([#1791](https://github.com/sveltejs/kit/pull/1791))
- 325c223: Improve RequestHandler and EndpointOutput type declarations. ([#1778](https://github.com/sveltejs/kit/pull/1778))
- 6ef148d: Generate service worker registration code even with `router` and `hydration` disabled ([#1724](https://github.com/sveltejs/kit/pull/1724))
- ae3ef19: Fail if config.kit.appDir starts or ends with a slash ([#1695](https://github.com/sveltejs/kit/pull/1695))

## 1.0.0-next.119

### Patch Changes

- 064f848: Implement serverFetch hook
- 882fb12: Add keepfocus option to goto

## 1.0.0-next.118

### Patch Changes

- 5418254: Fix regex for getting links to crawl during prerendering ([#1743](https://github.com/sveltejs/kit/pull/1743))

## 1.0.0-next.117

### Patch Changes

- 828732c: Specify actual Svelte version requirement ([#1751](https://github.com/sveltejs/kit/pull/1751))

## 1.0.0-next.116

### Patch Changes

- ea8cd54: chore(kit): correct `engines` constraint ([#1696](https://github.com/sveltejs/kit/pull/1696))
- aedec24: Ensure router is initialized before parsing location ([#1691](https://github.com/sveltejs/kit/pull/1691))
- c7d5ce4: update vite to 2.3.8 and unpin ([#1715](https://github.com/sveltejs/kit/pull/1715))
- d259bca: Stricter regex for getting element attributes during prerendering ([#1700](https://github.com/sveltejs/kit/pull/1700))

## 1.0.0-next.115

### Patch Changes

- 523c3e2: Allow vite.alias to be an array ([#1640](https://github.com/sveltejs/kit/pull/1640))
- 6fd46d1: \* update vite-plugin-svelte to 1.0.0-next.11 and use its named export ([#1673](https://github.com/sveltejs/kit/pull/1673))
  - update vite to 2.3.7
- dc56d3c: Fix navigation when `base` path is set and validate that option's value ([#1666](https://github.com/sveltejs/kit/pull/1666))

## 1.0.0-next.114

### Patch Changes

- 5aa64ab: fix: SSL for HMR websockets #844 ([#1517](https://github.com/sveltejs/kit/pull/1517))
- fae75f1: add optional state parameter for goto function ([#1643](https://github.com/sveltejs/kit/pull/1643))
- fbd5f8a: package command can now transpile TypeScript files ([#1633](https://github.com/sveltejs/kit/pull/1633))

## 1.0.0-next.113

### Patch Changes

- 045c45c: update vite to 2.3.6 ([#1625](https://github.com/sveltejs/kit/pull/1625))

## 1.0.0-next.112

### Patch Changes

- cbe029e: Allow non-lowercase 'content-type' header in ssr fetch requests ([#1463](https://github.com/sveltejs/kit/pull/1463))
- 1bf1a02: Make it possible to type context, page params and props for LoadInput and LoadOutput ([#1447](https://github.com/sveltejs/kit/pull/1447))

## 1.0.0-next.111

### Patch Changes

- eae1b1d: Rename handle's render parameter to resolve ([#1566](https://github.com/sveltejs/kit/pull/1566))

## 1.0.0-next.110

### Patch Changes

- 6372690: Add svelte-kit package command ([#1499](https://github.com/sveltejs/kit/pull/1499))
- c3d36a3: ensure `content-length` limit respected; handle `getRawBody` error(s) ([#1528](https://github.com/sveltejs/kit/pull/1528))
- bf77940: bump `polka` and `sirv` dependency versions ([#1548](https://github.com/sveltejs/kit/pull/1548))
- 2172469: Upgrade to Vite 2.3.4 ([#1580](https://github.com/sveltejs/kit/pull/1580))
- 028abd9: Pass validated svelte config to adapter adapt function ([#1559](https://github.com/sveltejs/kit/pull/1559))

## 1.0.0-next.109

### Patch Changes

- 261ee1c: Update compatible Node versions ([#1470](https://github.com/sveltejs/kit/pull/1470))
- ec156c6: let hash only changes be handled by router ([#830](https://github.com/sveltejs/kit/pull/830))
- 586785d: Allow passing HTTPS key pair in Vite section of config ([#1456](https://github.com/sveltejs/kit/pull/1456))

## 1.0.0-next.108

### Patch Changes

- dad93fc: Fix workspace dependencies ([#1434](https://github.com/sveltejs/kit/pull/1434))
- 37fc04f: Ignore URLs that the app does not own ([#1487](https://github.com/sveltejs/kit/pull/1487))

## 1.0.0-next.107

### Patch Changes

- ad83d40: update vite to ^2.3.1 ([#1429](https://github.com/sveltejs/kit/pull/1429))

## 1.0.0-next.106

### Patch Changes

- fe0531d: temporarily pin vite to version 2.2.4 until issues with 2.3.0 are resolved ([#1423](https://github.com/sveltejs/kit/pull/1423))

## 1.0.0-next.105

### Patch Changes

- f3c50a0: Bump Vite to 2.3.0 ([#1413](https://github.com/sveltejs/kit/pull/1413))
- cfd6c3c: Use rendered CSS for AMP pages ([#1408](https://github.com/sveltejs/kit/pull/1408))
- 9a2cc0a: Add trailingSlash: 'never' | 'always' | 'ignore' option ([#1404](https://github.com/sveltejs/kit/pull/1404))

## 1.0.0-next.104

### Patch Changes

- 9b448a6: Rename @sveltejs/kit/http to @sveltejs/kit/node ([#1391](https://github.com/sveltejs/kit/pull/1391))

## 1.0.0-next.103

### Patch Changes

- 11e7840: Generate ETags for binary response bodies ([#1382](https://github.com/sveltejs/kit/pull/1382))
- 11e7840: Update request/response body types ([#1382](https://github.com/sveltejs/kit/pull/1382))
- 9e20873: Allow ServerResponse to have non-static set of headers ([#1375](https://github.com/sveltejs/kit/pull/1375))
- 2562ca0: Account for POST bodies when serializing fetches ([#1385](https://github.com/sveltejs/kit/pull/1385))

## 1.0.0-next.102

### Patch Changes

- b5ff7f5: Rename \$layout to \_\_layout etc ([#1370](https://github.com/sveltejs/kit/pull/1370))
- d871213: Make Vite a prod dep of SvelteKit ([#1374](https://github.com/sveltejs/kit/pull/1374))

## 1.0.0-next.101

### Patch Changes

- f5e626d: Reference Vite/Svelte types inside Kit types ([#1319](https://github.com/sveltejs/kit/pull/1319))

## 1.0.0-next.100

### Patch Changes

- 9890492: Use TypedArray.set to copy from Uint8Array when getting raw body in core/http ([#1349](https://github.com/sveltejs/kit/pull/1349))

## 1.0.0-next.99

### Patch Changes

- 051c026: Remove getContext in favour of request.locals ([#1332](https://github.com/sveltejs/kit/pull/1332))

## 1.0.0-next.98

### Patch Changes

- d279e36: Add invalidate(url) API for rerunning load functions ([#1303](https://github.com/sveltejs/kit/pull/1303))

## 1.0.0-next.97

### Patch Changes

- 694f5de: Fixes `navigating` store type ([#1322](https://github.com/sveltejs/kit/pull/1322))
- 0befffb: Rename .svelte to .svelte-kit ([#1321](https://github.com/sveltejs/kit/pull/1321))
- c6fde99: Switch to ESM in config files ([#1323](https://github.com/sveltejs/kit/pull/1323))

## 1.0.0-next.96

### Patch Changes

- 63eff1a: Add prerendering to \$app/env typings ([#1316](https://github.com/sveltejs/kit/pull/1316))

## 1.0.0-next.95

### Patch Changes

- 16cca89: Export AdapterUtils type for use in adapters ([#1300](https://github.com/sveltejs/kit/pull/1300))
- f3ef93d: Not calling JSON.stringify on endpoint's body if it's a string and the content-type header denotes json ([#1272](https://github.com/sveltejs/kit/pull/1272))
- 5023e98: Remove 'Navigated to' text from announcer' ([#1305](https://github.com/sveltejs/kit/pull/1305))
- b4d0d6c: Normalize keys of headers from server side requests
- 08ebcb5: Add esm config support ([#936](https://github.com/sveltejs/kit/pull/936))
- 427e8e0: Validate template file on startup ([#1304](https://github.com/sveltejs/kit/pull/1304))

## 1.0.0-next.94

### Patch Changes

- 72c78a4: Handle URLs that need to be decoded ([#1273](https://github.com/sveltejs/kit/pull/1273))

## 1.0.0-next.93

### Patch Changes

- 353afa1: Disable FLoC by default ([#1267](https://github.com/sveltejs/kit/pull/1267))

## 1.0.0-next.92

### Patch Changes

- 354e384: Allow FormData to be passed as RequestHandler type Body argument ([#1256](https://github.com/sveltejs/kit/pull/1256))
- b1bfe83: Show error page on unknown initial path. Fixes #1190.

## 1.0.0-next.91

### Patch Changes

- 82955ec: fix: adapt to svelte ids without ?import in vite 2.2.3

## 1.0.0-next.90

### Patch Changes

- ac60208: Exit process after adapting ([#1212](https://github.com/sveltejs/kit/pull/1212))

## 1.0.0-next.89

### Patch Changes

- 927e63c: update the error message of prerender to optionally include the parent variable ([#1200](https://github.com/sveltejs/kit/pull/1200))

## 1.0.0-next.88

### Patch Changes

- 6f2b4a6: Remove references to npm start ([#1196](https://github.com/sveltejs/kit/pull/1196))

## 1.0.0-next.87

### Patch Changes

- 4131467: Prerender fallback page for SPAs ([#1181](https://github.com/sveltejs/kit/pull/1181))

## 1.0.0-next.86

### Patch Changes

- 2130087: Support multiple rel values on anchor tag ([#884](https://github.com/sveltejs/kit/pull/884))
- ba732ff: Report errors in hooks.js ([#1178](https://github.com/sveltejs/kit/pull/1178))
- a2f3f4b: Rename `start` to `preview` in the CLI and package scripts

## 1.0.0-next.85

### Patch Changes

- 4645ad5: Force Vite to bundle Svelte component libraries in SSR ([#1148](https://github.com/sveltejs/kit/pull/1148))
- abf0248: Fix \$service-worker types

## 1.0.0-next.84

### Patch Changes

- 5c2665f: Prevent ...rest parameters from swallowing earlier characters ([#1128](https://github.com/sveltejs/kit/pull/1128))
- 4e1c4ea: Omit modulepreload links from pages with no JS ([#1131](https://github.com/sveltejs/kit/pull/1131))
- 5d864a6: Fix RequestHandler return type
- e1313d0: Make response.body optional

## 1.0.0-next.83

### Patch Changes

- a4a1075: Work around apparent Cloudflare Workers platform bugs ([#1123](https://github.com/sveltejs/kit/pull/1123))

## 1.0.0-next.82

### Patch Changes

- 4af45e1: Remove usage of node built-ins from runtime ([#1117](https://github.com/sveltejs/kit/pull/1117))

## 1.0.0-next.81

### Patch Changes

- 1237eb3: Expose rawBody on request, and expect rawBody from adapters ([#1109](https://github.com/sveltejs/kit/pull/1109))
- 1237eb3: Expose getRawBody from kit/http ([#1109](https://github.com/sveltejs/kit/pull/1109))

## 1.0.0-next.80

### Patch Changes

- 7a4b351: Expose install-fetch subpackage for adapters to use ([#1091](https://github.com/sveltejs/kit/pull/1091))

## 1.0.0-next.79

### Patch Changes

- d3abd97: Fix Windows build output containing backward slashes ([#1096](https://github.com/sveltejs/kit/pull/1096))

## 1.0.0-next.78

### Patch Changes

- 6e27880: Move server-side fetch to adapters instead of build step ([#1066](https://github.com/sveltejs/kit/pull/1066))
- 61d7fa0: Better error logging ([#1062](https://github.com/sveltejs/kit/pull/1062))
- 041b706: Implement layout resets ([#1061](https://github.com/sveltejs/kit/pull/1061))
- 148819a: Use latest vite-plugin-svelte ([#1057](https://github.com/sveltejs/kit/pull/1057))
- 9d54eed: Make sveltekit:prefetch a noop if <a> has no href ([#1060](https://github.com/sveltejs/kit/pull/1060))

## 1.0.0-next.77

### Patch Changes

- fee388a: Include CSS for entry point/generated component ([#1053](https://github.com/sveltejs/kit/pull/1053))

## 1.0.0-next.76

### Patch Changes

- f870909: Pin vite-plugin-svelte version ([#1026](https://github.com/sveltejs/kit/pull/1026))
- de2466f: Fix stale prerendering bug ([#1040](https://github.com/sveltejs/kit/pull/1040))

## 1.0.0-next.75

### Patch Changes

- 0c02dc0: Use global URLSearchParams instead of import from node url ([#1020](https://github.com/sveltejs/kit/pull/1020))
- 8021d6b: Fix default error page ([#1021](https://github.com/sveltejs/kit/pull/1021))
- 11ec751: Fix build warnings about missing exports in hooks file ([#1003](https://github.com/sveltejs/kit/pull/1003))

## 1.0.0-next.74

### Patch Changes

- 4c45784: Add ambient types to published files ([#980](https://github.com/sveltejs/kit/pull/980))

## 1.0.0-next.73

### Patch Changes

- 1007f67: Allow non-root \$error.svelte components ([#901](https://github.com/sveltejs/kit/pull/901))
- ca108a6: Change `handle` hook from positional arguments to named arguments ([#959](https://github.com/sveltejs/kit/pull/959))

## 1.0.0-next.72

### Patch Changes

- 1d5228c: Make --open option work with --https ([#921](https://github.com/sveltejs/kit/pull/921))
- 39b6967: Add ambient type definitions for \$app imports ([#917](https://github.com/sveltejs/kit/pull/917))
- 1d5228c: Make --open option work on WSL ([#921](https://github.com/sveltejs/kit/pull/921))
- bb2d97d: Fix argument type for RequestHandler ([#914](https://github.com/sveltejs/kit/pull/914))

## 1.0.0-next.71

### Patch Changes

- 108c26c: Always return a response from render function in handle ([#847](https://github.com/sveltejs/kit/pull/847))

## 1.0.0-next.70

### Patch Changes

- 6d9f7b1: Only include CSS on an SSR'd page ([#839](https://github.com/sveltejs/kit/pull/839))
- 6ecfa2c: Remove duplicate &lt;style&gt; element ([#845](https://github.com/sveltejs/kit/pull/845))

## 1.0.0-next.69

### Patch Changes

- 4d2cd62: Add prerendering to \$app/env ([#833](https://github.com/sveltejs/kit/pull/833))
- e2eeeea: Call load when path changes if page.path is used ([#838](https://github.com/sveltejs/kit/pull/838))
- 50b5526: Pass through credentials when fetching in load ([#835](https://github.com/sveltejs/kit/pull/835))
- 6384af6: Only inline data if hydrate=true ([#837](https://github.com/sveltejs/kit/pull/837))

## 1.0.0-next.68

### Patch Changes

- 24fab19: Add --https flag to dev and start ([#462](https://github.com/sveltejs/kit/pull/462))
- ba4f9b7: Check port, only expose to network with --host flag ([#819](https://github.com/sveltejs/kit/pull/819))

## 1.0.0-next.67

### Patch Changes

- 679e997: Fix client-side redirect loop detection ([#811](https://github.com/sveltejs/kit/pull/811))
- 8d453c8: Specify minimum Node version number in @sveltejs/kit and add .npmrc to enforce it ([#787](https://github.com/sveltejs/kit/pull/787))
- 78aec0c: Detect service worker support
- f33a22c: Make ...rest parameters optional ([#768](https://github.com/sveltejs/kit/pull/768))

## 1.0.0-next.66

### Patch Changes

- d9ce2a2: Correct response type for fetch ([#799](https://github.com/sveltejs/kit/pull/799))

## 1.0.0-next.65

### Patch Changes

- c0b9873: Always apply layout props when hydrating ([#794](https://github.com/sveltejs/kit/pull/794))
- b8a8e53: Add type to config.kit.vite ([#786](https://github.com/sveltejs/kit/pull/786))
- 9b09bcc: Prevent XSS when serializing fetch results ([#769](https://github.com/sveltejs/kit/pull/769))

## 1.0.0-next.64

### Patch Changes

- 7f58512: Prevent Vite prebundling from crashing on startup ([#759](https://github.com/sveltejs/kit/pull/759))

## 1.0.0-next.63

### Patch Changes

- 31f94fe: Add ssr, router and hydrate options

## 1.0.0-next.62

### Patch Changes

- 864c3d4: Assets imported from css and js/ts files are emitted as files instead of being inlined ([#461](https://github.com/sveltejs/kit/pull/461))

## 1.0.0-next.61

### Patch Changes

- 4b2c97e: Initialise router with history.state

## 1.0.0-next.60

### Patch Changes

- 84e9023: Fix host property ([#657](https://github.com/sveltejs/kit/pull/657))
- 272148b: Rename \$service-worker::assets to files, per the docs ([#658](https://github.com/sveltejs/kit/pull/658))
- d5071c5: Hydrate initial page before starting router ([#654](https://github.com/sveltejs/kit/pull/654))
- 4a1c04a: More accurate MODULE_NOT_FOUND errors ([#665](https://github.com/sveltejs/kit/pull/665))
- d881b7e: Replace setup with hooks ([#670](https://github.com/sveltejs/kit/pull/670))

## 1.0.0-next.59

### Patch Changes

- 826f39e: Make prefetching work ([#620](https://github.com/sveltejs/kit/pull/620))

## 1.0.0-next.58

### Patch Changes

- 26893b0: Allow first argument to fetch in load to be a request ([#619](https://github.com/sveltejs/kit/pull/619))
- 924db15: Add copy function to Builder.js ([#630](https://github.com/sveltejs/kit/pull/630))

## 1.0.0-next.57

### Patch Changes

- 391189f: Check for options.initiator in correct place ([#615](https://github.com/sveltejs/kit/pull/615))

## 1.0.0-next.56

### Patch Changes

- 82cbe2b: Shrink client manifest ([#593](https://github.com/sveltejs/kit/pull/593))
- 8024178: remove @sveltejs/app-utils ([#600](https://github.com/sveltejs/kit/pull/600))

## 1.0.0-next.55

### Patch Changes

- d0a7019: switch to @sveltejs/vite-plugin-svelte ([#584](https://github.com/sveltejs/kit/pull/584))
- 8a88fad: Replace regex routes with fallthrough routes ([#583](https://github.com/sveltejs/kit/pull/583))

## 1.0.0-next.54

### Patch Changes

- 3037530: Create history entry for initial route ([#582](https://github.com/sveltejs/kit/pull/582))
- 04f17f5: Prevent erronous <style>undefined</style> ([#578](https://github.com/sveltejs/kit/pull/578))
- 8805c6d: Pass adapters directly to svelte.config.cjs ([#579](https://github.com/sveltejs/kit/pull/579))

## 1.0.0-next.53

### Patch Changes

- 9cf2f21: Only require page components to export prerender ([#577](https://github.com/sveltejs/kit/pull/577))
- e860de0: Invalidate page when query changes ([#575](https://github.com/sveltejs/kit/pull/575))
- 7bb1cf0: Disable vite-plugin-svelte transform cache ([#576](https://github.com/sveltejs/kit/pull/576))

## 1.0.0-next.52

### Patch Changes

- ac3669e: Move Vite config into svelte.config.cjs ([#569](https://github.com/sveltejs/kit/pull/569))

## 1.0.0-next.51

### Patch Changes

- 34a00f9: Bypass router on hydration ([#563](https://github.com/sveltejs/kit/pull/563))

## 1.0.0-next.50

### Patch Changes

- 0512fd1: Remove startGlobal option ([#559](https://github.com/sveltejs/kit/pull/559))
- 9212aa5: Add options to adapter-node, and add adapter types ([#531](https://github.com/sveltejs/kit/pull/531))
- 0512fd1: Fire custom events for start, and navigation start/end ([#559](https://github.com/sveltejs/kit/pull/559))

## 1.0.0-next.49

### Patch Changes

- ab28c0a: kit: include missing types.d.ts ([#538](https://github.com/sveltejs/kit/pull/538))
- c76c9bf: Upgrade Vite ([#544](https://github.com/sveltejs/kit/pull/544))

## 1.0.0-next.48

### Patch Changes

- e37a302: Make getSession future-proof ([#524](https://github.com/sveltejs/kit/pull/524))

## 1.0.0-next.47

### Patch Changes

- 5554acc: Add \$lib alias ([#511](https://github.com/sveltejs/kit/pull/511))
- 5cd6f11: bump vite-plugin-svelte to 0.11.0 ([#513](https://github.com/sveltejs/kit/pull/513))

## 1.0.0-next.46

### Patch Changes

- f35a5cd: Change adapter signature ([#505](https://github.com/sveltejs/kit/pull/505))

## 1.0.0-next.45

### Patch Changes

- 925638a: Remove endpoints from the files built for the client ([#490](https://github.com/sveltejs/kit/pull/490))
- c3cf3f3: Bump deps ([#492](https://github.com/sveltejs/kit/pull/492))
- 625747d: kit: bundle @sveltejs/kit into built application ([#486](https://github.com/sveltejs/kit/pull/486))
- Updated dependencies [c3cf3f3]
  - @sveltejs/vite-plugin-svelte@1.0.0-next.3

## 1.0.0-next.44

### Patch Changes

- e6449d2: Fix AMP styles for real ([#494](https://github.com/sveltejs/kit/pull/494))

## 1.0.0-next.43

### Patch Changes

- 672e9be: Fix AMP styles, again ([#491](https://github.com/sveltejs/kit/pull/491))

## 1.0.0-next.42

### Patch Changes

- 0f54ebc: Fix AMP styles ([#488](https://github.com/sveltejs/kit/pull/488))

## 1.0.0-next.41

### Patch Changes

- 4aa5a73: Future-proof prepare argument ([#471](https://github.com/sveltejs/kit/pull/471))
- 58dc400: Call correct set_paths function ([#487](https://github.com/sveltejs/kit/pull/487))
- 2322291: Update to node-fetch@3

## 1.0.0-next.40

### Patch Changes

- 4c5fd3c: Include layout/error styles in SSR ([#472](https://github.com/sveltejs/kit/pull/472))

## 1.0.0-next.39

### Patch Changes

- b7fdb0d: Skip pre-bundling ([#468](https://github.com/sveltejs/kit/pull/468))

## 1.0.0-next.38

### Patch Changes

- 15402b1: Add service worker support ([#463](https://github.com/sveltejs/kit/pull/463))
- 0c630b5: Ignore dynamically imported components when constructing styles in dev mode ([#443](https://github.com/sveltejs/kit/pull/443))
- ac06af5: Fix svelte-kit adapt for Windows ([#435](https://github.com/sveltejs/kit/pull/435))
- 061fa46: Implement improved redirect API
- b800049: Include type declarations ([#442](https://github.com/sveltejs/kit/pull/442))
- 07c6de4: Use posix paths in manifest even on Windows ([#436](https://github.com/sveltejs/kit/pull/436))
- 27ba872: Error if preload function exists ([#455](https://github.com/sveltejs/kit/pull/455))
- 0c630b5: Add default paths in case singletons module is invalidated ([#443](https://github.com/sveltejs/kit/pull/443))
- 73dd998: Allow custom extensions ([#411](https://github.com/sveltejs/kit/pull/411))

## 1.0.0-next.37

### Patch Changes

- 230c6d9: Indicate which request failed, if fetch fails inside load function ([#427](https://github.com/sveltejs/kit/pull/427))
- f1bc218: Run adapt via svelte-kit build ([#430](https://github.com/sveltejs/kit/pull/430))
- 6850ddc: Fix svelte-kit start for Windows ([#425](https://github.com/sveltejs/kit/pull/425))

## 1.0.0-next.36

### Patch Changes

- 7b70a33: Force version bump so that Kit uses updated vite-plugin-svelte ([#419](https://github.com/sveltejs/kit/pull/419))

## 1.0.0-next.35

### Patch Changes

- Use Vite
- Fix Windows issues
- Preserve load context during navigation
- Return error from load

## 1.0.0-next.34

### Patch Changes

- Fix adapters and convert to ES modules

## 1.0.0-next.33

### Patch Changes

- 474070e: Better errors when modules cannot be found ([#381](https://github.com/sveltejs/kit/pull/381))

## 1.0.0-next.32

### Patch Changes

- Convert everything to ESM

## 1.0.0-next.31

### Patch Changes

- b6c2434: app.js -> app.cjs ([#362](https://github.com/sveltejs/kit/pull/362))

## 1.0.0-next.30

### Patch Changes

- 00cbaf6: Rename `_.config.js` to `_.config.cjs` ([#356](https://github.com/sveltejs/kit/pull/356))

## 1.0.0-next.29

### Patch Changes

- 4c0edce: Use addEventListener instead of onload ([#347](https://github.com/sveltejs/kit/pull/347))

## 1.0.0-next.28

### Patch Changes

- 4353025: Prevent infinite loop when fetching bad URLs inside error responses ([#340](https://github.com/sveltejs/kit/pull/340))
- 2860065: Handle assets path when prerendering ([#341](https://github.com/sveltejs/kit/pull/341))

## 1.0.0-next.27

### Patch Changes

- Fail build if prerender errors
- Hide logging behind --verbose option

## 1.0.0-next.26

### Patch Changes

- Fix svelte-announcer CSS

## 1.0.0-next.25

### Patch Changes

- Surface stack traces for endpoint/page rendering errors

## 1.0.0-next.24

### Patch Changes

- 26643df: Account for config.paths when prerendering ([#322](https://github.com/sveltejs/kit/pull/322))

## 1.0.0-next.23

### Patch Changes

- 9b758aa: Upgrade to Snowpack 3 ([#321](https://github.com/sveltejs/kit/pull/321))

## 1.0.0-next.22

### Patch Changes

- bb68595: use readFileSync instead of createReadStream ([#320](https://github.com/sveltejs/kit/pull/320))

## 1.0.0-next.21

### Patch Changes

- 217e4cc: Set paths to empty string before prerender ([#317](https://github.com/sveltejs/kit/pull/317))

## 1.0.0-next.20

### Patch Changes

- ccf4aa7: Implement prerender config ([#315](https://github.com/sveltejs/kit/pull/315))

## 1.0.0-next.19

### Patch Changes

- deda984: Make navigating store contain from and to properties ([#313](https://github.com/sveltejs/kit/pull/313))

## 1.0.0-next.18

### Patch Changes

- c29b61e: Announce page changes ([#311](https://github.com/sveltejs/kit/pull/311))
- 72da270: Reset focus properly ([#309](https://github.com/sveltejs/kit/pull/309))

## 1.0.0-next.17

### Patch Changes

- f7dea55: Set process.env.NODE_ENV when invoking via the CLI ([#304](https://github.com/sveltejs/kit/pull/304))

## 1.0.0-next.16

### Patch Changes

- Remove temporary logging
- Add sveltekit:prefetch and sveltekit:noscroll

## 1.0.0-next.15

### Patch Changes

- 6d1bb11: Fix AMP CSS ([#286](https://github.com/sveltejs/kit/pull/286))
- d8b53af: Ignore $layout and $error files when finding static paths
- Better scroll tracking

## 1.0.0-next.14

### Patch Changes

- Fix dev loader

## 1.0.0-next.13

### Patch Changes

- 1ea4d6b: More robust CSS extraction ([#279](https://github.com/sveltejs/kit/pull/279))

## 1.0.0-next.12

### Patch Changes

- e7c88dd: Tweak AMP validation screen

## 1.0.0-next.11

### Patch Changes

- a31f218: Fix SSR loader invalidation ([#277](https://github.com/sveltejs/kit/pull/277))

## 1.0.0-next.10

### Patch Changes

- 8b14d29: Omit svelte-data scripts from AMP pages ([#276](https://github.com/sveltejs/kit/pull/276))

## 1.0.0-next.9

### Patch Changes

- f5fa223: AMP support ([#274](https://github.com/sveltejs/kit/pull/274))
- 47f2ee1: Always remove trailing slashes ([#267](https://github.com/sveltejs/kit/pull/267))
- 1becb94: Replace preload with load

## 1.0.0-next.8

### Patch Changes

- 15dd751: Use meta http-equiv=refresh ([#256](https://github.com/sveltejs/kit/pull/256))
- be7e031: Fix handling of static files ([#258](https://github.com/sveltejs/kit/pull/258))
- ed6b8fd: Implement \$app/env ([#251](https://github.com/sveltejs/kit/pull/251))

## 1.0.0-next.7

### Patch Changes

- 76705b0: make HMR work outside localhost ([#246](https://github.com/sveltejs/kit/pull/246))

## 1.0.0-next.6

### Patch Changes

- 0e45255: Move options behind kit namespace, change paths -> kit.files ([#236](https://github.com/sveltejs/kit/pull/236))
- fa7f2b2: Implement live bindings for SSR code ([#245](https://github.com/sveltejs/kit/pull/245))

## 1.0.0-next.5

### Patch Changes

- Return dependencies from render

## 1.0.0-next.4

### Patch Changes

- af01b0d: Move renderer out of app assets folder

## 1.0.0-next.3

### Patch Changes

- Add paths to manifest, for static prerendering

## 1.0.0-next.2

### Patch Changes

- Fix typo causing misnamed assets folder

## 1.0.0-next.1

### Patch Changes

- a4bc090: Transform exported functions correctly ([#225](https://github.com/sveltejs/kit/pull/225))
- 00bbf98: Fix nested layouts ([#227](https://github.com/sveltejs/kit/pull/227))

## 0.0.31-next.0

### Patch Changes

- ffd7bba: Fix SSR cache invalidation ([#217](https://github.com/sveltejs/kit/pull/217))

## 0.0.30

### Patch Changes

- Add back stores(), but with deprecation warning
- Rename stores.preloading to stores.navigating
- Rewrite routing logic

## 0.0.29

### Patch Changes

- 10872cc: Normalize request.query ([#196](https://github.com/sveltejs/kit/pull/196))

## 0.0.28

### Patch Changes

- Add svelte-kit start command

## 0.0.27

### Patch Changes

- rename CLI to svelte-kit
- 0904e22: rename svelte CLI to svelte-kit ([#186](https://github.com/sveltejs/kit/pull/186))
- Validate route responses
- Make paths and target configurable

## 0.0.26

### Patch Changes

- b475ed4: Overhaul adapter API - fixes #166 ([#180](https://github.com/sveltejs/kit/pull/180))
- Updated dependencies [b475ed4]
  - @sveltejs/app-utils@0.0.18

## 0.0.25

### Patch Changes

- Updated dependencies [3bdf33b]
  - @sveltejs/app-utils@0.0.17

## 0.0.24

### Patch Changes

- 67eaeea: Move app-utils stuff into subpackages
- 7f8df30: Move kit runtime code, expose via \$app aliases
- Updated dependencies [67eaeea]
  - @sveltejs/app-utils@0.0.16

## 0.0.23

### Patch Changes

- a163000: Parse body on incoming requests
- a346eab: Copy over latest Sapper router code ([#6](https://github.com/sveltejs/kit/pull/6))
- Updated dependencies [a163000]
  - @sveltejs/app-utils@0.0.15

## 0.0.22

### Patch Changes

- Force bump version

## 0.0.21

### Patch Changes

- Build setup entry point
- Work around pkg.exports constraint
- Respond with 500s if render fails
- Updated dependencies [undefined]
- Updated dependencies [undefined]
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.14

## 0.0.20

### Patch Changes

- Pass setup module to renderer
- Bump Snowpack version
- Updated dependencies [undefined]
- Updated dependencies [96c06d8]
  - @sveltejs/app-utils@0.0.13

## 0.0.19

### Patch Changes

- fa9d7ce: Handle import.meta in SSR module loader
- 0320208: Rename 'server route' to 'endpoint'
- b9444d2: Update to Snowpack 2.15
- 5ca907c: Use shared mkdirp helper
- Updated dependencies [0320208]
- Updated dependencies [5ca907c]
  - @sveltejs/app-utils@0.0.12

## 0.0.18

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.11

## 0.0.17

### Patch Changes

- 19323e9: Update Snowpack
- Updated dependencies [19323e9]
  - @sveltejs/app-utils@0.0.10

## 0.0.16

### Patch Changes

- Updated dependencies [90a98ae]
  - @sveltejs/app-utils@0.0.9

## 0.0.15

### Patch Changes

- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.8

## 0.0.14

### Patch Changes

- various
- Updated dependencies [undefined]
  - @sveltejs/app-utils@0.0.7

'''
'''--- packages/kit/README.md ---
# The fastest way to build Svelte apps

This is the [SvelteKit](https://svelte.dev/docs/kit) framework and CLI.

The quickest way to get started is via the [sv](https://npmjs.com/package/sv) package:

```bash
npx sv create my-app
cd my-app
npm install
npm run dev
```

See the [documentation](https://svelte.dev/docs/kit) to learn more.

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/kit/CHANGELOG.md).

'''
'''--- packages/kit/src/core/adapt/fixtures/basic/static/answer.md ---
42

'''
'''--- packages/kit/src/types/synthetic/$env+dynamic+private.md ---
This module provides access to runtime environment variables, as defined by the platform you're running on. For example if you're using [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).

This module cannot be imported into client-side code.

Dynamic environment variables cannot be used during prerendering.

```ts
import { env } from '$env/dynamic/private';
console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE);
```

> In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this behavior will depend on your adapter.

'''
'''--- packages/kit/src/types/synthetic/$env+dynamic+public.md ---
Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only includes variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.

Note that public dynamic environment variables must all be sent from the server to the client, causing larger network requests — when possible, use `$env/static/public` instead.

Dynamic environment variables cannot be used during prerendering.

```ts
import { env } from '$env/dynamic/public';
console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE);
```

'''
'''--- packages/kit/src/types/synthetic/$env+static+private.md ---
Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from `.env` files and `process.env`. Like [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be imported into client-side code. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).

_Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values exported from this module are statically injected into your bundle at build time, enabling optimisations like dead code elimination.

```ts
import { API_KEY } from '$env/static/private';
```

Note that all environment variables referenced in your code should be declared (for example in an `.env` file), even if they don't have a value until the app is deployed:

```
MY_FEATURE_FLAG=""
```

You can override `.env` values from the command line like so:

```bash
MY_FEATURE_FLAG="enabled" npm run dev
```

'''
'''--- packages/kit/src/types/synthetic/$env+static+public.md ---
Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that it only includes environment variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.

Values are replaced statically at build time.

```ts
import { PUBLIC_BASE_URL } from '$env/static/public';
```

'''
'''--- packages/kit/src/types/synthetic/$lib.md ---
This is a simple alias to `src/lib`, or whatever directory is specified as [`config.kit.files.lib`](https://svelte.dev/docs/kit/configuration#files). It allows you to access common components and utility modules without `../../../../` nonsense.

### `$lib/server`

A subdirectory of `$lib`. SvelteKit will prevent you from importing any modules in `$lib/server` into client-side code. See [server-only modules](https://svelte.dev/docs/kit/server-only-modules).

'''
'''--- packages/kit/test/apps/options-2/README.md ---
This app exists to test options that are equivalent with the ones specified in the other `options` test app.

'''
'''--- packages/kit/test/apps/options/source/pages/custom-extensions/[slug]/+page.svelte.md ---
<script>import { page } from '$app/stores';</script>

<h2>{$page.params.slug.toUpperCase()}</h2>

'''
'''--- packages/package/CHANGELOG.md ---
# @sveltejs/package

## 2.3.7
### Patch Changes

- docs: update URLs for new svelte.dev site ([#12857](https://github.com/sveltejs/kit/pull/12857))

## 2.3.6
### Patch Changes

- docs: demonstrate sv migrate over prior commands ([#12840](https://github.com/sveltejs/kit/pull/12840))

## 2.3.5
### Patch Changes

- fix: use input tsconfig when calling emitDts ([#12612](https://github.com/sveltejs/kit/pull/12612))

- chore(deps): update dependency chokidar to v4 ([#12671](https://github.com/sveltejs/kit/pull/12671))

## 2.3.4
### Patch Changes

- chore: configure provenance in a simpler manner ([#12570](https://github.com/sveltejs/kit/pull/12570))

## 2.3.3
### Patch Changes

- chore: package provenance ([#12567](https://github.com/sveltejs/kit/pull/12567))

## 2.3.2

### Patch Changes

- chore: add keywords for discovery in npm search ([#12330](https://github.com/sveltejs/kit/pull/12330))

## 2.3.1

### Patch Changes

- fix: don't strip `lang="ts"` tag in Svelte 5 ([#12080](https://github.com/sveltejs/kit/pull/12080))

## 2.3.0

### Minor Changes

- feat: add option to specify the tsconfig/jsconfig ([#11698](https://github.com/sveltejs/kit/pull/11698))

## 2.2.7

### Patch Changes

- chore: update chokidar to 3.6.0 ([#11811](https://github.com/sveltejs/kit/pull/11811))

## 2.2.6

### Patch Changes

- chore: bump svelte2tsx dependency to support generating types for `.svelte.js/ts` files ([#11619](https://github.com/sveltejs/kit/pull/11619))

## 2.2.5

### Patch Changes

- fix: improve warning when encountering import.meta.env ([#11440](https://github.com/sveltejs/kit/pull/11440))

## 2.2.4

### Patch Changes

- chore: update primary branch from master to main ([`47779436c5f6c4d50011d0ef8b2709a07c0fec5d`](https://github.com/sveltejs/kit/commit/47779436c5f6c4d50011d0ef8b2709a07c0fec5d))

## 2.2.3

### Patch Changes

- fix: overwrite nodenext option when transpiling ([#11092](https://github.com/sveltejs/kit/pull/11092))

## 2.2.2

### Patch Changes

- fix: prevent crash on errors in watch mode ([#10628](https://github.com/sveltejs/kit/pull/10628))

## 2.2.1

### Patch Changes

- fix: delay emptying `dist/` folder ([#10514](https://github.com/sveltejs/kit/pull/10514))

## 2.2.0

### Minor Changes

- feat: use Svelte 4 typings when packaging if dependencies allow it ([#10328](https://github.com/sveltejs/kit/pull/10328))

## 2.1.0

### Minor Changes

- feat: support Svelte 4 ([#10225](https://github.com/sveltejs/kit/pull/10225))

## 2.0.2

### Patch Changes

- fix: don't emit false positive export condition warning ([#9109](https://github.com/sveltejs/kit/pull/9109))

## 2.0.1

### Patch Changes

- fix: print version when running `svelte-package --version` ([#9078](https://github.com/sveltejs/kit/pull/9078))

## 2.0.0

### Major Changes

- breaking: remove `package.json` generation and package options from `svelte.config.js`. New default output directory is `dist`. Read the migration guide at https://github.com/sveltejs/kit/pull/8922 to learn how to update ([#8922](https://github.com/sveltejs/kit/pull/8922))

## 1.0.2

### Patch Changes

- chore: update svelte2tsx ([`50a3c5a6`](https://github.com/sveltejs/kit/commit/50a3c5a6d1282c64422e80fe19b352c14e41c853))

## 1.0.1

### Patch Changes

- fix: explicitly mark Node 17.x as not supported ([#8174](https://github.com/sveltejs/kit/pull/8174))

## 1.0.0

### Major Changes

First major release, see below for the history of changes that lead up to this.
Starting from now all releases follow semver and changes will be listed as Major/Minor/Patch

## 1.0.0-next.6

### Patch Changes

- feat: warn if svelte not found in dependencies or peerDependencies ([#7685](https://github.com/sveltejs/kit/pull/7685))

## 1.0.0-next.5

### Patch Changes

- fix check for undefined on application/ strip ([#6932](https://github.com/sveltejs/kit/pull/6932))

## 1.0.0-next.4

### Patch Changes

- fix: don't strip `type="application/.."` tags ([#6887](https://github.com/sveltejs/kit/pull/6887))

## 1.0.0-next.3

### Patch Changes

- feat: Support aliases set through `kit.alias` ([#6350](https://github.com/sveltejs/kit/pull/6350))

## 1.0.0-next.2

### Patch Changes

- breaking: require Node 16.14 ([#6388](https://github.com/sveltejs/kit/pull/6388))

'''
'''--- packages/package/README.md ---
# The fastest way to build Svelte packages

[Build Svelte packages](https://svelte.dev/docs/kit/packaging) in correctly packaged format.

The quickest way to get started is via the [sv](https://npmjs.com/package/sv) package:

```bash
npm sv create my-app
cd my-app
npm install
npm run dev
```

See the [documentation](https://svelte.dev/docs/kit/packaging) to learn more.

## Changelog

[The Changelog for this package is available on GitHub](https://github.com/sveltejs/kit/blob/main/packages/package/CHANGELOG.md).

'''
'''--- packages/package/test/fixtures/javascript/ReadMe.md ---
Hello

'''
'''--- playgrounds/README.md ---
You may use these playgrounds to experiment with your changes to SvelteKit. Make sure you don't check in any changes to this folder.

Alternatively, clone the [kit-sandbox](https://github.com/sveltejs/kit-sandbox) repo next to the `kit` repo, and use `pnpm link` to link your dependencies. This way you can have multiple different sandbox projects in different branches, and you never need to worry about accidentally committing throwaway code.

'''